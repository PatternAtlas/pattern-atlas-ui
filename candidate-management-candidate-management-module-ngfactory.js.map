{"version":3,"sources":["./src/app/candidate-management/candidate-management-detail/candidate-management-detail.component.html","./src/app/candidate-management/candidate-management-detail/candidate-management-detail.component.ts","./src/app/candidate-management/candidate-management-list/candidate-management-list.component.html","./src/app/candidate-management/candidate-management-list/candidate-management-list.component.ts","./src/app/candidate-management/candidate-management.module.ts","./src/app/core/model/hal/pattern-language-model.model.ts"],"names":[],"mappings":"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","file":"candidate-management-candidate-management-module-ngfactory.js","sourcesContent":["<div class=\"container\" *ngIf=\"candidate\">\n    <div>\n        <td-text-editor [value]=\"candidateMarkdown\" [options]=\"options\" #textEditor id=\"textEditor\"></td-text-editor>\n    </div>\n    <div class=\"container-candidate\" *ngIf=\"!disabled\">\n        <div class=\"language-select\">\n            <mat-form-field>\n                <mat-label>Pattern Language</mat-label>\n                <mat-select [(ngModel)]=\"patternLanguageSelected\" name=\"patternLanguage\">\n                    <mat-option *ngFor=\"let language of patternLanguages\" [value]=\"language.id\">\n                        {{language.name}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    </div>\n    <div class=\"container-rating\">\n        <pp-rating [rating]=\"candidate.rating\" (userRatingCurrent)=\"updateRating($event)\"> </pp-rating>\n    </div>\n    <div>\n        <button mat-flat-button type=\"button\" color=\"primary\" (click)=\"create()\">Save</button>\n        <button mat-flat-button type=\"button\" color=\"primary\" (click)=\"exit()\">Exit</button>\n    </div>\n    <div>\n        <pp-comment-list [data]=\"candidate.comments\" (createComment)=\"createComment($event)\"\n            (commentRating)=\"updateCommentRating($event)\"></pp-comment-list>\n    </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { IssueManagementStore } from 'src/app/core/issue-management/_store/issue-management-store';\nimport { TdTextEditorComponent } from '@covalent/text-editor';\nimport { PatternLanguageService } from 'src/app/core/service/pattern-language.service';\nimport PatternLanguageModel from 'src/app/core/model/hal/pattern-language-model.model';\nimport { Rating } from 'src/app/core/model/rating.enum';\nimport { Candidate, CandidateManagementService } from 'src/app/core/candidate-management';\n\n@Component({\n  selector: 'pp-candidate-management-detail',\n  templateUrl: './candidate-management-detail.component.html',\n  styleUrls: ['./candidate-management-detail.component.scss']\n})\nexport class CandidateManagementDetailComponent implements OnInit {\n\n  candidateMarkdown: any;\n  options: any = {};\n  defaultSections = ['# Candidate Name\\n', '## Icon\\n', '## Context\\n', '## Driving Question\\n', '## Solution\\n']\n  candidate: Candidate;\n\n  @ViewChild('textEditor') private _textEditor: TdTextEditorComponent;\n\n  private nameRegex = /\\s(.*?)\\n/;\n\n  public patternLanguages: PatternLanguageModel[];\n  public patternLanguageSelected: string;\n\n  constructor(\n    private router: Router,\n    private activeRoute: ActivatedRoute,\n    public issueStore: IssueManagementStore,\n    private candidateService: CandidateManagementService,\n    private patternLanguageService: PatternLanguageService,\n  ) { }\n\n  ngOnInit(): void {\n    this.getPatternLanguages();\n\n    this.activeRoute.params.subscribe(params => {\n      const name = params.name;\n      if (name && this.router.url.includes('/create') && window.history.state.data) {\n        this.candidate = window.history.state.data as Candidate;\n        this.patternLanguageSelected = this.candidate.patternLanguageId;\n        this.candidateMarkdown =\n          `# ${this.candidate.name}\\n` +\n          this.defaultSections[1] +\n          this.defaultSections[2] +\n          `${this.candidate.content}\\n` +\n          this.defaultSections[3] +\n          this.defaultSections[4];\n\n      } else if (name && this.router.url.includes('/edit') && window.history.state.data) {\n        this.candidate = window.history.state.data as Candidate;\n        this.patternLanguageSelected = this.candidate.patternLanguageId;\n        this.candidateMarkdown = this.candidate.content;\n      } else if (!name && this.router.url.includes('/create') && !window.history.state.data) {\n        this.candidate = new Candidate()\n        this.candidateMarkdown = this.defaultSections.join('');\n      } else if (name && this.router.url.includes('/detail') && window.history.state.data) {\n        this.candidate = window.history.state.data as Candidate;\n        this.patternLanguageSelected = this.candidate.patternLanguageId;\n        this.candidateMarkdown = this.candidate.content;\n      }\n    })\n  }\n\n  getPatternLanguages() {\n    this.patternLanguageService.getPatternLanguages().subscribe(result => {\n      console.log(result);\n      this.patternLanguages = result;\n    })\n  }\n\n  create() {\n    console.log(this._textEditor.value);\n    this.candidate.name = this.nameRegex.exec(this._textEditor.value)[1];\n    this.candidate.content = this._textEditor.value;\n    this.candidate.patternLanguageId = this.patternLanguageSelected;\n    console.log(this.candidate);\n\n    this.candidateService.createCandidate(this.candidate, this.patternLanguageSelected).subscribe(result => {\n      console.log('created canddiate: ', result);\n    })\n  }\n\n  update() {\n    this.candidateService.updateCandidate(this.candidate).subscribe(result => {\n      console.log(result);\n    })\n  }\n\n  delete() {\n   \n  }\n\n  createComment(candidateComment: Comment) {\n   \n  }\n\n  updateRating(rating: Rating) {\n   \n  }\n\n  updateCommentRating(issueCommentRatingEvent: any) {\n    console.log(issueCommentRatingEvent);\n    \n  }\n\n  exit() {\n    this.router.navigate(['candidate/']);\n  }\n\n}\n","<pp-action-button-bar [addButtonText]=\"'Add'\" [goBackButton]=\"false\" [reloadButton]=\"true\"\n    (addClicked)=\"createCandidate()\" (reloadClicked)=\"getAll()\"></pp-action-button-bar>\n<mat-accordion *ngFor=\"let language of patternLanguages\">\n    <mat-expansion-panel [expanded]=\"true\">\n        <mat-expansion-panel-header>\n            <mat-panel-title>\n                {{language.name}}\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <div class=\"container\">\n            <ng-container *ngFor=\"let candidate of candidates\">\n                <mat-card class=\"landing-card\" *ngIf=\"(candidate.patternLanguageId == language.id)\">\n                    <mat-card-header>\n                        <mat-card-title>{{ candidate.name }}</mat-card-title>\n                        <mat-card-subtitle> Language: {{candidate.patternLanguageName}}</mat-card-subtitle>\n                    </mat-card-header>\n                    <img mat-card-image src=\"//via.placeholder.com/200x300\" alt=\"Placholder image\">\n                    <mat-card-content>\n                        <p>\n                            {{ candidate.content }}\n                        </p>\n                    </mat-card-content>\n                    <mat-card-actions>\n                        <button mat-flat-button color=\"primary\" type=\"button\" (click)=\"candidateDetail(candidate)\"\n                            matTooltip=\"Open candidate\">\n                            <mat-icon>launch</mat-icon>\n                            Detail\n                        </button>&nbsp;\n                        <button mat-flat-button color=\"primary\" type=\"button\" (click)=\"candidateDetail(candidate)\"\n                            matTooltip=\"Edit candidate\">\n                            <mat-icon>edit</mat-icon>\n                            Edit\n                        </button>&nbsp;\n                    </mat-card-actions>\n                </mat-card>\n            </ng-container>\n        </div>\n    </mat-expansion-panel>\n</mat-accordion>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PatternLanguageService } from 'src/app/core/service/pattern-language.service';\nimport PatternLanguageModel from 'src/app/core/model/hal/pattern-language-model.model';\nimport { CandidateManagementService, Candidate } from 'src/app/core/candidate-management';\n\n@Component({\n  selector: 'pp-candidate-management-list',\n  templateUrl: './candidate-management-list.component.html',\n  styleUrls: ['./candidate-management-list.component.scss']\n})\nexport class CandidateManagementListComponent implements OnInit {\n\n  candidates: Candidate[];\n  public patternLanguages: PatternLanguageModel[];\n\n  constructor(\n    private candidateService: CandidateManagementService,\n    private router: Router,\n    private patternLanguageService: PatternLanguageService,\n  ) { }\n\n  ngOnInit(): void {\n    this.getAll();\n    this.getPatternLanguages();\n  }\n\n  getAll() {\n    this.candidateService.getAllCandidates().subscribe(result => {\n      console.log(result);\n      this.candidates = result;\n    })\n  }\n\n  getPatternLanguages() {\n    this.patternLanguageService.getPatternLanguages().subscribe(result => {\n      console.log(result);\n      const none = new PatternLanguageModel()\n      none.name = 'NONE';\n      none.id = null;\n      this.patternLanguages = [none].concat(result);\n      console.log(this.patternLanguages);\n    })\n  }\n\n  candidateDetail(candidate) {\n    console.log(candidate);\n    this.router.navigate(['candidate/edit',  candidate.name], {state: {data: candidate }});\n  }\n\n  createCandidate() {\n    this.router.navigate(['candidate/create']);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CoreModule } from '../core/core.module';\nimport { RouterModule } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { CandidateManagementListComponent } from './candidate-management-list/candidate-management-list.component';\nimport { CandidateManagementDetailComponent } from './candidate-management-detail/candidate-management-detail.component';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatExpansionModule } from '@angular/material/expansion';\n// Routing\nimport { AuthGuardService as AuthGuard } from '../authentication/_services/auth-guard.service'\nimport { UserRole } from '../core/user-management';\n\n\nexport const CANDIATE_ROTUES = [\n  {\n    path: '',\n    children: [\n      {\n        path: '',\n        component: CandidateManagementListComponent,\n      },\n      {\n        path: 'detail/:name',\n        component: CandidateManagementDetailComponent,\n        // Will be used in the future\n        // canActivate: [AuthGuard],\n        // data: { role: UserRole.MEMBER }  \n      },\n      {\n        path: 'edit/:name',\n        component: CandidateManagementDetailComponent,\n        // Will be used in the future\n        // canActivate: [AuthGuard],\n        // data: { role: UserRole.MEMBER }  \n      },\n      {\n        path: 'create',\n        component: CandidateManagementDetailComponent,\n        // Will be used in the future\n        // canActivate: [AuthGuard],\n        // data: { role: UserRole.MEMBER }  \n      },\n      {\n        path: 'create/:name',\n        component: CandidateManagementDetailComponent,\n        // Will be used in the future\n        // canActivate: [AuthGuard],\n        // data: { role: UserRole.MEMBER }  \n      }\n    ]\n  }\n];\n\n\n@NgModule({\n  declarations: [\n    CandidateManagementListComponent,\n    CandidateManagementDetailComponent\n  ],\n  imports: [\n    CommonModule,\n    CoreModule,\n    RouterModule.forChild(CANDIATE_ROTUES),\n    //Material\n    MatButtonModule,\n    MatSelectModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatCardModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatExpansionModule\n  ],\n  providers: [\n  ]\n})\nexport class CandidateManagementModule { }\n","/*\n * Copyright (c) 2019 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport UriEntity from './uri-entity.model';\nimport { PatternLanguageResource } from './hal-resources.interface';\n\nclass PatternLanguageModel extends UriEntity {\n    logo: string;\n    patternCount: number;\n    _links: PatternLanguageResource;\n}\n\nexport default PatternLanguageModel;\n"],"sourceRoot":"webpack:///"}