{"version":3,"sources":["./src/$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/core/component/action-button-bar/action-button-bar.component.html","./src/app/core/component/action-button-bar/action-button-bar.component.ts","./src/app/core/component/cardrenderer/card-renderer.component.html","./src/app/core/component/cardrenderer/card-renderer.component.ts","./src/app/core/component/create-edit-pattern-language/create-edit-pattern-language.component.html","./src/app/core/component/create-edit-pattern-language/create-edit-pattern-language.component.ts","./src/app/core/component/create-pattern-relation/create-pattern-relation.component.html","./src/app/core/component/create-pattern-relation/create-pattern-relation.component.ts","./src/app/core/component/creative-license-footer/creative-license-footer.component.html","./src/app/core/component/creative-license-footer/creative-license-footer.component.ts","./src/app/core/component/delete-pattern-relation/delete-pattern-relation.component.html","./src/app/core/component/delete-pattern-relation/delete-pattern-relation.component.ts","./src/app/core/component/divider/divider.component.html","./src/app/core/component/divider/divider.component.ts","./src/app/core/component/graph-display/graph-display.component.html","./src/app/core/component/graph-display/graph-display.component.ts","./src/app/core/component/markdown-content-container/interfaces/DataRenderingComponent.interface.ts","./src/app/core/component/markdown-content-container/markdown-pattern-sectioncontent/markdown-pattern-section-content.component.html","./src/app/core/component/markdown-content-container/markdown-pattern-sectioncontent/markdown-pattern-section-content.component.ts","./src/app/core/component/markdown-content-container/pattern-property.directive.ts","./src/app/core/component/md-editor/md-editor.component.html","./src/app/core/component/md-editor/md-editor.component.ts","./src/app/core/component/navigate-back/navigate-back.component.html","./src/app/core/component/navigate-back/navigate-back.component.ts","./src/app/core/component/process-oauth-callback/process-oauth-callback.component.html","./src/app/core/component/process-oauth-callback/process-oauth-callback.component.ts","./src/app/core/component/toggle-renderer/toggle-renderer.component.html","./src/app/core/component/toggle-renderer/toggle-renderer.component.ts","./src/app/core/core.module.ts","./src/app/core/default-pattern-renderer/default-pattern-renderer.component.html","./src/app/core/default-pattern-renderer/default-pattern-renderer.component.ts","./src/app/core/default-pl-renderer/default-pl-renderer.component.html","./src/app/core/default-pl-renderer/default-pl-renderer.component.ts","./src/app/core/directives/emit-event-on-added-edge.directive.ts","./src/app/core/directives/emit-event-on-keyup.directive.ts","./src/app/core/model/hal/add-directed-edge-to-view-request.ts","./src/app/core/model/hal/add-undirected-edge-to-view-request.ts","./src/app/core/model/hal/create-directed-edge-request.ts","./src/app/core/model/hal/create-undirected-edge-request.ts","./src/app/core/model/hal/directed-edge.model.ts","./src/app/core/model/hal/edge.model.ts","./src/app/core/model/hal/pattern-language.model.ts","./src/app/core/model/hal/pattern-schema.model.ts","./src/app/core/model/hal/pattern-section-schema.model.ts","./src/app/core/model/hal/undirected-edge.model.ts","./src/app/core/model/hal/uri-entity.model.ts","./src/app/core/model/pattern-relation-descriptor-direction.enum.ts","./src/app/core/service/component-registry.service.ts","./src/app/core/service/pattern-language.service.ts","./src/app/core/service/pattern-relation-descriptor.service.ts","./src/app/core/service/pattern-view.service.ts","./src/app/core/service/pattern.service.ts","./src/app/core/service/validation.service.ts","./src/app/core/util/uri-converter.ts","./src/app/globals.ts","./src/app/graph/graph.module.ts","./src/app/graph/model/group.ts","./src/app/graph/model/index.ts","./src/app/graph/model/link.ts","./src/app/graph/model/network-graph.ts","./src/app/graph/model/node-info.ts","./src/app/graph/model/node.ts","./src/app/graph/model/pattern-relation.ts","./src/app/graph/model/pattern.ts","./src/app/graph/service/d3.service.ts","./src/app/page-not-found.component.html","./src/app/page-not-found.component.ts","./src/app/pattern-language-management/create-pattern/create-pattern.component.html","./src/app/pattern-language-management/create-pattern/create-pattern.component.ts","./src/app/pattern-language-management/pattern-container/pattern-container.component.html","./src/app/pattern-language-management/pattern-container/pattern-container.component.ts","./src/app/pattern-language-management/pattern-container/pattern-container.directive.ts","./src/app/pattern-language-management/pattern-language-container/pattern-language-container.component.html","./src/app/pattern-language-management/pattern-language-container/pattern-language-container.component.ts","./src/app/pattern-language-management/pattern-language-container/pattern-language-container.directive.ts","./src/app/pattern-language-management/pattern-language-graph/pattern-language-graph.component.html","./src/app/pattern-language-management/pattern-language-graph/pattern-language-graph.component.ts","./src/app/pattern-language-management/pattern-language-management-routing.module.ts","./src/app/pattern-language-management/pattern-language-management.module.ts","./src/app/pattern-language-management/pattern-language-management/pattern-language-management-resolver.service.ts","./src/app/pattern-language-management/pattern-language-management/pattern-language-management.component.html","./src/app/pattern-language-management/pattern-language-management/pattern-language-management.component.ts","./src/app/pattern-view-management/add-to-view/add-to-view.component.html","./src/app/pattern-view-management/add-to-view/add-to-view.component.ts","./src/app/pattern-view-management/pattern-view-management-routing.module.ts","./src/app/pattern-view-management/pattern-view-management.module.ts","./src/app/pattern-view-management/pattern-view-management/pattern-view-management.component.html","./src/app/pattern-view-management/pattern-view-management/pattern-view-management.component.ts","./src/app/pattern-view-management/pattern-view-renderer/pattern-view-renderer.component.html","./src/app/pattern-view-management/pattern-view-renderer/pattern-view-renderer.component.ts","./src/environments/environment.ts","./src/main.ts","fs (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {PatternLanguageGraphComponent} from './pattern-language-management/pattern-language-graph/pattern-language-graph.component';\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {PageNotFoundComponent} from './page-not-found.component';\nimport {ProcessOauthCallbackComponent} from './core/component/process-oauth-callback/process-oauth-callback.component';\nimport {ToasterModule} from 'angular2-toaster';\n/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nconst routes: Routes = [\n    {\n        path: 'oauth-callback',\n        component: ProcessOauthCallbackComponent\n    }, {\n        path: '',\n        redirectTo: 'patternlanguages',\n        pathMatch: 'full'\n    },\n    {\n        path: 'graph',\n        component: PatternLanguageGraphComponent\n    },\n    {\n        path: '**',\n        component: PageNotFoundComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, {useHash: false, onSameUrlNavigation: 'reload'}), ToasterModule.forRoot()],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","<!--\n  ~ Copyright (c) 2018 University of Stuttgart.\n  ~\n  ~ See the NOTICE file(s) distributed with this work for additional\n  ~ information regarding copyright ownership.\n  ~\n  ~ This program and the accompanying materials are made available under the\n  ~ terms of the Eclipse Public License 2.0 which is available at\n  ~ http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n  ~ which is available at https://www.apache.org/licenses/LICENSE-2.0.\n  ~\n  ~ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n  -->\n\n<mat-toolbar color=\"primary\">\n    <mat-icon>library_books</mat-icon>\n    <span style=\"margin-left: 1rem\">PatternPedia</span>\n</mat-toolbar>\n<nav mat-tab-nav-bar>\n    <a mat-tab-link\n       [routerLink]=\"'/patternlanguages'\"\n       routerLinkActive #rla1=\"routerLinkActive\"\n       [active]=\"rla1.isActive\">\n        Pattern Languages\n    </a>\n    <a mat-tab-link\n       [routerLink]=\"'/patternviews'\"\n       routerLinkActive #rla2=\"routerLinkActive\"\n       [active]=\"rla2.isActive\">\n        Pattern Views\n    </a>\n</nav>\n\n<router-outlet></router-outlet>\n<toaster-container></toaster-container>\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'pp-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n    constructor() {\n    }\n\n\n}\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {PatternLanguageManagementModule} from './pattern-language-management/pattern-language-management.module';\nimport {CoreModule} from './core/core.module';\nimport {PageNotFoundComponent} from './page-not-found.component';\nimport {LandingPageComponent} from './landing-page.component';\n\nimport {HttpClientModule} from '@angular/common/http';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {PatternViewManagementModule} from './pattern-view-management/pattern-view-management.module';\nimport {NgxMdModule} from 'ngx-md';\nimport {CovalentTextEditorModule} from '@covalent/text-editor';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {CookieService} from 'ngx-cookie-service';\nimport {ToasterModule} from 'angular2-toaster';\nimport {MatInputModule} from '@angular/material/input';\nimport {FormsModule} from '@angular/forms';\nimport {FilterViewComponent} from './filter/component/filter-view/filter-view.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        PageNotFoundComponent,\n        LandingPageComponent,\n        FilterViewComponent\n    ],\n    imports: [\n        BrowserModule,\n        // NOTE: BrowserAnimationsModule issue https://github.com/angular/angular/issues/20290\n        BrowserAnimationsModule,\n        PatternLanguageManagementModule,\n        PatternViewManagementModule,\n        MatToolbarModule,\n        MatIconModule,\n        MatCardModule,\n        MatButtonModule,\n        MatIconModule,\n        MatTabsModule,\n        NgxMdModule,\n        CovalentTextEditorModule,\n        CoreModule,\n        HttpClientModule,\n        AppRoutingModule,\n        FlexLayoutModule,\n        ToasterModule.forRoot(),\n        MatInputModule,\n        FormsModule\n    ],\n    providers: [CookieService],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n\n","<mat-toolbar style=\"margin-bottom: 10px\">\n    <pp-navigate-back *ngIf=\"goBackButton\"></pp-navigate-back>\n\n    <span class=\"action-button\"><b>{{this.displayText}}</b></span>\n\n    <ng-content></ng-content>\n\n    <button (click)=\"reloadButtonClicked()\" *ngIf=\"reloadButton\" class=\"action-button\" color=\"accent\"\n            mat-raised-button>\n        <i class=\"material-icons\">autorenew</i> Reload\n    </button>\n\n    <button (click)=\"addButtonClicked()\" *ngIf=\"firstAddButton\" class=\"action-button\" color=\"accent\"\n            mat-raised-button>\n        <i class=\"material-icons\">add</i> {{addButtonText}}\n    </button>\n\n    <button style=\"margin-left: 0;\" (click)=\"secondAddButtonClicked()\" *ngIf=\"secondAddButton\" class=\"action-button\" color=\"accent\"\n            mat-raised-button>\n        <i class=\"material-icons\">add</i> {{secondAddButtonText}}\n    </button>\n</mat-toolbar>\n\n\n","import { ApplicationRef, ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n    selector: 'pp-action-button-bar',\n    templateUrl: './action-button-bar.component.html',\n    styleUrls: ['./action-button-bar.component.scss'],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class ActionButtonBarComponent implements OnInit {\n    @Output() addClicked = new EventEmitter<void>();\n    @Output() add2Clicked = new EventEmitter<void>();\n    @Output() reloadClicked = new EventEmitter<void>();\n    @Output() changedText = new EventEmitter<void>();\n    @Input() addButtonText: string;\n    @Input() reloadButton = false;\n    @Input() goBackButton = true;\n    @Input() secondAddButton: boolean;\n    @Input() firstAddButton = true;\n    @Input() secondAddButtonText: string;\n\n    @Input() displayText: string;\n\n    constructor(private cdr: ChangeDetectorRef,\n                private applicationRef: ApplicationRef) {\n    }\n\n    ngOnInit() {\n    }\n\n    addButtonClicked() {\n        this.addClicked.emit();\n    }\n\n    reloadButtonClicked() {\n        this.reloadClicked.emit();\n    }\n\n    secondAddButtonClicked() {\n        this.add2Clicked.emit();\n    }\n}\n","<div class=\"card-container\">\n    <mat-card (click)=\"navigate(entity)\"\n              *ngFor=\"let entity of uriEntities\"\n              class=\"card box\">\n        <mat-card-title style=\"margin-bottom: 1rem\">{{entity.name}}</mat-card-title>\n        <mat-card-content>\n            <img mat-card-image *ngIf=\"entity.iconUrl else noimage\" [src]=\"entity.iconUrl\">\n            <ng-template #noimage><img mat-card-image src=\"//via.placeholder.com/350x150\"></ng-template>\n        </mat-card-content>\n        <mat-card-footer *ngIf=\"showLinks\">\n            <span [matBadge]=\"getLinkCount(entity._links.ingoingDirectedEdges)\"\n                  class=\"badge-span\"\n                  matBadgeOverlap=\"false\">\n                <mat-icon>trending_flat</mat-icon>\n            </span>\n            <mat-icon class=\"flip\">trending_flat</mat-icon>\n            <span [matBadge]=\"getLinkCount(entity._links.outgoingDirectedEdges)\"\n                  class=\"badge-span\"\n                  matBadgeOverlap=\"false\">\n            </span>\n            <span [matBadge]=\"getLinkCount(entity._links.undirectedEdges)\" matBadgeOverlap=\"false\">\n                <mat-icon>compare_arrows</mat-icon>\n            </span>\n        </mat-card-footer>\n    </mat-card>\n</div>\n","import {Component, EventEmitter, Input, NgZone, Output} from '@angular/core';\nimport {UriConverter} from '../../util/uri-converter';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport UriEntity from '../../model/hal/uri-entity.model';\nimport Pattern from '../../model/hal/pattern.model';\nimport {HalLink} from '../../model/hal/hal-link.interface';\n\n@Component({\n    selector: 'pp-card-renderer',\n    templateUrl: './card-renderer.component.html',\n    styleUrls: ['./card-renderer.component.scss']\n})\nexport class CardRendererComponent {\n\n    @Input() uriEntities: Array<Pattern>;\n    @Input() showLinks = true;\n    @Output() createEntityClicked: EventEmitter<void> = new EventEmitter<void>();\n\n    constructor(private zone: NgZone,\n                private router: Router,\n                private activatedRoute: ActivatedRoute) {\n    }\n\n    navigate(pattern: UriEntity): void {\n        this.zone.run(() => {\n            this.router.navigate([UriConverter.doubleEncodeUri(pattern.id)], {relativeTo: this.activatedRoute});\n        });\n    }\n\n    getLinkCount(directedEdges: HalLink[] | HalLink): number {\n        if (!directedEdges) {\n            return 0;\n        }\n        return Array.isArray(directedEdges) ? directedEdges.length : 1;\n    }\n}\n","<div style=\"display: flex; justify-content: space-between; align-items: baseline\">\n    <h1 mat-dialog-title>Create {{isPatternLanguageDialog ? 'Pattern Language' : 'Pattern View'}}</h1>\n    <button mat-flat-button (click)=\"close()\" tabindex=\"-1\">\n        <i class=\"material-icons\">close</i>\n    </button>\n</div>\n<div mat-dialog-content [formGroup]=\"patternLanguageForm\">\n    <div fxLayout=\"column\" fxLayoutAlign=\"space-around start\">\n        <mat-card fxLayout=\"column\" fxLayoutAlign=\"space-around\" style=\"margin: 10px;\">\n            <mat-form-field appearance=\"outline\" style=\"width: 24em;\" [floatLabel]=\"'always'\">\n                <mat-label>{{isPatternLanguageDialog ? 'Pattern Language' : 'Pattern View'}} name</mat-label>\n                <input matInput formControlName=\"name\"\n                       placeholder=\"Enter the name of the {{ isPatternLanguageDialog ? 'Pattern Language' : 'Pattern View' }}\">\n                <mat-error *ngIf=\"saveRequested && name?.hasError('required')\">This field is mandatory.</mat-error>\n                <mat-error *ngIf=\"saveRequested && name?.hasError('pattern')\">\n                    Please use only alphanumeric characters, _ and spaces.\n                </mat-error>\n            </mat-form-field>\n\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n                <mat-form-field class=\"full-width\" appearance=\"outline\" style=\"width: 24em\" [floatLabel]=\"'always'\">\n                    <mat-label>Icon URL</mat-label>\n                    <input matInput formControlName=\"iconUrl\" placeholder=\"Enter URL of Icon\" type=\"url\">\n                    <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\" *ngIf=\"iconPreviewVisible\">\n                        <span class=\"label-preview\">Icon-Preview: </span>\n                        <div mat-card-avatar #iconPreview\n                             [ngStyle]=\"{ 'background-image': 'url(' + iconUrl?.value + ')'}\"\n                             class=\"example-header-image\"></div>\n                    </div>\n                    <mat-error *ngIf=\"saveRequested && iconUrl?.hasError('required')\">This field is mandatory.\n                    </mat-error>\n                    <mat-error *ngIf=\"saveRequested && iconUrl?.hasError('pattern')\">Please insert a valid URL.\n                    </mat-error>\n                </mat-form-field>\n            </div>\n\n            <div *ngIf=\"isPatternLanguageDialog\">\n                <h3>Sections</h3>\n                <mat-form-field appearance=\"outline\" style=\"width: 24em\" [floatLabel]=\"'always'\">\n                    <mat-label>New Section</mat-label>\n                    <input #sectionInput (keyup.enter)=\"addSection(sectionInput.value)\" matInput\n                           placeholder=\"Key in new Section and hit enter...\" [formControl]=\"sectionCtrl\">\n                </mat-form-field>\n                <mat-list matRipple cdkDropList [cdkDropListData]=\"sections\"\n                          [cdkDropListOrientation]=\"'vertical'\"\n                          (cdkDropListDropped)=\"dropSection($event)\">\n                    <mat-list-item matRipple *ngFor=\"let section of sections; last as last; let i = index\" cdkDrag>\n                        {{i + 1}}&nbsp;{{section}}\n                        <button mat-button color=\"warn\" (click)=\"removeSection(section)\"><i\n                                class=\"material-icons\">delete</i></button>\n                        <mat-divider [inset]=\"true\" *ngIf=\"!last\"></mat-divider>\n                    </mat-list-item>\n                </mat-list>\n            </div>\n        </mat-card>\n\n    </div>\n</div>\n\n<div mat-dialog-actions>\n    <button mat-raised-button (click)=\"close()\"><i\n            class=\"material-icons\">close</i> Close\n    </button>\n    <button mat-raised-button color=\"primary\" (click)=\"save()\"><i\n            class=\"material-icons\">save</i> Save {{isPatternLanguageDialog ? 'Pattern Language' : 'View'}}\n    </button>\n</div>\n","import {Component, EventEmitter, Inject, OnInit, Output} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {AbstractControl, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {debounceTime, distinctUntilChanged} from 'rxjs/internal/operators';\nimport {DialogPatternLanguageResult} from '../../../pattern-language-management/data/DialogPatternLanguageResult.interface';\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\nimport PatternLanguage from '../../model/hal/pattern-language.model';\nimport PatternSchema from '../../model/hal/pattern-schema.model';\nimport PatternSectionSchema from '../../model/hal/pattern-section-schema.model';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'pp-create-edit-pattern-language',\n  templateUrl: './create-edit-pattern-language.component.html',\n  styleUrls: ['./create-edit-pattern-language.component.scss']\n})\nexport class CreateEditPatternLanguageComponent implements OnInit {\n  sectionCtrl = new FormControl();\n  sections: Array<string> = ['Icon', 'Context', 'Driving Question', 'Solution'];\n  patternLanguageForm: FormGroup;\n  iconPreviewVisible = false;\n  saveRequested = false;\n  isPatternLanguageDialog = false;\n\n  @Output() saveClicked = new EventEmitter<DialogPatternLanguageResult>();\n\n  get name(): AbstractControl {\n    return this.patternLanguageForm.get('name');\n  }\n\n  get iconUrl(): AbstractControl {\n    return this.patternLanguageForm.get('iconUrl');\n  }\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: { isPatternLanguageCreation: boolean }, public dialogRef: MatDialogRef<CreateEditPatternLanguageComponent>,\n              private _fb: FormBuilder, private activatedRoute: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.isPatternLanguageDialog = this.data.isPatternLanguageCreation;\n    // tslint:disable-next-line:max-line-length\n    const urlRegex = /\\b((?:[a-z][\\w-]+:(?:\\/{1,3}|[a-z0-9%])|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}\\/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()\\[\\]{};:'\".,<>?«»“”‘’]))/i;\n    this.patternLanguageForm = this._fb.group({\n      name: ['', [Validators.required, Validators.pattern('[a-zA-Z0-9 _-]+')]],\n      iconUrl: ['', [Validators.pattern(urlRegex)]]\n    });\n\n    this.iconUrl.valueChanges.pipe(debounceTime(1000), distinctUntilChanged()).subscribe((urlValue) => {\n      this.iconPreviewVisible = urlValue && (urlValue.startsWith('https://') || urlValue.startsWith('http://'));\n    });\n  }\n\n  addSection(value: string) {\n    if ((value || '').trim()) {\n      if (this.sections.indexOf(value) < 0) {\n        this.sections.push(value.trim());\n        this.sectionCtrl.setValue(null);\n      }\n    }\n  }\n\n  dropSection(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.sections, event.previousIndex, event.currentIndex);\n  }\n\n  removeSection(section: string): void {\n    const index = this.sections.indexOf(section);\n    if (index >= 0) {\n      this.sections.splice(index, 1);\n    }\n  }\n\n  close(): void {\n    this.dialogRef.close();\n  }\n\n  save(): void {\n    this.saveRequested = true;\n    if (this.patternLanguageForm.valid) {\n\n      if (!this.isPatternLanguageDialog) {\n        this.saveClicked.emit({\n          dialogResult: {name: this.name.value}\n        });\n        this.dialogRef.close();\n        return;\n      }\n\n\n      const patternLanguage = new PatternLanguage();\n      patternLanguage.name = this.name.value;\n      patternLanguage.logo = this.iconUrl.value;\n      const patternSchema = new PatternSchema();\n      patternSchema.patternSectionSchemas = [];\n\n\n      for (let i = 0; i < this.sections.length; i++) {\n        const patternSectionSchema = new PatternSectionSchema();\n        patternSectionSchema.name = this.sections[i];\n        patternSectionSchema.label = this.sections[i];\n        patternSectionSchema.position = i;\n        patternSectionSchema.type = 'any';\n        patternSchema.patternSectionSchemas.push(patternSectionSchema);\n      }\n      patternLanguage.patternSchema = patternSchema;\n      this.saveClicked.emit({\n        dialogResult: patternLanguage\n      });\n      this.dialogRef.close();\n    }\n  }\n}\n","<h1 mat-dialog-title>Add a relation to another pattern</h1>\n<div mat-dialog-content [formGroup]=\"relationForm\">\n    <mat-form-field *ngIf=\"data.firstPattern; else chooseFirstPattern\">\n        <input type=\"text\" formControlName=\"firstPattern\"\n               matInput [value]=\"data.firstPattern.name\" readonly>\n    </mat-form-field>\n    <ng-template #chooseFirstPattern>\n        <mat-form-field>\n            <mat-select formControlName=\"firstPattern\">\n                <mat-option *ngFor=\"let pattern of data.patterns\"\n                            [value]=\"pattern\">\n                    {{pattern.name}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </ng-template>\n\n    <mat-form-field style=\"width: 4em;\" [floatLabel]=\"'always'\">\n        <mat-label>Direction</mat-label>\n        <mat-select formControlName=\"direction\">\n            <mat-select-trigger>\n                <i class=\"material-icons\"\n                   [ngClass]=\"{'flip': relationForm.value?.direction?.name === directionEnum.DirectedLeft}\">{{relationForm.value\n                    ? relationForm.value.direction?.icon : ''}}</i>\n            </mat-select-trigger>\n            <mat-option *ngFor=\"let type of types\" [value]=\"type\">\n                <i class=\"material-icons\"\n                   [ngClass]=\"{'flip': type?.name === directionEnum.DirectedLeft}\">{{type?.icon}}</i>\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-form-field>\n        <input type=\"text\" matInput formControlName=\"relationType\" placeholder=\"Relationtype\"\n               [matAutocomplete]=\"auto\">\n    </mat-form-field>\n\n    <mat-autocomplete #auto=\"matAutocomplete\">\n        <mat-option *ngFor=\"let type of relationTypes\" [value]=\"type\">{{type}}</mat-option>\n    </mat-autocomplete>\n\n    <mat-form-field *ngIf=\"data.secondPattern; else chooseSecondPattern\">\n        <input type=\"text\" formControlName=\"secondPattern\"\n               matInput [value]=\"data.secondPattern.name\" readonly>\n    </mat-form-field>\n    <ng-template #chooseSecondPattern>\n        <mat-form-field>\n            <mat-select formControlName=\"secondPattern\">\n                <mat-option *ngFor=\"let pattern of data.patterns\"\n                            [value]=\"pattern\">\n                    {{pattern.name}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </ng-template>\n    <mat-form-field style=\"display: block\">\n        <textarea matInput formControlName=\"description\" placeholder=\"Provide a description\"></textarea>\n    </mat-form-field>\n</div>\n<div mat-dialog-actions>\n    <button mat-button [mat-dialog-close]=\"null\">Close</button>\n    <button mat-button [mat-dialog-close]=\"mapDialogDataToEdge(relationForm.value)\" [disabled]=\"!relationForm?.valid\">\n        Save\n    </button>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {PatternRelationDescriptorDirection} from '../../model/pattern-relation-descriptor-direction.enum';\nimport Pattern from '../../model/hal/pattern.model';\nimport {DirectedEdgeModel} from '../../model/hal/directed-edge.model';\nimport {UndirectedEdgeModel} from '../../model/hal/undirected-edge.model';\nimport {PatternView} from '../../model/hal/pattern-view.model';\nimport PatternLanguage from '../../model/hal/pattern-language.model';\n\n@Component({\n    selector: 'pp-create-pattern-relation',\n    templateUrl: './create-pattern-relation.component.html',\n    styleUrls: ['./create-pattern-relation.component.scss']\n})\n\n\nexport class CreatePatternRelationComponent implements OnInit {\n\n    constructor(public dialogRef: MatDialogRef<CreatePatternRelationComponent>, @Inject(MAT_DIALOG_DATA) public data: DialogData, private fb: FormBuilder) {\n    }\n\n    directionEnum = PatternRelationDescriptorDirection;\n    patterns: Pattern[];\n    types = [{name: PatternRelationDescriptorDirection.DirectedRight, icon: 'trending_flat'},\n        {name: PatternRelationDescriptorDirection.DirectedLeft, icon: 'trending_flat'}, {\n            name: PatternRelationDescriptorDirection.UnDirected,\n            icon: 'compare_arrows'\n        }];\n    relationForm: FormGroup;\n    relationTypes = ['isRelatedTo', 'isUsedBefore', 'isUsedAfter', 'dependsOn', 'canBeUsedWith',\n        'cannotBeUsedWith', 'consistsOf', 'uses', 'usedIn', 'isAlternativeTo', 'isVariationOf'];\n\n\n    ngOnInit() {\n        this.relationForm = this.fb.group({\n            firstPattern: ['', [Validators.required]],\n            secondPattern: ['', [Validators.required]],\n            direction: ['', [Validators.required]],\n            relationType: ['', [Validators.required]],\n            description: ['', []],\n        });\n\n        if (this.data.firstPattern) {\n            this.relationForm.get('firstPattern').setValue(this.data.firstPattern);\n        }\n        if (this.data.secondPattern) {\n            this.relationForm.get('secondPattern').setValue(this.data.secondPattern);\n        }\n    }\n\n    close(): void {\n        this.dialogRef.close();\n    }\n\n    // adds a relation created by the dialog to the local data and returns whether this was successful (or not, e.g. when simply closing the dialog)\n    mapDialogDataToEdge(dialogResult: DialogDataResult): DirectedEdgeModel | UndirectedEdgeModel {\n        if (!dialogResult || !dialogResult.secondPattern || !dialogResult.direction) {\n            return null;\n        }\n        const type = dialogResult.relationType ? dialogResult.relationType : null;\n        const description = dialogResult.description ? dialogResult.description : null;\n        switch (dialogResult.direction.name) {\n            case PatternRelationDescriptorDirection.DirectedRight:\n                return new DirectedEdgeModel(dialogResult.firstPattern, dialogResult.secondPattern, this.data.patternLanguage, description, type,\n                    this.data.patternView);\n            case PatternRelationDescriptorDirection.DirectedLeft:\n                return new DirectedEdgeModel(dialogResult.secondPattern, dialogResult.firstPattern, this.data.patternLanguage, description, type,\n                    this.data.patternView);\n            case PatternRelationDescriptorDirection.UnDirected:\n                return new UndirectedEdgeModel(dialogResult.secondPattern, dialogResult.firstPattern, this.data.patternLanguage, description, type,\n                    this.data.patternView);\n        }\n        return null;\n\n    }\n\n}\n\nexport interface DialogData {\n    firstPattern?: Pattern;\n    secondPattern?: Pattern;\n    patterns: Pattern[];\n    patternLanguage: PatternLanguage;\n    patternView: PatternView;\n}\n\nexport interface PatternRelationDirection {\n    name: PatternRelationDescriptorDirection;\n    icon: string; // angular material icon name\n}\n\nexport interface DialogDataResult {\n    firstPattern: Pattern;\n    direction: PatternRelationDirection;\n    relationType?: string;\n    secondPattern: Pattern;\n    description?: string;\n}\n\n\n","<footer *ngIf=\"patternLanguage?.creativeCommonsReference\" class=\"center-content\">\n    <p><a rel=\"license\" href=\"http://creativecommons.org/licenses/by/4.0/\"><img\n            alt=\"Creative Commons Lizenzvertrag\"\n            style=\"border-width:0\"\n            src=\"https://i.creativecommons.org/l/by/4.0/88x31.png\"/></a>\n        <a rel=\"license\"\n           href=\"http://creativecommons.org/licenses/by/4.0/\"> {{patternLanguage?.creativeCommonsReference}}</a></p>\n</footer>\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'pp-creative-license-footer',\n    templateUrl: './creative-license-footer.component.html',\n    styleUrls: ['./creative-license-footer.component.css']\n})\nexport class CreativeLicenseFooterComponent implements OnInit {\n\n    @Input() patternLanguage;\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n}\n","<button class=\"close\" mat-button (click)=\"close()\">X</button>\n<h1 mat-dialog-title>Delete a relation</h1>\n<div mat-dialog-content>\n    <div *ngIf=\"this.data.type == 'ingoing' || this.data.type == 'outgoing'; then directedEdgeModel else undirectedEdgeModel\"></div>\n    <ng-template #directedEdgeModel>\n        <mat-accordion style=\"padding: 3px\">\n            <mat-expansion-panel *ngFor=\"let edge of this.currentEdges\">\n                <mat-expansion-panel-header>\n                    <mat-panel-title>\n                        {{edge.edge.sourcePatternName}} {{edge.edge.type}} {{edge.edge.targetPatternName}}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"badge-container\">\n                    <b>Source Pattern:</b> {{edge.edge.sourcePatternName}}<br/>\n                    <b>Relation Type:</b> {{edge.edge.type}} <br/>\n                    <b>Target Pattern:</b> {{edge.edge.targetPatternName}}\n                    <div *ngIf=\"edge.description\"><b>Description:</b> {{edge.description}}</div>\n                    <br/>\n                </div>\n                <button class=\"delete-icon\" mat-button (click)=\"deleteEdge(edge)\">\n                    <mat-icon (click)=\"deleteEdge(edge)\" [inline]=\"true\">delete</mat-icon>\n                </button>\n            </mat-expansion-panel>\n        </mat-accordion>\n    </ng-template>\n    <ng-template #undirectedEdgeModel>\n        <mat-accordion style=\"padding: 3px;\">\n            <mat-expansion-panel *ngFor=\"let edge of this.currentEdges\">\n                <mat-expansion-panel-header>\n                    <mat-panel-title>\n                        {{edge.edge.pattern1Name}} {{edge.edge.type}} {{edge.edge.pattern2Name}}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"badge-container\">\n                    <b>Pattern 1:</b> {{edge.edge.pattern1Name}}<br/>\n                    <b>Relation Type:</b> {{edge.edge.type}} <br/>\n                    <b>Pattern 2:</b> {{edge.edge.pattern2Name}}\n                    <div *ngIf=\"edge.description\"><b>Description:</b> {{edge.description}}</div>\n                    <br/>\n                </div>\n                    <button class=\"delete-icon\" mat-button (click)=\"deleteEdge(edge)\">\n                        <mat-icon (click)=\"deleteEdge(edge)\" [inline]=\"true\">delete</mat-icon>\n                    </button>\n            </mat-expansion-panel>\n        </mat-accordion>\n    </ng-template>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {CreatePatternRelationComponent} from '../create-pattern-relation/create-pattern-relation.component';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {EdgeWithType, PatternRelationDescriptorService} from '../../service/pattern-relation-descriptor.service';\nimport {PatternViewService} from '../../service/pattern-view.service';\nimport {ToasterService} from 'angular2-toaster';\nimport {HalLink} from '../../model/hal/hal-link.interface';\n\n@Component({\n    selector: 'pp-delete-pattern-relation',\n    templateUrl: './delete-pattern-relation.component.html',\n    styleUrls: ['./delete-pattern-relation.component.scss']\n})\nexport class DeletePatternRelationComponent implements OnInit {\n\n    currentEdges: Array<EdgeWithType> = [];\n\n    constructor(public dialogRef: MatDialogRef<CreatePatternRelationComponent>,\n                @Inject(MAT_DIALOG_DATA) public data: DeleteRelationDialogData,\n                private patternRelationDescriptorService: PatternRelationDescriptorService,\n                private patternViewService: PatternViewService, private toasterService: ToasterService) {\n        this.getEdgesForPattern();\n    }\n\n    ngOnInit() {\n    }\n\n    close(): void {\n        this.dialogRef.close();\n    }\n\n    deleteEdge(edge: EdgeWithType): void {\n        this.patternViewService.deleteLink(edge.edge._links.self.href).subscribe(\n            (res) => {\n                this.currentEdges = this.currentEdges.filter(item => item !== edge);\n                this.toasterService.pop('success', 'Relation removed');\n                if (this.currentEdges.length === 0) {\n                    this.dialogRef.close();\n                }\n            }\n        );\n    }\n\n    private getEdgesForPattern(): void {\n        let links = [];\n        if (!this.data.edges.length) {\n            links[0] = this.data.edges;\n        } else {\n            links = this.data.edges;\n        }\n        for (const link of links) {\n            this.patternRelationDescriptorService.getUndirectedEdgeByUrl(link.href).subscribe(\n                data => {\n                    const edgeWithType: EdgeWithType = new EdgeWithType();\n                    edgeWithType.edge = data;\n                    edgeWithType.type = data.type;\n                    this.currentEdges.push(edgeWithType);\n                }\n            );\n        }\n    }\n\n}\n\nexport interface DeleteRelationDialogData {\n    edges: HalLink[];\n    type: string;\n}\n","<p style=\"margin: 1em\"></p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pp-divider',\n  templateUrl: './divider.component.html',\n  styleUrls: ['./divider.component.scss']\n})\nexport class DividerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-sidenav-container [hasBackdrop]=\"false\" class=\"container\">\n    <mat-sidenav #start fixedInViewport=\"true\" mode=\"over\">\n        <h4>{{currentPattern?.name}}</h4>\n        <mat-accordion>\n            <mat-expansion-panel *ngFor=\"let relation of currentEdges\">\n                <mat-expansion-panel-header>\n                    <mat-panel-title style=\"align-self: center\">\n                        {{relation?.edge.type}}\n                    </mat-panel-title>\n                    <mat-panel-description class=\"horiz-centered\">\n                        <div [ngSwitch]=\"relation.type\">\n\n                            <div *ngSwitchCase=\"'undirectedEdges'\" class=\"horiz-centered\">\n                                {{ relation?.edge.sourcePatternName}}\n                                <i class=\"material-icons flip\">compare_arrows</i>\n                                {{ relation?.edge.pattern1Id === this.currentPattern.id ? relation.edge.pattern1Name : relation.edge.pattern2Name}}\n                            </div>\n\n                            <div *ngSwitchCase=\"'outgoingDirectedEdges'\" class=\"horiz-centered\">\n                                <i class=\"material-icons\">trending_flat</i>\n                                {{ relation?.edge.sourcePatternId === this.currentPattern.id ? relation?.edge.targetPatternName : relation?.edge.sourcePatternName}}\n\n                            </div>\n                            <div *ngSwitchCase=\"'ingoingDirectedEdges'\" class=\"horiz-centered\">\n                                <i class=\"material-icons flip\">trending_flat</i>\n                                {{ relation?.edge.sourcePatternId === this.currentPattern.id ? relation?.edge.targetPatternName : relation?.edge.sourcePatternName}}\n                            </div>\n\n                        </div>\n                    </mat-panel-description>\n                </mat-expansion-panel-header>\n                <i>{{relation?.edge.description ? ': ' + relation?.edge.description : ''}}</i>\n            </mat-expansion-panel>\n        </mat-accordion>\n\n    </mat-sidenav>\n    <mat-progress-spinner *ngIf=\"isLoading\"></mat-progress-spinner>\n    <mat-sidenav-content>\n        <network-graph #graphWrapper\n                       (onAddedEdge)=\"edgeAdded($event)\"\n                       (onClickedBackground)=\"backgroundClicked()\"\n                       (onClickedNode)=\"nodeClicked($event)\"\n                       (onNodePositionChange)=\"saveGraph()\"\n                       [ppGraphEventEmmiter]\n                       classes=\" highlighted-edge low-opacity-node low-opacity-edge\"\n                       mode=\"layout\"\n                       style=\"width: 100%; height: 100%\"\n                       zoom=\"both\">\n            <style slot=\"style\">\n                svg {\n                    width: 1000px;\n                    height: 700px;\n                }\n            </style>\n            <svg #svg slot=\"graph\">\n                <!-- TODO: Move style to scss file -->\n                <style>\n                    .node {\n                        fill: aliceblue;\n                        opacity: 0.95;\n                    }\n\n                    svg {\n                        background-color: white;\n                    }\n\n                    .link-handle {\n                        display: none;\n\n                        fill: black;\n                        opacity: 0.1;\n                        transition: opacity 0.25s ease-out;\n                    }\n\n                    .node.hovered {\n                        fill: rgb(63, 81, 181);\n                        opacity: 0.9;\n                        color: white;\n                    }\n\n                    .edge-group .link-handle {\n                        display: initial;\n                    }\n\n                    .low-opacity-edge {\n                        stroke: grey;\n                    }\n\n                    .link-handle:hover {\n                        opacity: 0.7;\n                    }\n\n                    .hovered .link-handle {\n                        display: initial;\n                    }\n\n                    .text {\n                        fill: black;\n                        font-size: 6pt;\n                        text-overflow: ellipsis;\n                        word-break: break-word\n                    }\n\n                    .cursive {\n                        font-style: italic;\n                    }\n\n                    .low-opacity-node {\n                        opacity: 0.1;\n                    }\n\n                    .low-opacity-edge {\n                        opacity: 0.1;\n                    }\n                </style>\n                <defs>\n\n                    <g data-template-type=\"node\" id=\"default\">\n\n                        <rect data-click=\"nodeclick\" data-link-handles=\"edges\" height=\"50\" rx=\"5\" ry=\"5\"\n                              style=\"stroke:black;stroke-width:1;\"\n                              width=\"120\"\n                              x=\"-60\" y=\"-25\">\n                        </rect>\n                        <image data-click=\"info\" data-content=\"patternLanguageId\" width=\"10\" x=\"45\"\n                               xlink:href=\"assets/Info_Simple_bw.svg\"\n                               y=\"-20\"/>\n                        <text class=\"text\" data-click=\"title\" data-content=\"title\" dominant-baseline=\"middle\"\n                              height=\"50\" text-anchor=\"middle\"\n                              width=\"120\"\n                              x=\"0\"\n                              y=\"0\">\n                        </text>\n                        <text class=\"text cursive\" data-click=\"patternLanguageName\" *ngIf=\"showPatternLanguageName\"\n                              data-content=\"patternLanguageName\"\n                              dominant-baseline=\"middle\"\n                              height=\"50\" text-anchor=\"middle\"\n                              width=\"120\"\n                              x=\"0\"\n                              y=\"10\">\n                        </text>\n                    </g>\n\n                    <g data-line-attachement-point=\"-9 0\" data-template-type=\"marker\" id=\"arrow\">\n                        <path d=\"M -9 -4 L 0 0 L -9 4 z\"/>\n                    </g>\n                </defs>\n            </svg>\n        </network-graph>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n","import {AfterViewInit, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild} from '@angular/core';\nimport {D3Service} from '../../../graph/service/d3.service';\nimport {NetworkLink} from '../../model/network-link.interface';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatSidenavContainer} from '@angular/material/sidenav';\nimport {CreatePatternRelationComponent} from '../create-pattern-relation/create-pattern-relation.component';\nimport {PatternView} from '../../model/hal/pattern-view.model';\nimport PatternLanguage from '../../model/hal/pattern-language.model';\nimport {EdgeWithType, PatternRelationDescriptorService} from '../../service/pattern-relation-descriptor.service';\nimport {ToasterService} from 'angular2-toaster';\nimport GraphEditor from '@ustutt/grapheditor-webcomponent/lib/grapheditor';\nimport {DraggedEdge, edgeId} from '@ustutt/grapheditor-webcomponent/lib/edge';\nimport Pattern from '../../model/hal/pattern.model';\nimport {PatternLanguageService} from '../../service/pattern-language.service';\nimport {GraphInputData} from '../../model/graph-input-data.interface';\nimport {PatternService} from '../../service/pattern.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {PatternViewService} from '../../service/pattern-view.service';\nimport {switchMap} from 'rxjs/operators';\nimport {PatternResponse} from '../../model/hal/pattern-response.interface';\n\nexport class GraphNode {\n    id: string;\n    title: string;\n    type: string;\n    x: number;\n    y: number;\n    patternLanguageId: string;\n}\n\n@Component({\n    selector: 'pp-graph-display',\n    templateUrl: './graph-display.component.html',\n    styleUrls: ['./graph-display.component.scss']\n})\nexport class GraphDisplayComponent implements AfterViewInit, OnChanges {\n\n    @ViewChild('graphWrapper', {static: true}) graph: ElementRef;\n    graphNativeElement: GraphEditor;\n    @ViewChild('svg') svg: ElementRef;\n    @ViewChild(MatSidenavContainer) sidenavContainer: MatSidenavContainer;\n    patternGraphData: any;\n    isLoading = true;\n    @Input() data: GraphInputData;\n    @Input() showPatternLanguageName: boolean;\n    @Output() addedEdge = new EventEmitter<any>();\n    currentPattern: Pattern;\n    currentEdges: Array<EdgeWithType>;\n    private edges: Array<NetworkLink>;\n    private nodes: Array<GraphNode>;\n    private copyOfLinks: Array<NetworkLink>;\n    private patterns: Array<Pattern>;\n    private patternLanguage: PatternLanguage;\n    private patternView: PatternView;\n    private currentEdge: any;\n    private highlightedNodeIds: Array<string> = [];\n    private clickedNodeId: string = null;\n    private highlightedEdgeIds: Array<string> = [];\n\n    constructor(private cdr: ChangeDetectorRef,\n                private d3Service: D3Service,\n                private matDialog: MatDialog,\n                private patternRelationDescriptionService: PatternRelationDescriptorService,\n                private toastService: ToasterService,\n                private patternLanguageService: PatternLanguageService,\n                private patternViewService: PatternViewService,\n                private patternService: PatternService,\n                private router: Router,\n                private activatedRoute: ActivatedRoute) {\n    }\n\n    static mapPatternLinksToEdges(links: any[]): NetworkLink[] {\n        const edges: any = [];\n        if (!links.length) {\n            return [];\n        }\n        for (let i = 0; i < links.length; i++) {\n            const currentLink = links[i];\n            if (currentLink.sourcePatternId && currentLink.targetPatternId) {\n                edges.push({\n                    source: currentLink.sourcePatternId, target: currentLink.targetPatternId,\n                    id: currentLink.id,\n                    markerEnd: {template: 'arrow', scale: 0.5, relativeRotation: 0},\n                });\n            } else { // undirected link\n                edges.push(<NetworkLink>{\n                    source: currentLink.pattern1Id, target: currentLink.pattern2Id,\n                    id: currentLink.id,\n                    markerEnd: {template: 'arrow', scale: 0.5, relativeRotation: 0},\n                    markerStart: {template: 'arrow', scale: 0.5, relativeRotation: 0}\n                });\n            }\n        }\n        return edges;\n    }\n\n    static mapPatternsToNodes(patterns: Array<Pattern>, offsetIndex: number = 0): Array<GraphNode> {\n        const nodes: Array<any> = [];\n        console.log(patterns);\n        for (let i = 0; i < patterns.length; i++) {\n            const node = {\n                id: patterns[i].id,\n                title: patterns[i].name,\n                type: 'default',\n                x: 5 * offsetIndex,\n                y: 5 * offsetIndex,\n                patternLanguageId: patterns[i].patternLanguageId,\n                patternLanguageName: patterns[i].patternLanguageName\n            };\n            nodes.push(node);\n        }\n        return nodes;\n    }\n\n    ngAfterViewInit() {\n        this.graphNativeElement = this.graph.nativeElement;\n        if (this.graphNativeElement == null) {\n            return;\n        }\n\n        this.graphNativeElement.setNodeClass = (className, node) => {\n            if (this.highlightedNodeIds.length > 0) {\n                if (className === 'low-opacity-node') {\n                    return !this.highlightedNodeIds.includes(<string>node.id);\n                }\n            }\n            return false;\n        };\n\n        this.graphNativeElement.setEdgeClass = (className, edge, sourceNode, targetNode) => {\n            if (targetNode == null) {\n                return false;\n            }\n            if (className === 'low-opacity-edge' && this.highlightedNodeIds.length > 0) {\n                const id = edge.id ? edge.id : edgeId(edge);\n                return !this.highlightedEdgeIds.includes(<string>id);\n            }\n            return false;\n        };\n        this.getGraph();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.data != null) {\n            this.isLoading = true;\n            this.initData();\n            this.getGraph();\n        }\n    }\n\n    edgeAdded(event) {\n        this.currentEdge = event.detail.edge;\n        const dialogRef = this.matDialog.open(CreatePatternRelationComponent, {\n            data: {\n                firstPattern: this.patterns.find((pat) => event.detail.edge.source === pat.id),\n                secondPattern: this.patterns.find((pat) => event.detail.edge.target === pat.id),\n                patterns: this.patterns,\n                patternLanguage: this.patternLanguage,\n                patternView: this.patternView\n            }\n        });\n\n        dialogRef.afterClosed().subscribe((edge) => {\n            if (edge) { // inform parent component that new edge was added\n                this.addedEdge.emit(edge);\n            } else {\n                this.graphNativeElement.removeEdge(this.currentEdge);\n                this.triggerRerendering();\n            }\n        });\n    }\n\n    nodeClicked(event) {\n        const node = event['detail']['node'];\n        console.log(node);\n        if (event['detail']['key'] === 'info') {\n            this.router.navigate(['..', (<GraphNode>node).patternLanguageId + node.id, {relativeTo: this.activatedRoute}]);\n        }\n        this.showInfoForClickedNode(node);\n    }\n\n    saveGraph() {\n        if (this.nodes && this.patternLanguage) {\n            this.patternLanguageService.saveGraph(this.patternLanguage, this.graphNativeElement.nodeList)\n                .subscribe(() => console.log('saved graph layout'));\n        }\n        if (this.nodes && this.patternView) {\n            console.log(this.patternView);\n            this.patternViewService.saveGraph(this.patternView, this.graphNativeElement.nodeList)\n                .subscribe(() => console.log('saved graph layout'));\n        }\n    }\n\n    reformatGraph() {\n        this.nodes = GraphDisplayComponent.mapPatternsToNodes(this.patterns);\n        this.startSimulation();\n    }\n\n\n    backgroundClicked() {\n        this.highlightedNodeIds = [];\n        this.highlightedEdgeIds = [];\n        this.clickedNodeId = null;\n        this.graphNativeElement.completeRender();\n        this.sidenavContainer.close();\n    }\n\n    private initData() {\n        this.patternGraphData = this.data;\n        if (this.patternGraphData) {\n            this.edges = GraphDisplayComponent.mapPatternLinksToEdges(this.patternGraphData.edges);\n            this.copyOfLinks = GraphDisplayComponent.mapPatternLinksToEdges(this.patternGraphData.edges);\n            this.patterns = this.patternGraphData.patterns;\n            this.patternLanguage = this.patternGraphData.patternLanguage;\n            this.patternView = this.patternGraphData.patternView;\n            this.nodes = GraphDisplayComponent.mapPatternsToNodes(this.patterns);\n        }\n    }\n\n    private startSimulation() {\n        const networkGraph = this.d3Service.getNetworkGraph(this.nodes, this.edges, {\n            width: 1000,\n            height: 500\n        });\n\n        // allow to create edges to any other node in the graph (this enables multiple edges between nodes)\n        this.graphNativeElement.onCreateDraggedEdge = (edge: DraggedEdge) => {\n            this.graphNativeElement.nodeList.forEach((node) => edge.validTargets.add(<string>node.id));\n            return edge;\n        };\n\n        // subscribe to the end of the network graph force-layout simulation:\n        networkGraph.ticker.subscribe(() => {\n            console.log('started force simulation');\n            this.graphNativeElement.setNodes(networkGraph.nodes, false);\n            this.nodes = networkGraph.nodes;\n            this.initGraphEdges();\n\n            this.isLoading = false;\n            this.cdr.detectChanges();\n            this.saveGraph();\n        });\n    }\n\n    private getEdgesForPattern(): void {\n        this.patternService.getPatternByUrl(this.currentPattern._links.self.href).pipe(\n            switchMap((pattern: PatternResponse) => {\n                return this.patternRelationDescriptionService.getEdgesForPattern(pattern);\n            }))\n            .subscribe(edges => {\n                this.currentEdges = edges;\n                this.cdr.detectChanges();\n            });\n    }\n\n    private getGraph() {\n        this.initData();\n        if (this.patterns.length === 0) {\n            return;\n        }\n        if (!this.patternLanguage) {\n            this.patternViewService.getGraph(this.patternView)\n                .subscribe((res: { graph: Array<GraphNode> }) => {\n                    this.prepareGraph(res.graph, this.patternView);\n                });\n        } else {\n            this.patternLanguageService.getGraph(this.patternLanguage)\n                .subscribe((res: { graph: Array<GraphNode> }) => {\n                    this.prepareGraph(res.graph, this.patternView);\n                });\n        }\n\n\n    }\n\n    private initGraphEdges() {\n        // we need to use a hard-copy of the links, because get changed (by d3?) and the webcomponent can't handle them anymore\n        if (this.copyOfLinks.length > 0) {\n            this.graphNativeElement.setEdges(this.copyOfLinks, false);\n        }\n        this.triggerRerendering();\n        this.graphNativeElement.zoomToBoundingBox(true);\n    }\n\n    private addNewPatternNodeToGraph(pat: Pattern, index: number) {\n        this.graphNativeElement.addNode(GraphDisplayComponent.mapPatternsToNodes([pat], index)[0]);\n    }\n\n    private showInfoForClickedNode(node): void {\n        this.clickedNodeId = node.id;\n        const outgoingLinks = Array.from(this.graph.nativeElement.getEdgesByTarget(node.id));\n        const ingoingLinks = Array.from(this.graph.nativeElement.getEdgesBySource(node.id));\n\n        this.highlightedEdgeIds = [].concat(outgoingLinks).concat(ingoingLinks).map((edge) => edge.id ? edge.id : edgeId(edge));\n        const outgoingNodeIds: string[] = outgoingLinks.map(it => it['source']);\n        const ingoingNodeIds: string[] = ingoingLinks.map(it => it['target']);\n\n        this.highlightedNodeIds = [];\n        this.highlightedNodeIds = outgoingNodeIds.concat(ingoingNodeIds);\n        this.highlightedNodeIds.push(node.id);\n        this.currentPattern = this.patterns.find(pat => pat.id === node.id);\n        this.getEdgesForPattern();\n        this.sidenavContainer.open();\n        this.triggerRerendering();\n    }\n\n    public updateSideMenu() {\n        if (this.clickedNodeId) {\n            this.showInfoForClickedNode(this.graphNativeElement.getNode(this.clickedNodeId));\n        }\n    }\n\n    triggerRerendering() {\n        this.graphNativeElement.completeRender();\n    }\n\n    private initGraphData(graphData: Array<GraphNode>) {\n        this.graphNativeElement.setNodes(graphData);\n        if (this.patterns.length > graphData.length) { // add newly added patterns that are not in the pattern graph yet\n            const newPatterns = this.patterns.filter(pat => !this.graphNativeElement.nodeList.map(node => <string>node.id).includes(pat.id));\n            newPatterns.forEach((pat, index) => this.addNewPatternNodeToGraph(pat, index));\n        }\n        this.initGraphEdges();\n        this.isLoading = false;\n    }\n\n    private prepareGraph(graph: Array<GraphNode>, patternGraphData: PatternView | PatternLanguage) {\n        if ((!graph && Array.isArray(this.patternGraphData.patterns)) ||\n            Array.isArray(this.patternGraphData.patterns) && (this.patternGraphData.patterns.length > graph.length)) {\n            this.startSimulation();\n            return;\n        }\n        this.initGraphData(graph);\n    }\n}\n","import {EventEmitter} from '@angular/core';\n\nexport class DataRenderingComponent {\n  data: string;\n\n  title: string;\n\n  changeContent: EventEmitter<DataChange>;\n  isEditingEnabled = false;\n\n  constructor() {\n  }\n\n\n}\n\nexport class DataChange {\n  previousValue: string;\n  currentValue: string;\n}\n","<mat-card class=\"section-card\">\n    <mat-card-header>\n        <mat-card-subtitle><b>{{title}}</b></mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n        <div style=\"display: flex; align-items: center;\" (mouseenter)=\"showActionButtons = true\"\n             (mouseleave)=\"showActionButtons = false\">\n\n            <div style=\"word-break: break-word\" #markdownContent></div>\n\n\n          <button *ngIf=\"showActionButtons && isEditingEnabled\" mat-stroked-button\n                    style=\"margin-left: 5px\" color=\"primary\"\n                    (click)=\"openEditor()\" matTooltip=\"Edit\"><i class=\"material-icons\">mode_edit</i></button>\n        </div>\n    </mat-card-content>\n</mat-card>\n\n","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, ViewChild } from '@angular/core';\nimport { DataChange, DataRenderingComponent } from '../interfaces/DataRenderingComponent.interface';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogData, MdEditorComponent } from '../../md-editor/md-editor.component';\nimport * as MarkdownIt from 'markdown-it';\nimport * as markdownitKatex from 'markdown-it-katex';\n\n@Component({\n  selector: 'pp-markdown-pattern-section-content',\n  templateUrl: './markdown-pattern-section-content.component.html',\n  styleUrls: ['./markdown-pattern-section-content.component.scss']\n})\nexport class MarkdownPatternSectionContentComponent extends DataRenderingComponent implements AfterViewInit {\n\n  data: string;\n  title = '';\n\n  showActionButtons = false;\n  @ViewChild('markdownContent') markdownDiv: ElementRef;\n  @Input() content: string;\n  private markdown: MarkdownIt;\n\n  constructor(private dialog: MatDialog, private cdr: ChangeDetectorRef) {\n    super();\n    this.changeContent = new EventEmitter<DataChange>();\n  }\n\n  ngAfterViewInit() {\n    this.markdown = new MarkdownIt();\n    this.markdown.use(markdownitKatex);\n    this.changeText(this.data);\n  }\n\n  changeText(value: string): void {\n    this.data = value;\n    this.markdownDiv.nativeElement.innerHTML = this.markdown.render(this.data);\n    this.cdr.detectChanges();\n  }\n\n  openEditor(): void {\n    const dialogRef = this.dialog.open(MdEditorComponent,\n      {data: {content: this.data, field: this.title}});\n    dialogRef.afterClosed().subscribe(async (result: DialogData) => {\n      const previousValue = this.data;\n      if (result) {\n        this.data = result.content;\n        this.changeText(this.data);\n      }\n      this.changeContent.emit({previousValue: previousValue, currentValue: result.content});\n    });\n  }\n}\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[ppPatternProperty]'\n})\nexport class PatternPropertyDirective {\n\n  constructor(public viewContainerRef: ViewContainerRef) { }\n\n}\n","<div style=\"display: flex; justify-content: space-between; align-items: baseline\">\n  <h1 mat-dialog-title>Edit '{{data.label}}'</h1>\n  <button mat-flat-button (click)=\"close()\" tabindex=\"-1\">\n    <i class=\"material-icons\">close</i>\n  </button>\n</div>\n<div mat-dialog-content>\n  <td-text-editor #mdEditor [value]=\"data.content\"></td-text-editor>\n</div>\n<div mat-dialog-actions>\n  <button mat-raised-button color=\"warn\"\n          (click)=\"revert()\" matTooltip=\"Revert Changes\">\n    <i class=\"material-icons\">restore</i> Revert\n  </button>\n  <button mat-raised-button color=\"primary\" (click)=\"saveChanges()\"><i\n    class=\"material-icons\">save</i> Save\n  </button>\n</div>\n\n","import { Component, Inject, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { TdTextEditorComponent } from '@covalent/text-editor';\n\nexport class DialogData {\n    field: string;\n    label?: string;\n    content: string;\n}\n\n@Component({\n    selector: 'pp-md-editor',\n    templateUrl: './md-editor.component.html',\n    styleUrls: ['./md-editor.component.scss']\n})\nexport class MdEditorComponent {\n\n    @ViewChild('mdEditor') private _textEditor: TdTextEditorComponent;\n    private intialContent: string;\n\n    constructor(public dialogRef: MatDialogRef<MdEditorComponent>,\n                @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n        if (!data.label) {\n            data.label = data.field;\n        }\n        this.intialContent = data.content;\n        // We revert changes and close modal at click on backdrop\n        this.dialogRef.backdropClick().subscribe(() => {\n            this.dialogRef.close({field: this.data.field, content: this.intialContent});\n        });\n        // We revert changes and close modal at hitting ESC\n        this.dialogRef.keydownEvents().subscribe(event => {\n            if (event.code === 'Escape') {\n                this.dialogRef.close({field: this.data.field, content: this.intialContent});\n            }\n        });\n    }\n\n    close(): void {\n        this.dialogRef.close({field: this.data.field, content: this.intialContent});\n    }\n\n    saveChanges(): void {\n        this.dialogRef.close({field: this.data.field, content: this._textEditor.value});\n    }\n\n    revert(): void {\n        this._textEditor.value = this.intialContent;\n    }\n\n}\n","<button mat-raised-button color=\"primary\" (click)=\"navigateBack()\"><i\n        class=\"material-icons\">keyboard_backspace</i></button>\n","import { Component, NgZone, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'pp-navigate-back',\n  templateUrl: './navigate-back.component.html',\n  styleUrls: ['./navigate-back.component.scss']\n})\nexport class NavigateBackComponent implements OnInit {\n\n  constructor( private zone: NgZone, private activatedRoute: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  navigateBack(): void {\n    this.zone.run(() => {\n      this.router.navigate(['..'], {relativeTo: this.activatedRoute});\n    });\n  }\n\n}\n","<div  fxLayout=\"row\" fxLayoutAlign=\"center center\"><span>Processing Authorization... </span><mat-progress-spinner mode=\"indeterminate\" ></mat-progress-spinner></div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { switchMap } from 'rxjs/internal/operators';\n\n@Component({\n  selector: 'pp-process-oauth-callback',\n  templateUrl: './process-oauth-callback.component.html',\n  styleUrls: ['./process-oauth-callback.component.scss']\n})\nexport class ProcessOauthCallbackComponent implements OnInit {\n\n  constructor(private _httpClient: HttpClient, private _route: ActivatedRoute, private _cookieService: CookieService, private _router: Router) {\n    this._route.params.subscribe( params => console.log(params) );\n\n  }\n\n  ngOnInit() {\n    this._route.queryParams.pipe(\n      switchMap((params) => {\n        return this._httpClient.get('https://eqjjnlkv6a.execute-api.eu-central-1.amazonaws.com/default/authenticate/' + params['code'], {responseType: 'text'});\n      })).subscribe(\n      (res) => {\n        const response = res.replace('\"', '');\n        // github sends the access_token in url param style (access_token=...&...), so let's use this info to decode the token:\n        const urlResponse = new URLSearchParams(response);\n        if (urlResponse.get('access_token')) {\n          this._cookieService.set('patternpedia_github_token', urlResponse.get('access_token'));\n        }\n\n        this._router.navigate(['..'], {relativeTo: this._route});\n      });\n  }\n\n}\n","<mat-button-toggle-group #group=\"matButtonToggleGroup\" (change)=\"emitValueChange(group.value)\"\n                         [value]=\"graphVisible\"\n                         appearance=\"legacy\"\n                         style=\"font-size: small; height: 35px; align-items: center;\">\n    <mat-button-toggle [checked]=\"true\" [value]=\"false\" aria-label=\"Text align center\" mat-raised-button>\n        Cards\n    </mat-button-toggle>\n    <mat-button-toggle [value]=\"true\" aria-label=\"Text align left\" mat-raised-button>\n        Graph\n    </mat-button-toggle>\n</mat-button-toggle-group>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n    selector: 'pp-toggle-renderer',\n    templateUrl: './toggle-renderer.component.html',\n    styleUrls: ['./toggle-renderer.component.css']\n})\nexport class ToggleRendererComponent implements OnInit {\n\n    @Output() toggledRenderer = new EventEmitter<boolean>();\n    @Input() graphVisible: boolean;\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    emitValueChange(value: any) {\n        this.toggledRenderer.emit(value);\n    }\n}\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DefaultPlRendererComponent} from './default-pl-renderer/default-pl-renderer.component';\nimport {DefaultPatternRendererComponent} from './default-pattern-renderer/default-pattern-renderer.component';\nimport {ComponentRegistryService} from './service/component-registry.service';\nimport {PrettyJsonModule} from 'angular2-prettyjson';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {TextFieldModule} from '@angular/cdk/text-field';\nimport {MdEditorComponent} from './component/md-editor/md-editor.component';\nimport {CovalentTextEditorModule} from '@covalent/text-editor';\nimport {EmitEventOnKeyupDirective} from './directives/emit-event-on-keyup.directive';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {NavigateBackComponent} from './component/navigate-back/navigate-back.component';\nimport {PatternPropertyDirective} from './component/markdown-content-container/pattern-property.directive';\nimport {DividerComponent} from './component/divider/divider.component';\nimport {NgxMdModule} from 'ngx-md';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CreatePatternRelationComponent} from './component/create-pattern-relation/create-pattern-relation.component';\n// tslint:disable-next-line:max-line-length\nimport {MarkdownPatternSectionContentComponent} from './component/markdown-content-container/markdown-pattern-sectioncontent/markdown-pattern-section-content.component';\nimport {PatternLanguageService} from './service/pattern-language.service';\nimport {PatternService} from './service/pattern.service';\nimport {GraphDisplayComponent} from './component/graph-display/graph-display.component';\nimport {CardRendererComponent} from './component/cardrenderer/card-renderer.component';\nimport {PatternViewService} from './service/pattern-view.service';\nimport {CreateEditPatternLanguageComponent} from './component/create-edit-pattern-language/create-edit-pattern-language.component';\nimport {ActionButtonBarComponent} from './component/action-button-bar/action-button-bar.component';\nimport {EmitEventOnAddedEdgeDirective} from './directives/emit-event-on-added-edge.directive';\nimport {MatBadgeModule, MatExpansionModule} from '@angular/material';\nimport {RouterModule} from '@angular/router';\nimport {ToggleRendererComponent} from './component/toggle-renderer/toggle-renderer.component';\nimport {DeletePatternRelationComponent} from './component/delete-pattern-relation/delete-pattern-relation.component';\nimport { CreativeLicenseFooterComponent } from './component/creative-license-footer/creative-license-footer.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PrettyJsonModule,\n        MatButtonModule,\n        TextFieldModule,\n        CovalentTextEditorModule,\n        MatCardModule,\n        FlexLayoutModule,\n        MatProgressSpinnerModule,\n        MatListModule,\n        MatDatepickerModule, MatInputModule,\n        ReactiveFormsModule,\n        MatTooltipModule,\n        MatSelectModule,\n        MatDialogModule, MatGridListModule, MatSidenavModule,\n        MatAutocompleteModule,\n        MatIconModule, MatToolbarModule, MatBadgeModule, MatExpansionModule,\n        MatButtonToggleModule,\n        NgxMdModule.forRoot(), MatNativeDateModule, RouterModule, FormsModule\n    ],\n    exports: [\n        CovalentTextEditorModule,\n        EmitEventOnKeyupDirective,\n        EmitEventOnAddedEdgeDirective,\n        MatProgressSpinnerModule,\n        NavigateBackComponent,\n        CardRendererComponent,\n        ActionButtonBarComponent,\n        ToggleRendererComponent,\n        GraphDisplayComponent\n    ]\n    ,\n    providers: [\n        PatternLanguageService,\n        PatternService,\n        PatternViewService\n    ],\n    declarations: [\n        DefaultPlRendererComponent,\n        DefaultPatternRendererComponent,\n        MdEditorComponent,\n        EmitEventOnKeyupDirective,\n        EmitEventOnAddedEdgeDirective,\n        NavigateBackComponent,\n        PatternPropertyDirective,\n        DividerComponent,\n        CreatePatternRelationComponent,\n        MarkdownPatternSectionContentComponent,\n        GraphDisplayComponent,\n        CardRendererComponent,\n        CreateEditPatternLanguageComponent,\n        ActionButtonBarComponent,\n        ToggleRendererComponent,\n        DeletePatternRelationComponent,\n        CreativeLicenseFooterComponent\n    ],\n    entryComponents: [\n        DefaultPlRendererComponent,\n        DefaultPatternRendererComponent,\n        MdEditorComponent,\n        DividerComponent,\n        CreatePatternRelationComponent,\n        DeletePatternRelationComponent,\n        MarkdownPatternSectionContentComponent,\n        CardRendererComponent,\n        GraphDisplayComponent,\n        CreateEditPatternLanguageComponent\n    ],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class CoreModule {\n    constructor(private cr: ComponentRegistryService) {\n        this.cr.registerComponent('default', {plcomponent: DefaultPlRendererComponent, pcomponent: DefaultPatternRendererComponent});\n    }\n}\n","<mat-progress-spinner *ngIf=\"isLoading\" mode=\"indeterminate\"></mat-progress-spinner>\n<mat-card class=\"pattern-card mat-elevation-z5\">\n    <mat-card-header>\n        <pp-action-button-bar [displayText]=\"pattern?.name\" [firstAddButton]=\"false\">\n        </pp-action-button-bar>\n    </mat-card-header>\n    <div>\n        <ng-template ppPatternProperty></ng-template>\n    </div>\n    <mat-card *ngIf=\"!isLoading\" class=\"section-card\">\n        <mat-card-header>\n            <mat-card-subtitle style=\"display: flex;\n     align-items: flex-start;\"><b>Relations to other Patterns</b></mat-card-subtitle>\n        </mat-card-header>\n        <mat-card-content>\n            <div *ngIf=\"directedPatternRelations?.length > 0\">\n                <ng-container *ngFor=\"let relation of directedPatternRelations\">\n                    <p class=\"horiz-centered\">\n                        <a [routerLink]=\"['..',relation.sourcePatternId]\">{{ relation?.sourcePatternName}}</a>\n                        <span *ngIf=\"relation?.type\" class=\"horiz-centered\">\n                            <i class=\"material-icons\">remove</i>{{relation?.type}}\n                        </span>\n                        <i class=\"material-icons\">trending_flat</i>\n                        <a [routerLink]=\"['..', relation.targetPatternId]\">{{ relation?.targetPatternName}}</a>\n                        <i>{{relation?.description ? ': ' + relation?.description : ''}}</i>\n                    </p>\n                    <br/>\n                </ng-container>\n            </div>\n            <div *ngIf=\"undirectedPatternRelations?.length > 0\">\n                <ng-container *ngFor=\"let relation of undirectedPatternRelations\">\n                    <p class=\"horiz-centered\">\n                        <a [routerLink]=\"['..', relation.pattern1Id]\">{{ relation?.pattern1Name}}</a>\n                        <span *ngIf=\"!relation?.type\"><i class=\"material-icons\">compare_arrows</i></span>\n                        <span *ngIf=\"relation?.type\" class=\"horiz-centered\"><i\n                                class=\"material-icons flip\">trending_flat</i>{{relation?.type}}\n                            <i class=\"material-icons\">trending_flat</i></span>\n                        <a [routerLink]=\"['..',relation.pattern2Id]\">{{ relation?.pattern2Name}}</a>\n                        <i>{{relation?.description ? ': ' + relation?.description : ''}}</i>\n                    </p>\n                    <br/>\n                </ng-container>\n            </div>\n            <div *ngIf=\"undirectedPatternRelations?.length === 0 && directedPatternRelations?.length === 0\">\n                <p> No links found for this pattern.</p>\n            </div>\n            <mat-card-actions>\n                <div style=\"display: flex; align-items: center;\">\n                    <button (click)=\"addLink()\"\n                            *ngIf=\"isEditingEnabled\"\n                            color=\"primary\"\n                            mat-stroked-button\n                            matTooltip=\"Add Link\"\n                            style=\"margin-left: 5px\">\n                        <i class=\"material-icons\">trending_flat</i>\n                        <i class=\"material-icons\" style=\"height: 2em;\n    font-size: smaller;  \">add</i>\n                    </button>\n                </div>\n            </mat-card-actions>\n        </mat-card-content>\n\n    </mat-card>\n\n</mat-card>\n<pp-creative-license-footer *ngIf=\"pattern && patternLanguage\"\n                            [patternLanguage]=\"patternLanguage\"></pp-creative-license-footer>\n","import {AfterViewInit, ChangeDetectorRef, Component, ComponentFactoryResolver, ViewChild} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ToasterService} from 'angular2-toaster';\nimport {PatternPropertyDirective} from '../component/markdown-content-container/pattern-property.directive';\nimport {MatDialog} from '@angular/material/dialog';\nimport {CreatePatternRelationComponent} from '../component/create-pattern-relation/create-pattern-relation.component';\nimport Pattern from '../model/hal/pattern.model';\nimport {PatternLanguageService} from '../service/pattern-language.service';\nimport PatternLanguage from '../model/hal/pattern-language.model';\nimport {PatternService} from '../service/pattern.service';\n// tslint:disable-next-line:max-line-length\nimport {MarkdownPatternSectionContentComponent} from '../component/markdown-content-container/markdown-pattern-sectioncontent/markdown-pattern-section-content.component';\nimport {DataChange} from '../component/markdown-content-container/interfaces/DataRenderingComponent.interface';\nimport PatternSectionSchema from '../model/hal/pattern-section-schema.model';\nimport {map, switchMap, tap} from 'rxjs/operators';\nimport {EMPTY, forkJoin, Observable} from 'rxjs';\nimport {PatternRelationDescriptorService} from '../service/pattern-relation-descriptor.service';\nimport {DirectedEdgeModel} from '../model/hal/directed-edge.model';\nimport {Embedded} from '../model/hal/embedded';\nimport {DirectedEdesResponse} from '../model/hal/directed-edes-response.interface';\nimport {UndirectedEdesResponse} from '../model/hal/undirected-edes-response.interface';\nimport {UndirectedEdgeModel} from '../model/hal/undirected-edge.model';\n\n@Component({\n    selector: 'pp-default-pattern-renderer',\n    templateUrl: './default-pattern-renderer.component.html',\n    styleUrls: ['./default-pattern-renderer.component.scss']\n})\nexport class DefaultPatternRendererComponent implements AfterViewInit {\n    @ViewChild(PatternPropertyDirective) ppPatternProperty: PatternPropertyDirective;\n    isLoading = true;\n    isLoadingLinks = true;\n    isEditingEnabled = true;\n    patternLanguage: PatternLanguage;\n    pattern: Pattern;\n    patterns: Array<Pattern>;\n    private directedPatternRelations: Array<DirectedEdgeModel>;\n    private undirectedPatternRelations: Array<UndirectedEdgeModel>;\n    private viewContainerRef;\n    private patternLanguageId: string;\n    private patternId: string;\n\n    constructor(private activatedRoute: ActivatedRoute,\n                private toasterService: ToasterService,\n                private cdr: ChangeDetectorRef,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private patternLanguageService: PatternLanguageService,\n                private patternService: PatternService,\n                private patternRelationDescriptorService: PatternRelationDescriptorService,\n                private dialog: MatDialog,\n                private router: Router) {\n        this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n    }\n\n    ngAfterViewInit(): void {\n        this.viewContainerRef = this.ppPatternProperty.viewContainerRef;\n        this.patternLanguageId = this.activatedRoute.snapshot.paramMap.get('patternLanguageId');\n        this.patternId = this.activatedRoute.snapshot.paramMap.get('patternId');\n\n        this.getData();\n\n\n    }\n\n    addLink() {\n        if (!this.patterns || this.patterns.length === 0) {\n            this.patternService.getPatternsByUrl(this.patternLanguage._links.patterns.href).subscribe((patterns) => {\n                this.patterns = patterns;\n                this.patterns.sort((p1, p2) => p1.name.localeCompare(p2.name));\n                this.showAndHandleLinkDialog();\n            });\n        } else {\n            this.showAndHandleLinkDialog();\n        }\n    }\n\n    addContentInfoToPattern(edge: DirectedEdgeModel | UndirectedEdgeModel): Observable<DirectedEdgeModel | UndirectedEdgeModel> {\n        const toPattern = edge instanceof DirectedEdgeModel ? edge.targetPatternId : edge.pattern2Id;\n        return this.patternService.getPatternContentByPattern(this.patterns.find(it => it.id === toPattern)).pipe(\n            map((patterncontent) => {\n                const targetPatternContent = patterncontent.content;\n                // edge instanceof DirectedEdgeModel ? edge.content = targetPatternContent : edge.p2.content = targetPatternContent;\n                return edge;\n            }));\n    }\n\n    getPatternInfos(): Observable<Pattern> {\n        if (!this.patternLanguage) {\n            console.log('tried to get patterns before the pattern language object with the url was instanciated');\n            return EMPTY;\n        }\n\n        return this.patternService.getPatternById(this.patternLanguage, this.patternId).pipe(\n            tap(pattern => this.pattern = pattern),\n            switchMap((pat) => {\n                return this.patternService.getPatternContentByPattern(this.pattern);\n            }), map((patternContent) => this.pattern.content = patternContent.content));\n    }\n\n    getPatternLanguageLinks(): Observable<any> {\n        const $getDirectedEdges = this.getDirectedEdges();\n        const $getUndirectedEdges = this.getUndirectedEdges();\n        return forkJoin([$getDirectedEdges, $getUndirectedEdges]).pipe(tap(() => this.isLoadingLinks = false));\n    }\n\n    private createSectionComponent(section: string) {\n        if (!this.pattern.content) {\n            return;\n        }\n        const properties = this.pattern.content[section];\n\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(MarkdownPatternSectionContentComponent);\n        const componentRef = this.viewContainerRef.createComponent(componentFactory);\n        const instance = (<MarkdownPatternSectionContentComponent>componentRef.instance);\n        instance.data = properties;\n        instance.title = section;\n        instance.isEditingEnabled = this.isEditingEnabled;\n        instance.changeContent.subscribe((dataChange: DataChange) => {\n            this.pattern.content[section] = dataChange.currentValue;\n            this.cdr.detectChanges();\n            this.savePattern(section, dataChange.previousValue, instance);\n\n        });\n    }\n\n    private getDirectedEdges(): Observable<Embedded<DirectedEdesResponse>> {\n        if (!this.patternLanguage) {\n            return EMPTY;\n        }\n        return this.patternLanguageService.getDirectedEdges(this.patternLanguage).pipe(\n            tap((edges) => {\n                this.directedPatternRelations = edges && edges._embedded ?\n                    edges._embedded.directedEdgeModels.filter(edge => edge.sourcePatternId === this.pattern.id ||\n                        edge.targetPatternId === this.pattern.id) : [];\n            }));\n    }\n\n    private getUndirectedEdges(): Observable<Embedded<UndirectedEdesResponse>> {\n        if (!this.patternLanguage) {\n            return EMPTY;\n        }\n        return this.patternLanguageService.getUndirectedEdges(this.patternLanguage).pipe(\n            tap((edges) => {\n                this.undirectedPatternRelations = edges && edges._embedded ?\n                    edges._embedded.undirectedEdgeModels.filter(edge => edge.pattern1Id === this.pattern.id || edge.pattern2Id === this.pattern.id) : [];\n            }));\n    }\n\n    private savePattern(section: string, previousContent: any, instance: MarkdownPatternSectionContentComponent) {\n        this.patternService.updatePattern(this.pattern._links.self.href, this.pattern).subscribe(() => this.toasterService.pop('success', 'Saved pattern'),\n            (error) => {\n                this.toasterService.pop('error', 'Could not save pattern, resetting content', error.message);\n                // reset text of the section:\n                this.pattern.content[section] = previousContent;\n                instance.changeText(previousContent);\n                this.cdr.detectChanges();\n            });\n    }\n\n    private getData(): void {\n        // get pattern language object with all the hal links that we need\n        this.patternLanguageService.getPatternLanguageByID(this.patternLanguageId).pipe(\n            tap((patternLanguage) => this.patternLanguage = patternLanguage),\n            // get our individual pattern\n            switchMap(() => this.fillPatternSectionData()),\n            switchMap(() => this.getPatternLanguageLinks())).subscribe(() =>\n            this.cdr.detectChanges());\n\n    }\n\n    private fillPatternSectionData() {\n        return this.getPatternInfos().pipe(\n            tap(() => {\n                this.patternLanguage.patternSchema.patternSectionSchemas.forEach((sec: PatternSectionSchema) => {\n                    this.createSectionComponent(sec.name);\n                });\n                this.isLoading = false;\n            }));\n    }\n\n    private showAndHandleLinkDialog() {\n        const dialogRef = this.dialog.open(CreatePatternRelationComponent, {\n                data: {firstPattern: this.pattern, patterns: this.patterns}\n            }\n        );\n        dialogRef.afterClosed().pipe(\n            switchMap(result => {\n                return result ? this.addContentInfoToPattern(result) : EMPTY;\n            }),\n            switchMap((edge) => {\n                const url = edge instanceof DirectedEdgeModel ?\n                    this.patternLanguage._links.directedEdges.href : this.patternLanguage._links.undirectedEdges.href;\n                return edge ? this.patternRelationDescriptorService.addRelationToPL(this.patternLanguage, edge) : EMPTY;\n            }),\n            switchMap((edgeCreated) => {\n                return edgeCreated ? this.getPatternLanguageLinks() : EMPTY;\n            }),\n        ).subscribe(\n            () => {\n                this.toasterService.pop('success', 'Created new Relation');\n\n            },\n            (error) => {\n                this.toasterService.pop('error', 'Could not create new relation: ', error);\n                console.log(error);\n            });\n    }\n}\n","<pp-action-button-bar (add2Clicked)=\"addPattern()\" (addClicked)=\"addLink()\" [addButtonText]=\"'Add Link'\"\n                      [displayText]=\"patternLanguage?.name\" [secondAddButtonText]=\"'Add Pattern'\"\n                      [secondAddButton]=\"true\">\n    <pp-toggle-renderer [graphVisible]=\"graphVisible\" *ngIf=\"!isLoadingPatternData && !isLoadingLinkData\"\n                        (toggledRenderer)=\"setGraphVisible($event)\"></pp-toggle-renderer>\n    <span *ngIf=\"isLoadingLinkData\"> Loading Links... </span>\n    <mat-form-field id=\"search-field\" #searchField appearance=\"outline\"\n                    *ngIf=\"!graphVisible\" [floatLabel]=\"'always'\">\n        <mat-label>Filter</mat-label>\n        <input matInput placeholder=\"Type to filter\" [formControl]=\"filter\">\n        <mat-icon matSuffix>filter_list</mat-icon>\n    </mat-form-field>\n    <button style=\"margin-left: 10px;\" (click)=\"reloadGraph()\" *ngIf=\"graphVisible\" color=\"accent\" mat-raised-button>\n        <i class=\"material-icons\">autorenew</i> Reformat\n    </button>\n</pp-action-button-bar>\n\n<mat-progress-spinner *ngIf=\"isLoadingPatternData\" mode=\"indeterminate\"></mat-progress-spinner>\n<div>\n    <pp-card-renderer *ngIf=\"!graphVisible && patterns && patternsForCardsView\"\n                      [uriEntities]=\"this.patternsForCardsView\"\n                      [showLinks]=\"false\"></pp-card-renderer>\n    <pp-graph-display *ngIf=\"graphVisible && patterns && !isLoadingLinkData\" [data]=\"{\n                patterns: this.patterns, edges: this.patternLinks,\n                patternLanguage: this.patternLanguage, patternView: null\n            }\" (addedEdge)=\"linkAddedInGraphEditor($event)\" [showPatternLanguageName]=\"false\">\n    </pp-graph-display>\n\n</div>\n\n<pp-creative-license-footer *ngIf=\"patterns && patterns.length\"\n                            [patternLanguage]=\"patternLanguage\"></pp-creative-license-footer>\n","import {ChangeDetectorRef, Component, ComponentFactoryResolver, ElementRef, OnInit, ViewChild, ViewContainerRef} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {UriConverter} from '../util/uri-converter';\nimport {MatDialog} from '@angular/material/dialog';\nimport {PatternLanguageService} from '../service/pattern-language.service';\nimport PatternLanguage from '../model/hal/pattern-language.model';\nimport {D3Service} from '../../graph/service/d3.service';\nimport {GraphDisplayComponent} from '../component/graph-display/graph-display.component';\nimport {EMPTY, forkJoin, Observable} from 'rxjs';\nimport {Embedded} from '../model/hal/embedded';\nimport {DirectedEdesResponse} from '../model/hal/directed-edes-response.interface';\nimport {switchMap, tap} from 'rxjs/operators';\nimport {UndirectedEdesResponse} from '../model/hal/undirected-edes-response.interface';\nimport {DirectedEdgeModel} from '../model/hal/directed-edge.model';\nimport {UndirectedEdgeModel} from '../model/hal/undirected-edge.model';\nimport {CreatePatternRelationComponent} from '../component/create-pattern-relation/create-pattern-relation.component';\nimport {PatternRelationDescriptorService} from '../service/pattern-relation-descriptor.service';\nimport {ToasterService} from 'angular2-toaster';\nimport {PatternService} from '../service/pattern.service';\nimport Pattern from '../model/hal/pattern.model';\nimport {FormControl} from '@angular/forms';\n\n@Component({\n    selector: 'pp-default-pl-renderer',\n    templateUrl: './default-pl-renderer.component.html',\n    styleUrls: ['./default-pl-renderer.component.scss']\n})\nexport class DefaultPlRendererComponent implements OnInit {\n\n    patterns: Array<Pattern> = [];\n    patternsForCardsView: Array<Pattern> = [];\n    patternLanguage: PatternLanguage;\n    patternLanguageId: string;\n    @ViewChild('graphWrapper') graph: ElementRef;\n    @ViewChild('cardsView') cardsView: ElementRef;\n    @ViewChild('searchField') searchField: ElementRef;\n    @ViewChild(GraphDisplayComponent, {static: false}) graphDisplayComponent: GraphDisplayComponent;\n    @ViewChild('displayPLContainer', {read: ViewContainerRef}) loadRenderer;\n    graphVisible = false;\n    isLoadingPatternData = true;\n    isLoadingLinkData = true;\n    toggleBeforeDataLoaded = false;\n    filter: FormControl;\n    private directedPatternRelations: Array<DirectedEdgeModel> = [];\n    private undirectedPatternRelations: Array<UndirectedEdgeModel> = [];\n    private patternLinks: Array<UndirectedEdgeModel | DirectedEdgeModel>;\n\n    constructor(private activatedRoute: ActivatedRoute,\n                private cdr: ChangeDetectorRef,\n                private dialog: MatDialog,\n                private patternLanguageService: PatternLanguageService,\n                private patternService: PatternService,\n                private patternRelationDescriptorService: PatternRelationDescriptorService,\n                private d3Service: D3Service,\n                private router: Router,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private toasterService: ToasterService) {\n    }\n\n    ngOnInit() {\n        this.loadData();\n        this.filter = new FormControl('');\n        this.filter.valueChanges.subscribe((filterText: string) => {\n            if (this.graphVisible || !this.patterns || this.patterns.length === 0) {\n                return;\n            }\n            this.patternsForCardsView = this.patterns.filter(pattern => pattern.name.toLowerCase().includes(filterText.toLowerCase()));\n        });\n    }\n\n    detectChanges() {\n        this.cdr.detectChanges();\n    }\n\n    getPatternLinks(): Observable<any> {\n        const $getDirectedEdges = this.getDirectedEdges();\n        const $getUndirectedEdges = this.getUndirectedEdges();\n        return forkJoin([$getDirectedEdges, $getUndirectedEdges]).pipe(\n            tap((edges) => {\n                this.patternLinks = [];\n                this.patternLinks.push(...this.directedPatternRelations);\n                this.patternLinks.push(...this.undirectedPatternRelations);\n            }));\n    }\n\n\n    public addPattern(): void {\n        this.router.navigate(['create-patterns'], {relativeTo: this.activatedRoute});\n    }\n\n    public addLink() {\n        // Todo: Make patternlanguage camelcase\n        const dialogRef = this.dialog.open(CreatePatternRelationComponent, {\n            data: {\n                patterns: this.patterns,\n                patternlanguage: this.patternLanguage\n            }\n        });\n\n        dialogRef.afterClosed().pipe(\n            switchMap((edge) => {\n                return edge ? this.insertEdge(edge) : EMPTY;\n            })).subscribe(res => {\n            if (res) {\n                this.toasterService.pop('success', 'Added Relation');\n                this.detectChanges();\n            }\n        });\n    }\n\n    insertEdge(edge): Observable<any> {\n        return this.patternRelationDescriptorService.addRelationToPL(this.patternLanguage, edge).pipe(\n            switchMap((res) => res ? this.getPatternLinks() : EMPTY),\n            switchMap(() => this.patternService.getPatternsByUrl(this.patternLanguage._links.patterns.href)),\n            tap((patterns: Array<Pattern>) => this.patterns = patterns));\n    }\n\n\n    linkAddedInGraphEditor(edge) {\n        this.insertEdge(edge).subscribe(res => {\n            this.toasterService.pop('success', 'Added Relation');\n            this.graphDisplayComponent.updateSideMenu();\n            this.detectChanges();\n        });\n    }\n\n    reloadGraph() {\n        this.graphDisplayComponent.reformatGraph();\n    }\n\n    private loadData(): void {\n        this.isLoadingPatternData = true;\n        this.patternLanguageId = UriConverter.doubleDecodeUri(this.activatedRoute.snapshot.paramMap.get('patternLanguageId'));\n\n        if (this.patternLanguageId) {\n            this.patternLanguageService.getPatternLanguageByID(this.patternLanguageId)\n                .pipe(\n                    tap(patternlanguage => this.patternLanguage = patternlanguage),\n                    switchMap(() => this.loadPatterns()),\n                    switchMap(() => this.getPatternLinks())\n                ).subscribe(() => {\n                this.isLoadingLinkData = false;\n                this.detectChanges();\n            });\n        }\n    }\n\n    private getDirectedEdges(): Observable<Embedded<DirectedEdesResponse>> {\n        if (!this.patternLanguage) {\n            return EMPTY;\n        }\n        return this.patternLanguageService.getDirectedEdges(this.patternLanguage).pipe(\n            tap((edges) => {\n                this.directedPatternRelations = edges._embedded ? edges._embedded.directedEdgeModels : [];\n            }));\n    }\n\n    private getUndirectedEdges(): Observable<Embedded<UndirectedEdesResponse>> {\n        if (!this.patternLanguage) {\n            return EMPTY;\n        }\n        return this.patternLanguageService.getUndirectedEdges(this.patternLanguage).pipe(\n            tap((edges) => {\n                this.undirectedPatternRelations = edges._embedded ? edges._embedded.undirectedEdgeModels : [];\n            }));\n    }\n\n    setGraphVisible(newValueGraphVisible: boolean) {\n        if (newValueGraphVisible) { // reset the search field so all patterns are shown in the graph\n            this.filter.setValue('');\n        }\n        this.graphVisible = newValueGraphVisible;\n        // if user toggled to early, we will retrigger\n        this.toggleBeforeDataLoaded = this.isLoadingLinkData && this.isLoadingPatternData;\n    }\n\n\n    private loadPatterns(): Observable<any[]> {\n        return this.patternService.getPatternsByUrl(this.patternLanguage._links.patterns.href).pipe(\n            tap(patterns => {\n                this.patterns = patterns;\n                this.patternsForCardsView = this.patterns;\n                this.isLoadingPatternData = false;\n            }));\n    }\n}\n","import {Directive, EventEmitter, HostListener, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {debounceTime, takeUntil} from 'rxjs/operators';\n\n@Directive({\n    selector: '[ppGraphEventEmmiter]'\n})\nexport class EmitEventOnAddedEdgeDirective implements OnInit, OnDestroy {\n    @Output('onAddedEdge') edgeAddedEventEmitter = new EventEmitter<any>();\n    @Output('onClickedNode') nodeClickedEventEmitter = new EventEmitter<any>();\n    @Output('onClickedBackground') backgroundClickedEventEmitter = new EventEmitter<any>();\n    @Output('onNodePositionChange') onNodePositionChangeEventEmitter = new EventEmitter<any>();\n\n    constructor() {\n    }\n\n    private movements = new Subject();\n    private unsubscribe: Subject<void> = new Subject();\n\n    ngOnInit(): void {\n        // delay trigggering click events and don't trigger it if nothing changed\n        this.movements.pipe(\n            debounceTime(1000),\n            takeUntil(this.unsubscribe)\n        ).subscribe((e) => {\n            this.onNodePositionChangeEventEmitter.emit(e);\n        });\n    }\n\n    @HostListener('edgeadd', ['$event']) onEdgeAdd($event) {\n        this.edgeAddedEventEmitter.emit($event);\n    }\n\n    @HostListener('nodeclick', ['$event']) onNodeClick($event) {\n        console.log('click-event');\n        if ($event.details && $event.details.key === 'image-clicked') {\n            console.log('image');\n            // $event.preventDefault();\n            // return;\n        }\n\n        this.nodeClickedEventEmitter.emit($event);\n\n    }\n\n    @HostListener('backgroundclick', ['$event']) onBackgroundClick($event) {\n        console.log($event);\n        if ($event.details && $event.details.key === 'image-clicked') {\n            console.log('image');\n        }\n        this.backgroundClickedEventEmitter.emit($event);\n    }\n\n    @HostListener('nodepositionchange', ['$event']) onNodePositionChange(event) {\n        this.movements.next(event);\n    }\n\n    ngOnDestroy() {\n        this.unsubscribe.next();\n        this.unsubscribe.complete();\n    }\n\n\n}\n","import { Directive, EventEmitter, HostListener, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/internal/operators';\n\n@Directive({\n  selector: '[ppEmitOnChange]'\n})\nexport class EmitEventOnKeyupDirective implements OnInit, OnDestroy {\n\n  constructor() {\n  }\n  @Output('onKeyup') keyUpEventEmitter = new EventEmitter<any>();\n\n  private clicks = new Subject();\n\n  ngOnInit(): void {\n    // delay trigggering click events and don't trigger it if nothing changed\n    this.clicks.pipe(\n      debounceTime(1000),\n      distinctUntilChanged()\n    ).subscribe((e) => {\n      this.keyUpEventEmitter.emit(e);\n    });\n  }\n\n\n  @HostListener('window:keyup', ['$event'])\n  keyEvent(event: KeyboardEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.clicks.next(event);\n  }\n\n  ngOnDestroy(): void {\n    this.clicks.unsubscribe();\n  }\n\n}\n","import {DirectedEdgeModel} from './directed-edge.model';\n\nexport class AddDirectedEdgeToViewRequest {\n    directedEdgeId: string;\n    sourcePatternId: string;\n    targetPatternId: string;\n    description: string;\n    type: string;\n    newEdge: boolean;\n\n\n    constructor(edge: DirectedEdgeModel) {\n        this.directedEdgeId = edge.id ? edge.id : null;\n        this.sourcePatternId = edge.sourcePatternId;\n        this.targetPatternId = edge.targetPatternId;\n        this.description = edge.description;\n        this.type = edge.type;\n        // if there is no existing edge id, this must be a new edge:\n        this.newEdge = !edge.id;\n    }\n}\n","import {UndirectedEdgeModel} from './undirected-edge.model';\n\nexport class AddUndirectedEdgeToViewRequest {\n    undirectedEdgeId: string;\n    pattern1Id: string;\n    pattern2Id: string;\n    description: string;\n    type: string;\n    newEdge: boolean;\n\n\n    constructor(edge: UndirectedEdgeModel) {\n        this.undirectedEdgeId = edge.id;\n        this.pattern1Id = edge.pattern1Id;\n        this.pattern2Id = edge.pattern2Id;\n        this.description = edge.description;\n        this.type = edge.type;\n        // if there is no existing edge id, this must be a new edge:\n        this.newEdge = !edge.id;\n    }\n}\n","import {DirectedEdgeModel} from './directed-edge.model';\n\nexport class CreateDirectedEdgeRequest {\n    targetPatternId: string;\n    sourcePatternId: string;\n    type: string;\n    description: string;\n\n    constructor(edge: DirectedEdgeModel) {\n        this.sourcePatternId = edge.sourcePatternId;\n        this.targetPatternId = edge.targetPatternId;\n        this.type = edge.type;\n        this.description = edge.description;\n    }\n}\n","import {UndirectedEdgeModel} from './undirected-edge.model';\n\nexport class CreateUndirectedEdgeRequest {\n    p2Id: string;\n    p1Id: string;\n    type: string;\n    description: string;\n\n    constructor(edge: UndirectedEdgeModel) {\n        this.p1Id = edge.pattern1Id;\n        this.p2Id = edge.pattern2Id;\n        this.type = edge.type;\n        this.description = edge.description;\n    }\n}\n","import { DirectedEdgeResource } from './hal-resources.interface';\nimport PatternLanguage from './pattern-language.model';\nimport { Edge } from './edge.model';\nimport { PatternView } from './pattern-view.model';\nimport Pattern from './pattern.model';\n\nexport class DirectedEdgeModel extends Edge {\n    sourcePatternName: string;\n    sourcePatternId: string;\n    sourcePatternUri: string;\n    targetPatternName: string;\n    targetPatternId: string;\n    targetPatternUri: string;\n\n    _links: DirectedEdgeResource;\n\n    constructor(source: Pattern, target: Pattern, patternlanguage: PatternLanguage, description: any, type: string, patternView: PatternView = null) {\n        super(description, type, patternView, patternlanguage);\n        this.sourcePatternId = source.id;\n        this.sourcePatternName = source.name;\n        this.sourcePatternUri = source.uri;\n        this.targetPatternId = target.id;\n        this.targetPatternName = target.name;\n        this.targetPatternUri = target.uri;\n    }\n}\n","import {PatternView} from './pattern-view.model';\nimport PatternLanguage from './pattern-language.model';\n\nexport class Edge {\n    description: any;\n    id: string;\n    type: string;\n    patternView?: PatternView;\n    patternlanguage?: PatternLanguage;\n\n    constructor(description: any, type: string, patternView: PatternView = null, patternLanguage: PatternLanguage = null) {\n        this.description = description;\n        this.type = type;\n        this.patternView = patternView;\n        this.patternlanguage = patternLanguage;\n    }\n}\n","/*\n * Copyright (c) 2019 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport UriEntity from './uri-entity.model';\nimport PatternSchema from './pattern-schema.model';\nimport {PatternLanguageResource} from './hal-resources.interface';\nimport Pattern from './pattern.model';\n\nclass PatternLanguage extends UriEntity {\n    patterns?: Array<Pattern>;\n    logo: string;\n    patternSchema: PatternSchema;\n    _links: PatternLanguageResource;\n    creativeCommonsReference: string;\n}\n\nexport default PatternLanguage;\n","/*\n * Copyright (c) 2019 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport PatternSectionSchema from './pattern-section-schema.model';\nimport { PatternSchemaResource } from './hal-resources.interface';\n\nclass PatternSchema {\n    id: string;\n    patternSectionSchemas: Array<PatternSectionSchema> = [];\n    _links: PatternSchemaResource;\n}\n\nexport default PatternSchema;\n","/*\n * Copyright (c) 2019 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nclass PatternSectionSchema {\n    id: number;\n    label: string;\n    name: string;\n    type: string;\n    position: number;\n}\n\nexport default PatternSectionSchema;\n","import {UndirectedEdgeResource} from './hal-resources.interface';\nimport Pattern from './pattern.model';\nimport PatternLanguage from './pattern-language.model';\nimport {PatternView} from './pattern-view.model';\nimport {Edge} from './edge.model';\n\nexport class UndirectedEdgeModel extends Edge {\n    pattern1Id: string;\n    pattern2Id: string;\n    pattern1Name: string;\n    pattern2Name: string;\n    pattern1Uri: string;\n    pattern2Uri: string;\n    patternlanguage: PatternLanguage;\n    _links: UndirectedEdgeResource;\n    patternView?: PatternView;\n\n    constructor(p1: Pattern, p2: Pattern, patternlanguage: PatternLanguage, description: any, type: string, patternView: PatternView = null) {\n        super(description, type, patternView, patternlanguage);\n        this.pattern1Id = p1.id;\n        this.pattern1Name = p1.name;\n        this.pattern1Uri = p1.uri;\n        this.pattern2Id = p2.id;\n        this.pattern2Name = p2.name;\n        this.pattern2Uri = p2.uri;\n    }\n}\n","/*\n * Copyright (c) 2019 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nclass UriEntity {\n    id: string;\n    uri: string;\n    name: string;\n}\n\nexport default UriEntity;\n","export enum PatternRelationDescriptorDirection {\n  DirectedRight,\n  DirectedLeft,\n  UnDirected\n}\n","import { Injectable } from '@angular/core';\nimport RenderingComponent from '../model/rendering-component';\n\n@Injectable({\n    providedIn: 'root'\n})\n/**\n * Service for registering and retreiving rendering components of patterns languages and patterns.\n */\nexport class ComponentRegistryService {\n\n    // dictionary mapping IRI to list of renderer components\n    private dictionary = new Map<string, Array<RenderingComponent>>();\n\n    constructor() {\n    }\n\n    /**\n     * Returns the rendering component at the given index.\n     *\n     * @param id the uri of the registered renderer components\n     * @param index (optional) the index of the renderer within the list\n     * @returns the rendering component at the given index or null, if there is no registered component\n     */\n    getPLRenderingComponents(id: string, index: number = 0): RenderingComponent {\n        const componentList = this.dictionary.get(id.toLowerCase());\n        return componentList ? componentList[index] : null;\n    }\n\n    /**\n     * Returns all rendering components that have been registered to the given uri.\n     *\n     * @param id the uri of the registered renderer components\n     * @returns a list containing all rendering components or null, if there are no registered renderer\n     */\n    getRenderingComponents(id: string): Array<RenderingComponent> {\n        return this.dictionary.get(id.toLowerCase());\n    }\n\n    /**\n     * Registers the given components for the given uri.\n     *\n     * @param id the uri which the components will be registered for\n     * @param component the components to be registered (higher priority first!)\n     */\n    registerComponent(id: string, component: RenderingComponent): void {\n        const componentList = this.dictionary.get(id);\n        if (!componentList) {\n            this.dictionary.set(id.toLowerCase(), [component]);\n        } else {\n            componentList.push(component);\n            // sort list DESCENDING according to priority (higher prio first)\n            componentList.sort((a, b) => b.priority - a.priority);\n        }\n    }\n}\n","/*\n * Copyright (c) 2019 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport {Injectable} from '@angular/core';\nimport PatternLanguage from '../model/hal/pattern-language.model';\nimport {HttpClient, HttpResponse} from '@angular/common/http';\nimport {globals} from '../../globals';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport PatternLanguages from '../model/hal/pattern-languages.model';\nimport {DirectedEdesResponse} from '../model/hal/directed-edes-response.interface';\nimport {Embedded} from '../model/hal/embedded';\nimport {UndirectedEdesResponse} from '../model/hal/undirected-edes-response.interface';\nimport {GraphNode} from '../component/graph-display/graph-display.component';\nimport PatternLanguageModel from '../model/hal/pattern-language-model.model';\n\n@Injectable()\nexport class PatternLanguageService {\n\n    private repoEndpoint = globals.repoEndpoint;\n\n    constructor(private http: HttpClient) {\n    }\n\n    public getPatternLanguages(): Observable<Array<PatternLanguageModel>> {\n        return this.getPatternLanguageResult()\n            .pipe(\n                map((result: PatternLanguages) => {\n                        return result._embedded ? result._embedded.patternLanguageModels : [];\n                    }\n                )\n            );\n    }\n\n    public getPatternLanguageResult(): Observable<PatternLanguages> {\n        return this.http.get<PatternLanguages>(this.repoEndpoint + '/patternLanguages');\n    }\n\n    public getPatternLanguageByUrl(url: string): Observable<PatternLanguage> {\n        return this.http.get(url).pipe(\n            map(res => <PatternLanguage>res)\n        );\n    }\n\n    public getPatternLanguageByEncodedUri(encodedUri: string): Observable<PatternLanguage> {\n        const url = this.repoEndpoint + '/patternLanguages/findByUri?encodedUri=' + encodedUri;\n        return this.http.get<PatternLanguage>(url);\n    }\n\n    public savePatternLanguage(patternLanguage: PatternLanguage): Observable<HttpResponse<any>> {\n        return this.http.post<HttpResponse<any>>(this.repoEndpoint + '/patternLanguages', patternLanguage, {observe: 'response'});\n    }\n\n    public getDirectedEdges(patternLanguage: PatternLanguage): Observable<Embedded<DirectedEdesResponse>> {\n        return this.http.get<Embedded<DirectedEdesResponse>>(patternLanguage._links.directedEdges.href);\n    }\n\n    public getUndirectedEdges(patternLanguage: PatternLanguage): Observable<Embedded<UndirectedEdesResponse>> {\n        return this.http.get<Embedded<UndirectedEdesResponse>>(patternLanguage._links.undirectedEdges.href);\n    }\n\n    saveGraph(patternLanguage: PatternLanguage, nodes: Array<any>) {\n        return this.http.post<any>(patternLanguage._links.graph.href, nodes, {observe: 'response'});\n    }\n\n    getGraph(patternLanguage: PatternLanguage) {\n        return this.http.get<{ graph: Array<GraphNode> }>(patternLanguage._links.graph.href);\n    }\n\n    getPatternLanguageByID(patternLanguageId: string): Observable<PatternLanguage> {\n        const url = this.repoEndpoint + '/patternLanguages/' + patternLanguageId;\n        return this.http.get<PatternLanguage>(url);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {globals} from '../../globals';\nimport {HttpClient} from '@angular/common/http';\nimport {forkJoin, Observable, of} from 'rxjs';\nimport {DirectedEdgeModel} from '../model/hal/directed-edge.model';\nimport {UndirectedEdgeModel} from '../model/hal/undirected-edge.model';\nimport {HalLink} from '../model/hal/hal-link.interface';\nimport {map} from 'rxjs/operators';\nimport PatternLanguage from '../model/hal/pattern-language.model';\nimport {CreateUndirectedEdgeRequest} from '../model/hal/create-undirected-edge-request';\nimport {CreateDirectedEdgeRequest} from '../model/hal/create-directed-edge-request';\nimport {PatternResponse} from '../model/hal/pattern-response.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PatternRelationDescriptorService {\n\n    private repoEndpoint = globals.repoEndpoint;\n\n    constructor(private http: HttpClient) {\n    }\n\n    addRelationToPL(patternLanguage: PatternLanguage, relation: DirectedEdgeModel | UndirectedEdgeModel): Observable<any> {\n        return relation instanceof DirectedEdgeModel ?\n            this.http.post(patternLanguage._links.directedEdges.href, new CreateDirectedEdgeRequest(relation), {observe: 'response'}) :\n            this.http.post(patternLanguage._links.undirectedEdges.href, new CreateUndirectedEdgeRequest(relation), {observe: 'response'});\n    }\n\n    getDirectedEdgeByUrl(url: string): Observable<DirectedEdgeModel> {\n        return this.http.get<DirectedEdgeModel>(url);\n    }\n\n    getUndirectedEdgeByUrl(url: string): Observable<UndirectedEdgeModel> {\n        return this.http.get<UndirectedEdgeModel>(url);\n    }\n\n    getEdgesForPattern(pattern: PatternResponse): Observable<EdgeWithType[]> {\n        if (!pattern) {\n            return of(null);\n        }\n        const observables = [];\n        const edgeLinks = ['undirectedEdges', 'outgoingDirectedEdges', 'ingoingDirectedEdges'];\n        edgeLinks.forEach((edgeType: string) => {\n            const edgeLink = pattern._links[edgeType];\n            if (edgeLink) {\n                const halLinks = Array.isArray(edgeLink) ? <HalLink[]>edgeLink : [edgeLink];\n                observables.push(...halLinks.map(link =>\n                    this.getUndirectedEdgeByUrl(link.href).pipe(map(res => {\n                        return <EdgeWithType>{type: edgeType, edge: res};\n                    }))\n                ));\n            }\n        });\n\n        return observables.length > 0 ? forkJoin(observables) : of(null);\n    }\n}\n\nexport class EdgeWithType {\n    type: string;\n    edge: (DirectedEdgeModel | UndirectedEdgeModel);\n}\n","/*\n * Copyright (c) 2019 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport {Injectable} from '@angular/core';\nimport {HttpClient, HttpResponse} from '@angular/common/http';\nimport {globals} from '../../globals';\nimport {EMPTY, forkJoin, Observable, of} from 'rxjs';\nimport Pattern from '../model/hal/pattern.model';\nimport {PatternView} from '../model/hal/pattern-view.model';\nimport {PatternViewResponse} from '../model/hal/pattern-view-response.interface';\nimport {DirectedEdgeModel} from '../model/hal/directed-edge.model';\nimport {UndirectedEdgeModel} from '../model/hal/undirected-edge.model';\nimport {LinksToOtherPattern} from '../../pattern-view-management/add-to-view/add-to-view.component';\nimport {AddDirectedEdgeToViewRequest} from '../model/hal/add-directed-edge-to-view-request';\nimport {AddUndirectedEdgeToViewRequest} from '../model/hal/add-undirected-edge-to-view-request';\nimport {Embedded} from '../model/hal/embedded';\nimport {UndirectedEdesResponse} from '../model/hal/undirected-edes-response.interface';\nimport {DirectedEdesResponse} from '../model/hal/directed-edes-response.interface';\nimport {GraphNode} from '../component/graph-display/graph-display.component';\n\n@Injectable()\nexport class PatternViewService {\n\n    private repoEndpoint = globals.repoEndpoint;\n\n    constructor(private http: HttpClient) {\n    }\n\n\n    getPatternViews(): Observable<PatternViewResponse> {\n        return this.http.get<PatternViewResponse>(this.repoEndpoint + '/patternViews');\n    }\n\n\n    savePatternView(url: string, view: PatternView) {\n        return this.http.post<PatternViewResponse>(url, view, {observe: 'response'});\n    }\n\n    addPatterns(url: string, patterns: Pattern[]): Observable<any> {\n        const observables = patterns.map(pat => this.http.post<PatternViewResponse>(url, pat, {observe: 'response'}));\n        return observables.length > 0 ? forkJoin(observables) : of(null);\n    }\n\n    getPatternViewByUri(encodedUri: string): Observable<PatternView> {\n        return this.http.get<PatternView>(this.repoEndpoint + `/patternViews/findByUri?encodedUri=${encodedUri}`);\n    }\n\n    createLink(url, edge: DirectedEdgeModel | UndirectedEdgeModel | AddDirectedEdgeToViewRequest | AddUndirectedEdgeToViewRequest): Observable<HttpResponse<Object>> {\n        return this.http.post(url, edge, {observe: 'response'});\n    }\n\n    addLinks(patternView: PatternView, items: LinksToOtherPattern[]): Observable<any> {\n\n        const observables = items\n            .map(item => item.type === 'directed' ?\n                this.http.post(patternView._links.directedEdges.href, new AddDirectedEdgeToViewRequest(<DirectedEdgeModel>item.edge), {observe: 'response'}) :\n                this.http.post(patternView._links.undirectedEdges.href, new AddUndirectedEdgeToViewRequest(<UndirectedEdgeModel>item.edge), {observe: 'response'}));\n        return observables.length > 0 ? forkJoin(observables) : EMPTY;\n    }\n\n    getDirectedEdges(patternView: PatternView): Observable<Embedded<DirectedEdesResponse>> {\n        return this.http.get<Embedded<DirectedEdesResponse>>(patternView._links.directedEdges.href);\n    }\n\n    getUndirectedEdges(patternView: PatternView): Observable<Embedded<UndirectedEdesResponse>> {\n        return this.http.get<Embedded<UndirectedEdesResponse>>(patternView._links.undirectedEdges.href);\n    }\n\n    deleteLink(patternLink: any): Observable<any> {\n        return this.http.delete(patternLink);\n    }\n\n    saveGraph(patternView: PatternView, nodeList: any[]) {\n        return this.http.post<any>(patternView._links.graph.href, nodeList, {observe: 'response'});\n    }\n\n    getGraph(patternView: PatternView) {\n        return this.http.get<{ graph: Array<GraphNode> }>(patternView._links.graph.href);\n    }\n\n}\n","/*\n * Copyright (c) 2019 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {globals} from '../../globals';\nimport {Observable} from 'rxjs';\nimport Pattern from '../model/hal/pattern.model';\nimport {map} from 'rxjs/operators';\nimport {PatternResponse} from '../model/hal/pattern-response.interface';\nimport PatternLanguage from '../model/hal/pattern-language.model';\n\n@Injectable()\nexport class PatternService {\n\n    private repoEndpoint = globals.repoEndpoint;\n\n    constructor(private http: HttpClient) {\n    }\n\n    public getPatternByEncodedUri(encodedUri: string): Observable<Pattern> {\n        const url = this.repoEndpoint + '/patterns/search/findByUri?encodedUri=' + encodedUri;\n        return this.http.get<Pattern>(url);\n    }\n\n    getPatternsByUrl(patternsUrl: string): Observable<Array<Pattern>> {\n        return this.http.get<PatternResponse>(patternsUrl).pipe(\n            map(result => {\n                return <Array<Pattern>>(result._embedded ? result._embedded.patternModels : []);\n            })\n        );\n    }\n\n    getPatternContentByPattern(pattern: Pattern): Observable<{ content: any }> {\n        return this.http.get<{ content: any }>(pattern._links.content.href);\n    }\n\n    savePattern(url: string, pattern: any): Observable<any> {\n        return this.http.post<Pattern>(url, pattern, {observe: 'response'});\n    }\n\n    updatePattern(url: string, pattern: any): Observable<any> {\n        return this.http.put<Pattern>(url, pattern, {observe: 'response'});\n    }\n\n\n    getPatternById(patternLanguage: PatternLanguage, patternId: String): Observable<Pattern> {\n        console.log('patternid');\n        console.log(patternId);\n        return this.http.get <Pattern>(this.repoEndpoint + '/patternLanguages/' + patternLanguage.id + '/patterns/' + patternId);\n    }\n\n    getPatternByUrl(href: string): Observable<PatternResponse> {\n        return this.http.get<PatternResponse>(href);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AbstractControl, ValidatorFn } from '@angular/forms';\nimport { UriConverter } from '../util/uri-converter';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidationService {\n\n\n  constructor() {\n  }\n\n\n  static getMessageForError(section, keyError, errorValue): string {\n    if (keyError === 'required') {\n      return section + ': This value is required';\n    }\n    if (keyError === 'xsdImage') {\n\n      return section + ': Please follow this patterns: ![](http://) and enter a valid url in the round brackets';\n    }\n    if (keyError === 'xsdInteger') {\n      return section + ': Please enter an integer.';\n    }\n\n    if( keyError === 'xsdAnyURI') {\n\n      return section + ': Please enter a valid URL/URL.';\n    }\n    if (keyError === 'minlength') {\n      return section + ': Please enter only ' + errorValue['requiredLength'] + ' entries';\n    }\n    if (keyError === 'maxlength') {\n      return section + ': Please enter max. ' + errorValue['requiredLength'] + ' entries';\n    }\n  }\n\n\n\n  // checks if value is an array of strings matching the markdown image patterns (e.g. [![test](http://placekitten.com/200/300), ![](http://any.valid.url.com)]\n  static xsdImage(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\n      if (control.value !== undefined) {\n        if (!this.allValuesMatchRegex(control.value, /!\\[.*\\]\\(http(s)?:\\/\\/([a-zA-Z.0-9]+[\\/]*)+\\)/g)) {\n          return {'xsdImage': true};\n        }\n      }\n      return null;\n    };\n  }\n\n  // checks if value is an array of strings matching the markdown image patterns (e.g. [![test](http://placekitten.com/200/300), ![](http://any.valid.url.com)]\n  static xsdInteger(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\n      if (control.value !== undefined) {\n        let arrayOfImageValues = control.value;\n        if (!(arrayOfImageValues instanceof Array)) {\n          arrayOfImageValues = [arrayOfImageValues];\n        }\n        for (const item of arrayOfImageValues) {\n          if (isNaN(+item)) {\n            return {'xsdInteger': true};\n          }\n        }\n      }\n      return null;\n    };\n  }\n\n  // checks if value is an array of strings matching the markdown url patterns (e.g. [[test](http://placekitten.com/200/300), [](http://any.valid.url.com)]\n  static xsdAnyURI(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\n      if (control.value !== undefined) {\n        if (!this.allValuesMatchRegex(control.value, /\\[.*\\]\\(http:\\/\\/([a-zA-Z.0-9]+[\\/]*)+\\)/g)) {\n          return {'xsdAnyURI': true};\n        }\n      }\n      return null;\n    };\n  }\n\n  static startsWithValidPrefix(allowedPrefixes: string[]): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\n      if (control.value !== undefined) {\n        if (control.value.indexOf(':') === -1) {\n          return {'startsWithValidPrefix': true};\n        }\n        const prefix = control.value.trim().substring(0, control.value.indexOf(':'));\n        if (allowedPrefixes.findIndex(it => it === prefix) === -1) {\n          return {'startsWithValidPrefix': true};\n        }\n      }\n      return null;\n    };\n  }\n\n\n  private static allValuesMatchRegex(array: any, regex) {\n    let arrayOfImageValues = array;\n    if (!(arrayOfImageValues instanceof Array)) {\n      arrayOfImageValues = [arrayOfImageValues];\n    }\n    for (const stringItem of arrayOfImageValues) {\n      const item = stringItem.startsWith('* ') ? stringItem.substr(2) : stringItem;\n      if (!item || UriConverter.removeWhitespace(item).length === 0) {\n        continue;\n      }\n      if (!item.match(regex)) {\n        continue;\n      }\n      const match = item.match(regex);\n      if (match.length < item.trim().length) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { QueriedData } from '../service/data/QueriedData.interface';\nimport { globals } from '../../globals';\n\nexport class UriConverter {\n\n    static encodeUri(uri: string): string {\n        return encodeURIComponent(uri);\n    }\n\n    static doubleEncodeUri(uri: string): string {\n        return encodeURIComponent(encodeURIComponent(uri));\n    }\n\n    static decodeUri(id: string): string {\n        return decodeURIComponent(id);\n    }\n\n    static doubleDecodeUri(id: string): string {\n        return decodeURIComponent(decodeURIComponent(id));\n    }\n\n    static getFileName(iri: string): string {\n        return iri.split('#')[0];\n    }\n\n    static extractIndividualNameFromIri(iri: string): string {\n        return iri.includes('#') ? iri.split('#')[1] :\n            iri.split('/')[iri.split('/').length - 1];\n    }\n\n    static getURL(patternlanguageIri: string) {\n        if (patternlanguageIri.indexOf('patternlanguages') !== -1) {\n            return patternlanguageIri;\n\n        }\n        return this.getFileName(patternlanguageIri);\n    }\n\n    static removeWhitespace(text: string): string {\n        return text.replace(/\\s/g, '');\n    }\n\n\n    static extractDataValue(pl: QueriedData[]): string[] {\n        return pl.map((graph: QueriedData) => {\n            return this.getURL(graph.value);\n        });\n    }\n\n    static getSectionName(patternSection: string) {\n        return patternSection.split('#has')[1];\n    }\n\n    static isIri(name: string): boolean {\n        return (name.indexOf('#') >= 0) || (name.indexOf('://') >= 0) || (name.indexOf('purl.org/patternpedia') >= 0);\n    }\n\n\n    static getPatternListIriForPLIri(plIri: string): string {\n        return this.getFileName(plIri) + '/' + this.extractIndividualNameFromIri(this.getFileName(plIri)).toLowerCase() + '-Patterns';\n\n    }\n\n    static getRelationListIriForPLIri(plIri: string): string {\n        return this.getFileName(plIri) + '/' + this.extractIndividualNameFromIri(this.getFileName(plIri)).toLowerCase() + '-Relations';\n    }\n\n    static getGithubAPIURLForURI(iri: string): string {\n        if (iri.indexOf('patternlanguages') !== -1 || iri.indexOf('patternviews') !== -1) {\n            const foldername = iri.indexOf('patternlanguages') !== -1 ? 'patternlanguages' : 'patternviews';\n            let relativePath = this.getFileName(iri.split(foldername + '/')[1]);\n            // is this a request for the base file of a patternlanguage add the patternlanguage identifier again (convention)\n            relativePath = relativePath.indexOf('/') !== -1 ? relativePath : `${relativePath}/${relativePath}`;\n            return `${globals.urlGithubAPI}/${foldername}/${relativePath}.ttl`;\n        }\n        if (iri.indexOf('patternatlas') !== -1) {\n            return `${globals.urlGithubAPI}/patternatlas.ttl`;\n        }\n        return iri;\n    }\n}\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nexport const globals = {\n    urlPatternRepoOntology: 'https://purl.org/patternpedia',\n    iriPatternRepoInstance: 'https://purl.org/patternpedia#LinkedOpenPatterns',\n    urlGithubAPI: 'https://api.github.com/repos/PatternPedia/patternpediacontent/contents',\n    loadOntologyLocally: true,\n    repoEndpoint: 'http://localhost:8080'\n};\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MatButtonModule} from '@angular/material/button';\n\n@NgModule({\n    declarations: [],\n    imports: [\n        CommonModule,\n        MatButtonModule\n    ],\n    exports: [],\n    entryComponents: []\n})\nexport class GraphModule {\n}\n","/**\n * Class representing the information of a group of patterns.\n */\nexport default class Group {\n    /** the uri of the group from the store */\n    uri: string;\n\n    /** the name of the group for labeling */\n    groupName: string;\n\n    /** list of patterns ids of included patterns */\n    patterns: Array<string>;\n}\n","export * from './node';\nexport * from './link';\nexport * from './network-graph';\nexport * from './node-info';\nexport * from './group';\nexport * from './pattern-relation';\nexport * from './pattern';\n","import { Node } from './node';\n\nexport class Link implements d3.SimulationLinkDatum<Node> {\n  index?: number;\n\n  // the id of the link as defined from the triple\n  id?: string;\n\n  // the source node\n  source: Node | string | number;\n  // the target node\n  target: Node | string | number;\n\n  // the type of the relation, e.g. 'see also'\n  weight: string;\n  description: string[];\n\n  // state of the link\n  selected: boolean;\n  preview: boolean;\n  hide: boolean;\n\n  constructor(source: string | number | Node, target: string | number | Node, weight: string = 'see also', description?: string[]) {\n    this.source = source;\n    this.target = target;\n\n    this.weight = weight;\n    this.description = description;\n  }\n}\n","import {EventEmitter} from '@angular/core';\nimport {Link} from './link';\nimport {Node} from './node';\nimport * as d3 from 'd3';\nimport GraphConfig from './graph-config';\n\nconst DEFAULT_CONFIG = {\n    charge: -20,\n    xStrength: 1,\n    yStrength: 1,\n    linkDistance: 300,\n    linkStrength: 0.5\n};\n\nexport class NetworkGraph {\n    public ticker: EventEmitter<d3.Simulation<Node, Link>> = new EventEmitter();\n    public simulation: d3.Simulation<any, any>;\n\n    public nodes: any[] = [];\n    public links: any[] = [];\n\n    config: GraphConfig;\n\n    constructor(nodes, links, options: { width, height }, config?: GraphConfig) {\n        this.nodes = nodes;\n        this.links = links;\n\n        this.config = config || DEFAULT_CONFIG;\n\n        this.initSimulation(options);\n    }\n\n\n    initSimulation(options) {\n        if (!options || !options.width || !options.height) {\n            throw new Error('missing options when initializing simulation');\n        }\n\n        /** Creating the simulation */\n        if (!this.simulation) {\n            const ticker = this.ticker;\n\n            this.simulation = d3.forceSimulation()\n                .force('charge', d3.forceManyBody().strength(this.config.charge).distanceMax(100))\n                .force('charge', d3.forceManyBody().strength(15))\n                .force('center', d3.forceCenter(options.width / 2, options.height / 2))\n                .force('link', d3.forceLink().id((d) => d['id']))\n                .force('collision', d3.forceCollide().radius(() => 75));\n            this.simulation.stop();\n\n            // set data\n            this.simulation.nodes(this.nodes);\n            this.simulation.force('link')['links'](this.links && this.links.length ? this.links : []);\n\n            // Connecting the d3 ticker to an angular event emitter\n            this.simulation.on('end', function () {\n                ticker.emit();\n            });\n\n            console.log('start graph force simulation');\n            this.simulation.alpha(1).alphaMin(0.25).restart();\n        }\n\n    }\n\n}\n","\n/**\n * Defines a relation between two patterns.\n */\nexport interface Relation {\n  /** the id of the relation itself */\n  relationId: string;\n  /** the label that will be displayed for this link entry, e.g. the name of there referenced patterns */\n  label: string;\n  /** the id of the referenced patterns */\n  patternId: string;\n  /** the direction of the relation as seen from the current patterns */\n  direction: 'outgoing' | 'incoming';\n  /** whether there are more details about this relation or not. Will be requested separately */\n  hasDescription: boolean;\n}\n\n/**\n * Contains relations from a certain patterns language.\n */\nexport interface LanguageRelation {\n  /** the id of the language */\n  languageId: string;\n  /** the name of the language that will be displayed */\n  languageName: string;\n  /** relations of the patterns within that language */\n  relations: Array<Relation>;\n}\n\n/**\n * Contains the informations displayed in the Node-Infobox component.\n */\nexport class NodeInfo {\n  /** name of the patterns */\n  name: string;\n  /** group name */\n  group?: string;\n  /** summary set by corresponding module */\n  summary: string;\n  /** relations grouped by languages */\n  languageRelations: Array<LanguageRelation>;\n}\n","\nexport class Node implements d3.SimulationNodeDatum {\n  // optional - defining optional implementation properties - required for relevant typing assistance\n  index?: number;\n  x?: number;\n  y?: number;\n  vx?: number;\n  vy?: number;\n  fx?: number | null;\n  fy?: number | null;\n\n  // the id of the patterns\n  id: string;\n\n  // the name of the patterns which will be displayed\n  name: string;\n  // color of the node\n  color?: string;\n\n  // status of the node\n  selected: boolean;\n  preview: boolean;\n  hide: boolean;\n\n  constructor(id: string) {\n      this.id = id;\n  }\n}\n","\nexport class PatternRelation {\n  id: string;\n  sourceId: string;\n  targetId: string;\n  weight?: string;\n  description?: Array<string>;\n  isCLR: boolean;\n}\n","import {PatternRelation} from '.';\nimport UriEntity from '../../core/model/hal/uri-entity.model';\n\nexport class Pattern extends UriEntity {\n\n    relations?: Array<PatternRelation>;\n    // whether this patterns has any relations to patterns from other languages\n    hasClrs?: boolean;\n}\n","import {Injectable} from '@angular/core';\nimport {NetworkGraph, Node} from '../model';\nimport * as d3 from 'd3';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class D3Service {\n\n  constructor() { }\n\n  getNetworkGraph(nodes: any, links: any, options: { width: number, height: number }): NetworkGraph {\n    const ng = new NetworkGraph(nodes, links, options);\n    return ng;\n  }\n\n  applyZoomableBehaviour(svgElement, containerElement) {\n    let svg, container, zoomed, zoom;\n\n    svg = d3.select(svgElement);\n    container = d3.select(containerElement);\n\n    zoomed = () => {\n      const transform = d3.event.transform;\n      container.attr('transform', 'translate(' + transform.x + ',' + transform.y + ') scale(' + transform.k + ')');\n    };\n\n    zoom = d3.zoom().on('zoom', zoomed);\n    svg.call(zoom);\n  }\n\n  applyDraggableBehaviour(element, node: Node, graph: NetworkGraph) {\n    const d3element = d3.select(element);\n\n    function started() {\n      /** Preventing propagation of dragstart to parent elements */\n      d3.event.sourceEvent.stopPropagation();\n\n      if (!d3.event.active) {\n        graph.simulation.alphaTarget(0.3).restart();\n      }\n\n      d3.event.on('drag', dragged).on('end', ended);\n\n      function dragged() {\n        node.fx = d3.event.x;\n        node.fy = d3.event.y;\n      }\n\n      function ended() {\n        if (!d3.event.active) {\n          graph.simulation.alphaTarget(0);\n        }\n\n        node.fx = null;\n        node.fy = null;\n      }\n    }\n\n    d3element.call(d3.drag()\n      .on('start', started));\n  }\n}\n","The page you are looking for is not available!<!--\n  ~ Copyright (c) 2018 University of Stuttgart.\n  ~\n  ~ See the NOTICE file(s) distributed with this work for additional\n  ~ information regarding copyright ownership.\n  ~\n  ~ This program and the accompanying materials are made available under the\n  ~ terms of the Eclipse Public License 2.0 which is available at\n  ~ http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n  ~ which is available at https://www.apache.org/licenses/LICENSE-2.0.\n  ~\n  ~ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n  -->\n\n\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pp-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<pp-navigate-back></pp-navigate-back>\n<h2>\n  Add a new pattern to {{patternLanguage?.name}}\n</h2>\n<div mat-dialog-content [formGroup]=\"iconForm\" style=\"width: 100%\">\n  <div fxLayout=\"column\">\n    <mat-card fxLayout=\"column\" fxLayoutAlign=\"space-around\">\n      <div fxLayout=\"row\">\n        <mat-form-field class=\"full-width\" appearance=\"outline\" style=\"width: 24em\" [floatLabel]=\"'always'\">\n          <mat-label>Icon URL</mat-label>\n          <input matInput formControlName=\"iconUrl\" placeholder=\"Enter URL of Icon\" type=\"url\">\n          <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\" *ngIf=\"iconPreviewVisible\">\n            <span class=\"label-preview\">Icon-Preview: </span>\n            <div mat-card-avatar #iconPreview\n                 [ngStyle]=\"{ 'background-image': 'url(' + iconUrl?.value + ')'}\"\n                 class=\"example-header-image\"></div>\n          </div>\n          <mat-error *ngIf=\"wasSaveButtonClicked && iconUrl?.hasError('pattern')\">Please insert a valid URL.\n          </mat-error>\n        </mat-form-field>\n      </div>\n\n      <div class=\"parent \">\n\n        <div class=\"item editor-preview-container\">\n          <td-text-editor ppEmitOnChange (onKeyup)=\"onChangeMarkdownText()\" class=\"markdownEditor\"\n                          [(value)]=\"previousTextEditorValue\" [options]=\"options\"\n                          #textEditor\n                          id=\"textEditor\"></td-text-editor>\n        </div>\n\n        <div class=\"item last\">\n\n          <div id=\"preview\"></div>\n\n          <mat-error *ngIf=\"wasSaveButtonClicked && errorMessages\">Found errors in the following sections:\n            <div *ngFor=\"let message of errorMessages\">\n              <span>{{message}}<br></span>\n            </div>\n          </mat-error>\n\n        </div>\n      </div>\n    </mat-card>\n  </div>\n</div>\n<button [disabled]=\"iconUrl?.hasError('pattern')\" (click)=\"save()\" class=\"save-button\" mat-raised-button color=\"primary\" style=\"float: right\"><i\n  class=\"material-icons\">save</i>Save\n</button>\n","import {ChangeDetectorRef, Component, NgZone, OnInit, ViewChild} from '@angular/core';\nimport {TdTextEditorComponent} from '@covalent/text-editor';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport * as marked from 'marked';\nimport {TokensList} from 'marked';\nimport Pattern from '../../core/model/pattern.model';\nimport {ToasterService} from 'angular2-toaster';\nimport {AbstractControl, FormBuilder, FormControl, FormGroup, ValidationErrors, Validators} from '@angular/forms';\nimport {ValidationService} from '../../core/service/validation.service';\nimport {PatternLanguageService} from '../../core/service/pattern-language.service';\nimport PatternLanguage from '../../core/model/hal/pattern-language.model';\nimport PatternSectionSchema from '../../core/model/hal/pattern-section-schema.model';\nimport * as MarkdownIt from 'markdown-it';\nimport * as markdownitKatex from 'markdown-it-katex';\nimport {PatternService} from '../../core/service/pattern.service';\nimport {debounceTime, distinctUntilChanged} from 'rxjs/internal/operators';\n\n\n@Component({\n    selector: 'pp-create-pattern',\n    templateUrl: './create-pattern.component.html',\n    styleUrls: ['./create-pattern.component.scss']\n})\nexport class CreatePatternComponent implements OnInit {\n\n    iconForm: FormGroup;\n    patterns: Array<Pattern>;\n    patternLanguageId: string;\n    iconPreviewVisible = false;\n    wasSaveButtonClicked = false;\n    patternValuesFormGroup: FormGroup;\n    previousTextEditorValue = `# Pattern name`;\n    options: any = {\n        // todo: hide the preview button because it forces fullscreen mode (and destroys our page layout)\n    };\n    errorMessages: Array<string>;\n    patternLanguage: PatternLanguage;\n    @ViewChild('textEditor') private _textEditor: TdTextEditorComponent;\n    private sections: Array<string>;\n    private markdown;\n    private patternName: string;\n\n    constructor(private activatedRoute: ActivatedRoute,\n                private cdr: ChangeDetectorRef,\n                private toastService: ToasterService,\n                private patternLanguageService: PatternLanguageService,\n                private patternService: PatternService,\n                private router: Router,\n                private zone: NgZone,\n                private _fb: FormBuilder) {\n    }\n\n    get iconUrl(): AbstractControl {\n        return this.iconForm.get('iconUrl');\n    }\n\n    static isListItem(i: number, sectionIndex: number, lines: marked.TokensList): boolean {\n        for (let index = sectionIndex + 1; index < i; index++) {\n            if (lines[index].type === 'list_item_start') {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    // noinspection TsLint\n    ngOnInit() {\n        this.patternLanguageId = this.activatedRoute.snapshot.paramMap.get('patternLanguageId');\n        this.markdown = new MarkdownIt();\n        this.markdown.use(markdownitKatex);\n\n        this.patternLanguageService.getPatternLanguageByID(this.patternLanguageId).subscribe((pl: PatternLanguage) => {\n            this.patternLanguage = pl;\n            this.sections = this.patternLanguage.patternSchema ?\n                this.patternLanguage.patternSchema.patternSectionSchemas.map((schema: PatternSectionSchema) => schema.label) : [];\n            this.initTextEditor();\n            this.initFormGroup();\n        });\n\n        const urlRegex = /\\b((?:[a-z][\\w-]+:(?:\\/{1,3}|[a-z0-9%])|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}\\/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()\\[\\]{};:'\".,<>?«»“”‘’]))/i;\n        this.iconForm = this._fb.group({\n            iconUrl: ['', [Validators.pattern(urlRegex)]]\n        });\n\n        this.iconUrl.valueChanges.pipe(debounceTime(1000), distinctUntilChanged()).subscribe((urlValue) => {\n            this.iconPreviewVisible = urlValue && (urlValue.startsWith('https://') || urlValue.startsWith('http://'));\n        });\n    }\n\n    save(): void {\n        this.parsePatternInput();\n\n        this.wasSaveButtonClicked = true;\n        if (this.patternValuesFormGroup && !this.patternValuesFormGroup.valid) {\n            console.log('pattern entries not valid');\n            this.updateFormValidationErrors();\n            return;\n        }\n        // We send null as uri and let the backend create proper uris, which include camel cased names of patterns\n        this.patternService.savePattern(this.patternLanguage._links.patterns.href,\n            {\n                uri: null,\n                name: this.patternName,\n                content: this.patternValuesFormGroup.value,\n                iconUrl: this.iconForm.value.iconUrl\n            }\n        ).subscribe(() => {\n                this.toastService.pop('success', 'Pattern successfully created');\n                this.zone.run(() => {\n                    this.router.navigate(['..'], {relativeTo: this.activatedRoute});\n                });\n            },\n            (error) => this.toastService.pop('error', 'Could not create Pattern', error.message)\n        );\n\n    }\n\n    parseMarkdownText(): TokensList {\n        return marked.lexer(this._textEditor.value);\n    }\n\n    onChangeMarkdownText(): void {\n        const currentText = this.parseMarkdownText();\n        if (this.invalidTextEdit(currentText)) {\n            // TODO\n        }\n        if (this.markdown) {\n            document.getElementById('preview').innerHTML = this.markdown.render(this._textEditor.value);\n        }\n    }\n\n    ignoreCaseAndWhitespace(text: string): string {\n        return text.trim().replace(new RegExp('/s', 'g'), '').toLowerCase();\n    }\n\n    addSpaceForCamelCase(text: string): string {\n        return text.replace(/([a-z])([A-Z])/g, '$1 $2');\n    }\n\n    getDefaultTextForSection(section: string): string {\n        return 'Enter your input for this section here.';\n    }\n\n    updateFormValidationErrors(): string {\n        if (this.patternValuesFormGroup.valid) {\n            return '';\n        }\n        this.errorMessages = [];\n        Object.keys(this.patternValuesFormGroup.controls).forEach(key => {\n            const controlErrors: ValidationErrors = this.patternValuesFormGroup.controls[key].errors;\n            if (controlErrors != null) {\n                Object.keys(controlErrors).forEach(keyError => {\n                    this.errorMessages.push(ValidationService.getMessageForError(key, keyError, controlErrors[keyError]));\n                });\n            }\n        });\n    }\n\n    // returns if a user changed the value of the sections headers (which he is not allowed to do)\n    private invalidTextEdit(currentText: marked.TokensList): boolean {\n        if (!this.sections) {\n            return false;\n        }\n        // we should find a corresponding line (= that starts with ## followed by section patternName) for each section\n        for (const section of this.sections) {\n            const indexOfCorrespondingLine = currentText.findIndex(line =>\n                (line.type === 'heading' && line.depth === 2) &&\n                this.ignoreCaseAndWhitespace(line.text) ===\n                this.ignoreCaseAndWhitespace(this.addSpaceForCamelCase(section))\n            );\n            if (indexOfCorrespondingLine === -1) {\n                return true;\n            }\n        }\n        // there should be only one name (= line that starts with # )\n        return !(currentText.filter(it => it.type === 'heading' && it.depth === 1).length === 1) ||\n            // there should be as many second headings as sections (= line that starts with # )\n            !(currentText.filter(it => it.type === 'heading' && it.depth === 2).length === this.sections.length);\n    }\n\n    private parsePatternInput(): void {\n        const lines = this.parseMarkdownText();\n        const patternNameIndex = lines.findIndex((it) => it.type === 'heading' && it.depth === 1);\n        this.patternName = patternNameIndex !== -1 ? lines[patternNameIndex]['text'] : '';\n        this.patternLanguage.patternSchema.patternSectionSchemas.forEach((schema: PatternSectionSchema) => {\n            const sectionName = schema.name;\n            const sectionIndex = lines.findIndex((sec) => sec.type === 'heading' && sec.depth === 2 &&\n                this.ignoreCaseAndWhitespace(sec.text) === this.ignoreCaseAndWhitespace(this.addSpaceForCamelCase(sectionName)));\n            if (sectionIndex !== -1) {\n                const sectionContent = [];\n                for (let i = sectionIndex + 1; i < lines.length; i++) {\n                    if (lines[i].type === 'heading') {\n                        break;\n                    }\n                    if (lines[i]['text']) {\n                        // if a list item was parsed before, add it to the text\n                        sectionContent.push(i > 0 && CreatePatternComponent.isListItem(i, sectionIndex, lines) ? '* ' + lines[i]['text'] : lines[i]['text']);\n                    }\n                }\n                if (this.patternValuesFormGroup) {\n                    if (this.patternValuesFormGroup.controls[sectionName]) {\n                        this.patternValuesFormGroup.controls[sectionName].setValue(sectionContent.join('\\n'));\n                    } else {\n                        console.log('missing formcontrol:');\n                        console.log(sectionName);\n                    }\n                } else {\n                    console.error('patternValuesFormGroup is undefined');\n                }\n            }\n        });\n    }\n\n    // init formgroup based on patternschema\n    private initFormGroup() {\n        this.patternValuesFormGroup = new FormGroup({});\n        if (this.patternLanguage && this.patternLanguage.patternSchema && this.patternLanguage.patternSchema.patternSectionSchemas) {\n            this.patternLanguage.patternSchema.patternSectionSchemas.forEach((schema: PatternSectionSchema) => {\n                this.patternValuesFormGroup.addControl(schema.name, new FormControl(''));\n            });\n        }\n    }\n\n    private initTextEditor(): void {\n        for (const section of this.sections) {\n            this.previousTextEditorValue = this.previousTextEditorValue.concat(\n                '\\n ## ' + section + '\\n' + this.getDefaultTextForSection(section));\n        }\n        this._textEditor.value = this.previousTextEditorValue;\n        this.onChangeMarkdownText();\n    }\n}\n","<!-- tab view if there are multiple renderer for the language available -->\n<mat-tab-group *ngIf=\"renderer && renderer.length > 1; else singleRenderer\">\n    <!-- create a new tab for each available renderer -->\n    <mat-tab label=\"{{r.label || 'Tab ' + (i+1)}}\" *ngFor=\"let r of renderer; let i = index\">\n        <mat-card>\n            <ng-template ppPatternContainer [plId]=\"patternLanguageId\" [pId]=\"patternId\" [index]=\"i\"></ng-template>\n        </mat-card>\n    </mat-tab>\n</mat-tab-group>\n\n<!-- else, render everything in a single card -->\n<ng-template #singleRenderer>\n    <mat-card>\n        <ng-template ppPatternContainer [plId]=\"patternLanguageId\" [pId]=\"patternId\"></ng-template>\n    </mat-card>\n</ng-template>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ComponentRegistryService} from 'src/app/core/service/component-registry.service';\n\n@Component({\n    selector: 'pp-pattern-container',\n    templateUrl: './pattern-container.component.html',\n    styleUrls: ['./pattern-container.component.scss']\n})\nexport class PatternContainerComponent implements OnInit {\n\n    patternLanguageId: string;\n    patternId: string;\n\n    // the list of registered renderer components for the language\n    renderer: Array<any>;\n\n    constructor(private activatedRoute: ActivatedRoute,\n                private compRegistry: ComponentRegistryService) {\n    }\n\n    ngOnInit() {\n        this.patternLanguageId = this.activatedRoute.snapshot.paramMap.get('patternLanguageId');\n        this.renderer = this.compRegistry.getRenderingComponents(this.patternLanguageId);\n    }\n\n}\n","import { OnChanges, SimpleChanges, ChangeDetectorRef } from '@angular/core';\n/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { ComponentFactoryResolver, Directive, Input, OnInit, ViewContainerRef } from '@angular/core';\nimport { ComponentRegistryService } from '../../core/service/component-registry.service';\nimport { PatternRenderingComponentInterface } from '../../core/model/pattern-rendering-component.interface';\nimport { DefaultPatternRendererComponent } from '../../core/default-pattern-renderer/default-pattern-renderer.component';\n\n@Directive({\n    selector: '[ppPatternContainer]'\n})\nexport class PatternContainerDirective implements OnInit, OnChanges {\n\n  @Input() plId: string;\n  @Input() pId: string;\n\n  @Input() index?: number;\n\n  private ref: PatternRenderingComponentInterface;\n\n  constructor(public viewContainerRef: ViewContainerRef,\n              private componentFactoryResolver: ComponentFactoryResolver,\n              private compRegistry: ComponentRegistryService,\n              private cdr: ChangeDetectorRef) {\n  }\n\n  ngOnInit(): void {\n    this.createContent();\n  }\n\n  private createContent(): void {\n    const renderingComponent = this.compRegistry.getPLRenderingComponents(this.plId, this.index);\n\n    const componentFactory = renderingComponent ?\n    this.componentFactoryResolver.resolveComponentFactory(renderingComponent.pcomponent) :\n    this.componentFactoryResolver.resolveComponentFactory(DefaultPatternRendererComponent);\n\n    this.viewContainerRef.clear();\n    const componentRef = this.viewContainerRef.createComponent(componentFactory);\n    this.ref = (<PatternRenderingComponentInterface>componentRef.instance);\n    this.ref.pId = this.pId;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // changes of the langauge itself\n    if (changes['plId'] && JSON.stringify(changes['plId'].currentValue) !== JSON.stringify(changes['plId'].previousValue)) {\n      this.createContent();\n      // this.cdr.detectChanges();\n    }\n    // changes of the pattern\n    if (changes['pId']\n      && this.ref\n      && (JSON.stringify(changes['pId'].currentValue) !== JSON.stringify(changes['pId'].previousValue))) {\n        // this.ref.pId = this.pId;\n        this.cdr.detectChanges();\n    }\n  }\n}\n","<!--\n  ~ Copyright (c) 2018 University of Stuttgart.\n  ~\n  ~ See the NOTICE file(s) distributed with this work for additional\n  ~ information regarding copyright ownership.\n  ~\n  ~ This program and the accompanying materials are made available under the\n  ~ terms of the Eclipse Public License 2.0 which is available at\n  ~ http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n  ~ which is available at https://www.apache.org/licenses/LICENSE-2.0.\n  ~\n  ~ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n  -->\n\n<!-- tab view if there are multiple renderers for the language available -->\n<mat-tab-group *ngIf=\"renderer && renderer.length > 1; else oneOrNoRenderer\">\n    <!-- create a new tab for each available renderer -->\n    <mat-tab label=\"{{r.label || 'Tab ' + (i+1)}}\" *ngFor=\"let r of renderer; let i = index\">\n        <mat-card>\n            <ng-template ppPatternLanguageContainer [patternLanguageId]=\"plEncodedId\" [index]=\"i\"></ng-template>\n        </mat-card>\n    </mat-tab>\n</mat-tab-group>\n\n<!-- else, use default renderers -->\n<ng-template #oneOrNoRenderer>\n    <!--If there is only one renderer registered for this pl, use it: -->\n    <ng-template *ngIf=\"renderer\" ppPatternLanguageContainer [patternLanguageId]=\"plEncodedId\"></ng-template>\n\n    <!--If there is no renderer registered for this pl, take the default one -->\n    <ng-template *ngIf=\"!renderer\" #cardsView ppPatternLanguageContainer [patternLanguageId]=\"plEncodedId\">\n    </ng-template>\n</ng-template>\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ComponentRegistryService} from 'src/app/core/service/component-registry.service';\n\n@Component({\n    selector: 'pp-pattern-language-container',\n    templateUrl: './pattern-language-container.component.html',\n    styleUrls: ['./pattern-language-container.component.scss']\n})\nexport class PatternLanguageContainerComponent implements OnInit {\n\n    // the id of the patterns language\n    plEncodedId: string;\n    // the list of registered renderer components for the language\n    renderer: Array<any>;\n\n    constructor(private activatedRoute: ActivatedRoute,\n                private compRegistry: ComponentRegistryService) {\n    }\n\n    ngOnInit() {\n        // Todo: We use encoded uris just for navigation. Now we can get the Uri from the patternlanguage entity. We have to add redux!\n        this.plEncodedId = this.activatedRoute.snapshot.params['patternLanguageId'];\n        this.renderer = this.compRegistry.getRenderingComponents(this.plEncodedId);\n    }\n}\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport {ComponentFactoryResolver, Directive, Input, OnInit, ViewContainerRef} from '@angular/core';\nimport {ComponentRegistryService} from '../../core/service/component-registry.service';\nimport {UriConverter} from '../../core/util/uri-converter';\n\n@Directive({\n    selector: '[ppPatternLanguageContainer]'\n})\nexport class PatternLanguageContainerDirective implements OnInit {\n\n    @Input() patternLanguageId: string;\n    @Input() index?: number;\n    @Input() graphView: boolean;\n\n    selectedGraphView: boolean;\n\n    constructor(public viewContainerRef: ViewContainerRef,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private compRegistry: ComponentRegistryService) {\n    }\n\n    ngOnInit(): void {\n        const componentFactory = this.getRenderingComponent();\n        this.viewContainerRef.clear();\n        const componentRef = this.viewContainerRef.createComponent(componentFactory);\n    }\n\n    private getRenderingComponent() {\n        const renderingComponent = this.compRegistry.getPLRenderingComponents(UriConverter.doubleDecodeUri(this.patternLanguageId.toLowerCase()), this.index);\n        if (renderingComponent) {\n            return this.componentFactoryResolver.resolveComponentFactory(renderingComponent.plcomponent);\n        }\n        // no special renderer, use default renderer:\n        return this.componentFactoryResolver.resolveComponentFactory(this.compRegistry.getPLRenderingComponents('default').plcomponent);\n    }\n}\n","<ng-template #loading>Loading Data ...</ng-template>\n","import {Component, ElementRef, NgZone, OnInit, ViewChild} from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'pp-pattern-language-graph',\n    templateUrl: './pattern-language-graph.component.html',\n    styleUrls: ['./pattern-language-graph.component.scss']\n})\nexport class PatternLanguageGraphComponent implements OnInit {\n\n  @ViewChild('graphWrapper') graph: ElementRef;\n    constructor(\n        private zone: NgZone,\n        private router: Router) {\n    }\n\n    private async loadData(): Promise<void> {\n        // load patternpedia\n        return null;\n      //   return this.pos.loadUrisToStore([{value: 'https://purl.org/patternpedia'}])\n      //\n      //   // load language-base-files\n      //   // we first need a query to get all defined languages\n      //       .then(() => {\n      //           const langsQry = `SELECT ?lang\n      //   WHERE {\n      //     pp:LinkedOpenPatterns pp:containsPatternGraph ?lang .\n      //   }`;\n      //           return this.pos.exec(langsQry, ['https://purl.org/patternpedia']);\n      //       })\n      //       .then(langs => {\n      //           const uris = [];\n      //           for (const l of langs) {\n      //               uris.push({value: UriConverter.getFileName(l.lang.value)});\n      //           }\n      //\n      //           return this.pos.loadUrisToStore(uris);\n      //       })\n      //\n      //       // load view-base-files\n      //       // we need all defined languages as graph for the query to get all views\n      //       .then(() => {\n      //           const langsQry = `SELECT ?lang\n      //   WHERE {\n      //     pp:LinkedOpenPatterns pp:containsPatternGraph ?lang .\n      //   }`;\n      //           return this.pos.exec(langsQry, ['https://purl.org/patternpedia']);\n      //       })\n      //       .then(langs => {\n      //           const graphs = ['https://purl.org/patternpedia'];\n      //           for (const l of langs) {\n      //               graphs.push(UriConverter.getFileName(l.lang.value));\n      //           }\n      //\n      //           const viewsQry = `SELECT ?view\n      // WHERE {\n      //   pp:LinkedOpenPatterns pp:containsPatternGraph ?lang .\n      //   ?lang pp:referredByView ?view .\n      // }`;\n      //           return this.pos.exec(viewsQry, graphs);\n      //       })\n      //       .then(views => {\n      //           const uris = [];\n      //           for (const v of views) {\n      //               uris.push({value: UriConverter.getFileName(v.view.value)});\n      //           }\n      //\n      //           return this.pos.loadUrisToStore(uris);\n      //       });\n    }\n\n    ngOnInit() {\n        // load all neccessairy data first: patternpedia, all language-base-files, and all view-base-files\n\n      this.graph.nativeElement.addNode({\n        id: 4,\n        title: 'Hello',\n        type: 'red',\n        x: 0,\n        y: 0,\n      }, true);\n\n      // // get data\n      //     .then(() => {\n      //         return Promise.all([\n      //             // this.nodeLoader.loadContentFromStore(),\n      //             // this.linkLoader.loadContentFromStore()\n      //         ]);\n      //     })\n      //     // set data\n      //     .then(values => {\n      //         this.nodes = Array.from(values[0].values());\n      //         this.links = Array.from(values[1].values());\n      //\n      //         this.data = {\n      //             nodes: this.nodes,\n      //             links: this.links\n      //         };\n      //     });\n    }\n\n  // selectNode(languageId: string) {\n  //     console.log(`Selected: ${languageId}`);\n  //     // navigate to the language\n  //     this.zone.run(() => {\n  //         this.router.navigate(['/patternlanguages', languageId]);\n  //     });\n  // }\n\n}\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {PatternLanguageManagementComponent} from './pattern-language-management/pattern-language-management.component'; // tslint:disable-line:max-line-length\nimport {PatternLanguageContainerComponent} from './pattern-language-container/pattern-language-container.component';\nimport {PatternContainerComponent} from './pattern-container/pattern-container.component';\nimport {PatternLanguageManagementResolverService} from './pattern-language-management/pattern-language-management-resolver.service';\nimport {CreatePatternComponent} from './create-pattern/create-pattern.component';\n\nconst routes: Routes = [\n    {\n        path: 'patternlanguages',\n        pathMatch: 'prefix',\n        runGuardsAndResolvers: 'always',\n        resolve: {\n            patternlanguages: PatternLanguageManagementResolverService,\n\n        },\n        children: [\n            {\n                path: '',\n                component: PatternLanguageManagementComponent\n            }, {\n                path: ':patternLanguageId',\n                component: PatternLanguageContainerComponent,\n            }, {\n                path: ':patternLanguageId/create-patterns',\n                component: CreatePatternComponent,\n            },\n            {\n                path: ':patternLanguageId/:patternId',\n                component: PatternContainerComponent\n            }\n\n        ],\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class PatternLanguageManagementRoutingModule {\n    constructor() {\n    }\n}\n","import {GraphModule} from './../graph/graph.module';\nimport {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {PatternLanguageManagementRoutingModule} from './pattern-language-management-routing.module';\nimport {PatternLanguageManagementComponent} from './pattern-language-management/pattern-language-management.component'; // tslint:disable-line:max-line-length\nimport {CoreModule} from '../core/core.module';\nimport {PatternLanguageContainerComponent} from './pattern-language-container/pattern-language-container.component';\nimport {PatternLanguageContainerDirective} from './pattern-language-container/pattern-language-container.directive';\nimport {PatternContainerComponent} from './pattern-container/pattern-container.component';\nimport {PatternContainerDirective} from './pattern-container/pattern-container.directive';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport {CreatePatternComponent} from './create-pattern/create-pattern.component';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {ProcessOauthCallbackComponent} from '../core/component/process-oauth-callback/process-oauth-callback.component';\nimport {ToasterModule} from 'angular2-toaster';\nimport {PatternLanguageGraphComponent} from './pattern-language-graph/pattern-language-graph.component';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {MatListModule} from '@angular/material/list';\nimport {MatRippleModule} from '@angular/material/core';\n\n/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PatternLanguageManagementRoutingModule,\n        MatBadgeModule,\n        MatButtonModule,\n        MatToolbarModule,\n        MatIconModule,\n        MatSidenavModule,\n        MatCardModule,\n        MatDialogModule,\n        MatTabsModule,\n        MatInputModule,\n        MatChipsModule,\n        MatAutocompleteModule,\n        CoreModule,\n        MatGridListModule,\n        ReactiveFormsModule,\n        FlexLayoutModule,\n        MatSelectModule,\n        MatRadioModule,\n        MatCheckboxModule,\n        ToasterModule,\n        GraphModule,\n        DragDropModule,\n        MatListModule,\n        MatRippleModule\n    ],\n    declarations: [\n        PatternLanguageManagementComponent,\n        PatternLanguageContainerComponent,\n        PatternLanguageContainerDirective,\n        PatternContainerComponent,\n        PatternContainerDirective,\n        CreatePatternComponent,\n        ProcessOauthCallbackComponent,\n        PatternLanguageGraphComponent\n    ],\n    entryComponents: [\n    ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class PatternLanguageManagementModule {\n}\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { PatternLanguageService } from '../../core/service/pattern-language.service';\nimport { Observable } from 'rxjs';\nimport PatternLanguageModel from '../../core/model/hal/pattern-language-model.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PatternLanguageManagementResolverService implements Resolve<Array<PatternLanguageModel>> {\n\n    constructor(private patternLanguageService: PatternLanguageService) {\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Array<PatternLanguageModel>> {\n        return this.patternLanguageService.getPatternLanguages();\n    }\n\n}\n","<!--\n  ~ Copyright (c) 2018 University of Stuttgart.\n  ~\n  ~ See the NOTICE file(s) distributed with this work for additional\n  ~ information regarding copyright ownership.\n  ~\n  ~ This program and the accompanying materials are made available under the\n  ~ terms of the Eclipse Public License 2.0 which is available at\n  ~ http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n  ~ which is available at https://www.apache.org/licenses/LICENSE-2.0.\n  ~\n  ~ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n  -->\n<pp-action-button-bar [addButtonText]=\"'Add'\" [goBackButton]=\"false\" [reloadButton]=\"true\"\n                      (addClicked)=\"goToPatternLanguageCreation()\"\n                      (reloadClicked)=\"reloadPatternRepo()\"></pp-action-button-bar>\n<div class=\"container\">\n    <mat-card class=\"landing-card\" *ngFor=\"let patternLanguage of patternLanguages\">\n        <mat-card-header>\n            <img *ngIf=\"patternLanguage?.logo && patternLanguage?.logo !== ''; else noImageAvatar\" mat-card-avatar\n                 [src]=\"patternLanguage.logo\">\n            <ng-template #noImageAvatar><img mat-card-avatar [src]=\"'//via.placeholder.com/50x50'\"></ng-template>\n\n            <mat-card-title *ngIf=\"patternLanguage?.name && '' !== patternLanguage.name; else noPLName\"\n                            style=\"width: 10rem; word-break: break-word;\">\n                {{patternLanguage.name}}\n            </mat-card-title>\n            <ng-template #noPLName>\n                <mat-card-title style=\"width: 10rem\">\n                    No Name Provided\n                </mat-card-title>\n            </ng-template>\n        </mat-card-header>\n        <img mat-card-image *ngIf=\"patternLanguage?.logo && patternLanguage?.logo !== ''; else noImage\"\n             [src]=\"patternLanguage.logo\">\n        <ng-template #noImage><img mat-card-image [src]=\"'//via.placeholder.com/200x300'\"></ng-template>\n        <mat-card-actions>\n            <div style=\"text-align: center\">\n                <button matBadge=\"{{patternLanguage?.patternCount}}\" mat-stroked-button color=\"primary\"\n                        (click)=\"navigateToPL(patternLanguage.id)\"><i class=\"material-icons\">pageview</i>View\n                </button>\n            </div>\n        </mat-card-actions>\n    </mat-card>\n</div>\n\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport {ChangeDetectorRef, Component, NgZone, OnInit} from '@angular/core';\nimport PatternLanguage from '../../core/model/hal/pattern-language.model';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {MatDialog} from '@angular/material/dialog';\nimport {CookieService} from 'ngx-cookie-service';\nimport {ToasterService} from 'angular2-toaster';\nimport {PatternLanguageService} from '../../core/service/pattern-language.service';\nimport {CreateEditPatternLanguageComponent} from '../../core/component/create-edit-pattern-language/create-edit-pattern-language.component';\nimport {DialogPatternLanguageResult} from '../data/DialogPatternLanguageResult.interface';\nimport {map} from 'rxjs/operators';\nimport PatternLanguageModel from '../../core/model/hal/pattern-language-model.model';\n\n@Component({\n    selector: 'pp-pattern-language-management',\n    templateUrl: './pattern-language-management.component.html',\n    styleUrls: ['./pattern-language-management.component.scss']\n})\n\n\nexport class PatternLanguageManagementComponent implements OnInit {\n\n    patternLanguages: Array<PatternLanguageModel>;\n\n    constructor(\n        private cdr: ChangeDetectorRef,\n        private router: Router,\n        private activatedRoute: ActivatedRoute,\n        private zone: NgZone,\n        private dialog: MatDialog,\n        private _cookieService: CookieService,\n        private _toasterService: ToasterService,\n        private patternLanguageService: PatternLanguageService) {\n    }\n\n    // function used to sort the patternlanguages (by name)\n    private static sortPatternLanguages(pl1: PatternLanguageModel, pl2: PatternLanguageModel): number {\n        if (pl1.name > pl2.name) {\n            return 1;\n        }\n        if (pl1.name < pl2.name) {\n            return -1;\n        }\n        return 0;\n    }\n\n    ngOnInit() {\n        this.patternLanguages = Array.from<PatternLanguageModel>(this.activatedRoute.snapshot.data.patternlanguages.values())\n            .sort(PatternLanguageManagementComponent.sortPatternLanguages);\n    }\n\n    // reload the current data from https://purl.org/patternpedia that contains all patternlangauges\n    async reloadPatternRepo() {\n        this.patternLanguageService.getPatternLanguages()\n            .pipe(\n                map(result => result.sort(PatternLanguageManagementComponent.sortPatternLanguages)))\n            .subscribe(result => {\n                this.patternLanguages = result;\n                this._toasterService.pop('success', 'Reloaded Pattern Languages');\n                this.cdr.detectChanges();\n                return result;\n            });\n        this.cdr.detectChanges();\n    }\n\n    navigateToPL(id: string): void {\n        this.zone.run(() => {\n            this.router.navigate([id], {relativeTo: this.activatedRoute});\n        });\n    }\n\n    goToPatternLanguageCreation(): void {\n        const dialogRef = this.dialog.open(CreateEditPatternLanguageComponent, {data: {isPatternLanguageCreation: true}});\n\n        // Save PatternLanguage when user presses save\n        (<CreateEditPatternLanguageComponent>dialogRef.componentInstance).saveClicked\n            .subscribe((result: DialogPatternLanguageResult) => {\n                const patternLanguage = <PatternLanguage>result.dialogResult;\n                this.patternLanguageService.savePatternLanguage(patternLanguage)\n                    .subscribe(() => {\n                        this.patternLanguageService.getPatternLanguages()\n                            .pipe(\n                                map(patternLanguageModels => patternLanguageModels.sort(PatternLanguageManagementComponent.sortPatternLanguages)))\n                            .subscribe(patternLanguageModels => {\n                                this.patternLanguages = patternLanguageModels;\n                            });\n                        this._toasterService.pop('success', 'Pattern Language created');\n                    }, err => {\n                        console.error(err);\n                        this._toasterService.pop('error', 'Error occurred', JSON.stringify(err));\n                    });\n            });\n    }\n}\n","<h1 mat-dialog-title>{{data.title}}</h1>\n\n<p *ngIf=\"data.links?.length === 0 && !data.patternlanguages\">No links found.</p>\n<mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n    <!-- Leaf node -->\n    <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\n        <button mat-icon-button disabled></button>\n        <mat-checkbox class=\"checklist-leaf-node\" [checked]=\"checklistSelection.isSelected(node)\"\n                      (change)=\"todoLeafItemSelectionToggle(node)\"> {{node.item.name}} </mat-checkbox>\n    </mat-tree-node>\n\n    <!-- expandable node -->\n    <mat-tree-node *matTreeNodeDef=\"let node; when: hasChild\" matTreeNodePadding>\n        <button mat-icon-button\n                [attr.aria-label]=\"'toggle ' + node.filename\"\n                (click)=\"loadChildren(node)\"\n                matTreeNodeToggle>\n            <mat-icon class=\"mat-icon-rtl-mirror\">\n                {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n            </mat-icon>\n        </button>\n        <mat-checkbox class=\"checklist-leaf-node\" [checked]=\"descendantsAllSelected(node)\"\n                      [indeterminate]=\"descendantsPartiallySelected(node)\"\n                      (change)=\"todoItemSelectionToggle(node)\">    {{node.item.name}}</mat-checkbox>\n    </mat-tree-node>\n\n    <mat-tree-node *matTreeNodeDef=\"let node; when: isLoadMore\">\n        No patterns found for this language.\n    </mat-tree-node>\n</mat-tree>\n<div mat-dialog-actions>\n    <button mat-button [mat-dialog-close]=\"null\">Close</button>\n    <button mat-button [mat-dialog-close]=\"getPatterns()\">Save\n    </button>\n</div>\n","import {Component, Inject} from '@angular/core';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\nimport {BehaviorSubject, forkJoin, Observable} from 'rxjs';\nimport PatternLanguage from '../../core/model/hal/pattern-language.model';\nimport {PatternService} from '../../core/service/pattern.service';\nimport Pattern from '../../core/model/hal/pattern.model';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {PatternRelationDescriptorService} from '../../core/service/pattern-relation-descriptor.service';\nimport {HalLink} from '../../core/model/hal/hal-link.interface';\nimport {DirectedEdgeModel} from '../../core/model/hal/directed-edge.model';\nimport {UndirectedEdgeModel} from '../../core/model/hal/undirected-edge.model';\n\n/** Nested node */\nexport class LoadmoreNode {\n    childrenChange = new BehaviorSubject<LoadmoreNode[]>([]);\n\n    get children(): LoadmoreNode[] {\n        return this.childrenChange.value;\n    }\n\n    constructor(public item: PatternLanguage | Pattern | LinksToOtherPattern,\n                public hasChildren = false,\n                public loadMoreParentItem: string | null = null) {\n    }\n}\n\n/** Flat node with expandable and level information */\nexport class LoazyLoadedFlatNode {\n    constructor(public item: Pattern | PatternLanguage | LinksToOtherPattern,\n                public level = 1,\n                public expandable = false,\n                public loadMoreParentItem: string | null = null) {\n    }\n\n\n}\n\nexport class LinksToOtherPattern {\n    name: string;\n    links?: HalLink[];\n    type: string;\n    edge?: DirectedEdgeModel | UndirectedEdgeModel;\n    id: string;\n    linkedPattern?: HalLink;\n\n    constructor(edge, isDirectedLink: boolean, patternId: string) {\n        let relatedPatternIsSource;\n\n        if (isDirectedLink) {\n            relatedPatternIsSource = edge.targetPatternId === patternId;\n            this.name = relatedPatternIsSource ? edge.sourcePatternName : edge.targetPatternName;\n            this.id = relatedPatternIsSource ? edge.sourcePatternId : edge.targetPatternId;\n            this.linkedPattern = relatedPatternIsSource ? edge._links.sourcePattern : edge._links.targetPattern;\n            this.type = 'directed';\n            this.edge = edge;\n        } else {\n            edge = <UndirectedEdgeModel>edge;\n            relatedPatternIsSource = edge.pattern2Id === patternId;\n            this.name = relatedPatternIsSource ? edge.pattern1Name : edge.pattern2Name;\n            this.id = relatedPatternIsSource ? edge.pattern1Id : edge.pattern2Id;\n            this.linkedPattern = relatedPatternIsSource ? edge._links.pattern[0] : edge._links.pattern[1];\n            this.type = 'undirected';\n            this.edge = edge;\n        }\n\n    }\n\n\n}\n\n\n@Component({\n    selector: 'pp-add-to-view',\n    templateUrl: './add-to-view.component.html',\n    styleUrls: ['./add-to-view.component.scss']\n})\nexport class AddToViewComponent {\n    nodeMap = new Map<string, LoazyLoadedFlatNode>();\n    treeControl: FlatTreeControl<LoazyLoadedFlatNode>;\n    treeFlattener: MatTreeFlattener<LoadmoreNode, LoazyLoadedFlatNode>;\n    // Flat tree data source\n    dataSource: MatTreeFlatDataSource<LoadmoreNode, LoazyLoadedFlatNode>;\n    LOAD_MORE = 'LOAD_MORE';\n    nodes: LoadmoreNode[];\n    isLinkModal = false;\n    patternId: string;\n\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: { patternlanguages?: PatternLanguage[], links?: LinksToOtherPattern[], title: string, patternId: string },\n                private patternService: PatternService, private patternRelationDescriptorService: PatternRelationDescriptorService) {\n        this.isLinkModal = !!data.patternlanguages;\n        this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel,\n            this.isExpandable, this.getChildren);\n\n        this.treeControl = new FlatTreeControl<LoazyLoadedFlatNode>(this.getLevel, this.isExpandable);\n\n        this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n        this.nodes = this.isLinkModal ? data.patternlanguages.map(it => new LoadmoreNode(it)) : data.links.map(it => new LoadmoreNode(it));\n        this.patternId = data.patternId ? data.patternId : null;\n        this.dataSource.data = this.nodes;\n\n    }\n\n\n    checklistSelection = new SelectionModel<LoazyLoadedFlatNode>(true /* multiple */);\n    getChildren = (node: LoadmoreNode): Observable<LoadmoreNode[]> => node.childrenChange;\n\n    transformer = (node: LoadmoreNode, level: number) => {\n        const existingNode = this.nodeMap.get(node.item.id);\n\n        if (existingNode) {\n            return existingNode;\n        }\n\n        const newNode = new LoazyLoadedFlatNode(node.item, level, node.hasChildren, node.loadMoreParentItem);\n        this.nodeMap.set(node.item.id, newNode);\n        return newNode;\n    };\n\n    getLevel = (node: LoazyLoadedFlatNode) => node.level;\n\n    isExpandable = (node: LoazyLoadedFlatNode) => node.level === 0;\n\n    hasChild = (_: number, _nodeData: LoazyLoadedFlatNode) => _nodeData.level === 0;\n\n\n    isLoadMore = (_: number, _nodeData: LoazyLoadedFlatNode) => _nodeData.item.id === this.LOAD_MORE; // ?\n\n    /** Load more nodes from data source */\n    loadMore(node: LoazyLoadedFlatNode) {\n\n        const treenode: LoadmoreNode = this.nodes.find(it => it.item.id === node.item.id);\n        if (treenode.children.length > 0) {\n            treenode.childrenChange.next(treenode.children);\n            return;\n        }\n        if (node.item['uri']) {\n            this.getPatternsAndAddToTree(<PatternLanguage>node.item, treenode, node);\n\n        } else {\n            this.getRelatedPatternAndAddToTree(<LinksToOtherPattern>node.item, treenode, node);\n        }\n    }\n\n    loadChildren(node: LoazyLoadedFlatNode) {\n        this.loadMore(node);\n    }\n\n    todoLeafItemSelectionToggle(node: any) {\n        this.checklistSelection.toggle(node);\n        this.checkAllParentsSelection(node);\n    }\n\n    /* Checks all the parents when a leaf node is selected/unselected */\n    checkAllParentsSelection(node: LoazyLoadedFlatNode): void {\n        let parent: LoazyLoadedFlatNode | null = this.getParentNode(node);\n        while (parent) {\n            this.checkRootNodeSelection(parent);\n            parent = this.getParentNode(parent);\n        }\n    }\n\n\n    /** Whether part of the descendants are selected */\n    descendantsPartiallySelected(node: LoazyLoadedFlatNode): boolean {\n        const descendants = this.treeControl.getDescendants(node);\n        const result = descendants.some(child => this.checklistSelection.isSelected(child));\n        return result && !this.descendantsAllSelected(node);\n    }\n\n    /** Whether all the descendants of the node are selected. */\n    descendantsAllSelected(node: LoazyLoadedFlatNode): boolean {\n        const descendants = this.treeControl.getDescendants(node);\n        const descAllSelected = descendants.every(child =>\n            this.checklistSelection.isSelected(child)\n        );\n        return descAllSelected && descendants.length > 0;\n    }\n\n    /** Check root node checked state and change it accordingly */\n    checkRootNodeSelection(node: LoazyLoadedFlatNode): void {\n        const nodeSelected = this.checklistSelection.isSelected(node);\n        const descendants = this.treeControl.getDescendants(node);\n        const descAllSelected = descendants.every(child =>\n            this.checklistSelection.isSelected(child)\n        );\n        if (nodeSelected && !descAllSelected) {\n            this.checklistSelection.deselect(node);\n        } else if (!nodeSelected && descAllSelected) {\n            this.checklistSelection.select(node);\n        }\n    }\n\n    /* Get the parent node of a node */\n    getParentNode(node: LoazyLoadedFlatNode): LoazyLoadedFlatNode | null {\n        const currentLevel = node.level;\n\n        if (currentLevel < 1) {\n            return null;\n        }\n\n        const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\n\n        for (let i = startIndex; i >= 0; i--) {\n            const currentNode = this.treeControl.dataNodes[i];\n\n            if (currentNode.level < currentLevel) {\n                return currentNode;\n            }\n        }\n        return null;\n    }\n\n\n    /** Toggle the to-do item selection. Select/deselect all the descendants node */\n    todoItemSelectionToggle(node: LoazyLoadedFlatNode): void {\n        this.checklistSelection.toggle(node);\n        const descendants = this.treeControl.getDescendants(node);\n        this.checklistSelection.isSelected(node)\n            ? this.checklistSelection.select(...descendants)\n            : this.checklistSelection.deselect(...descendants);\n\n        // if a pattern language is selected that hasn't been loaded, load the children\n        if (this.checklistSelection.isSelected(node) && descendants.length === 0) {\n            this.loadMore(node);\n        }\n\n        // Force update for the parent\n        descendants.every(child =>\n            this.checklistSelection.isSelected(child)\n        );\n        this.checkAllParentsSelection(node);\n    }\n\n    getPatterns() {\n        return this.checklistSelection.selected.filter((node) => node.level === 1);\n    }\n\n    private updateTree(node, treenode, childnodes) {\n        treenode.childrenChange.next(childnodes);\n        this.dataSource.data = this.nodes;\n        const descendants = this.treeControl.getDescendants(node);\n        if (this.checklistSelection.isSelected(node)) {\n            this.checklistSelection.select(...descendants);\n        }\n    }\n\n    private getPatternsAndAddToTree(item: PatternLanguage, treenode, node) {\n        this.patternService.getPatternsByUrl(item._links.patterns.href).subscribe((patterns) => {\n            const dummy = {id: this.LOAD_MORE, name: '', uri: '', content: null, _links: null, patternLanguageId: '', patternLanguageName: ''};\n            const childnodes = patterns.length > 0 ? patterns.map(it => new LoadmoreNode(it)) : [new LoadmoreNode(dummy)];\n\n            this.updateTree(node, treenode, childnodes);\n\n        });\n    }\n\n    private getRelatedPatternAndAddToTree(item: LinksToOtherPattern, treenode: LoadmoreNode, node: LoazyLoadedFlatNode) {\n        const edgesObservables = node.item['links'].map(link => item.type === 'directed' ?\n            this.patternRelationDescriptorService.getDirectedEdgeByUrl(link.href) :\n            this.patternRelationDescriptorService.getUndirectedEdgeByUrl(link.href));\n        // @ts-ignore\n        forkJoin(...edgesObservables).subscribe((edges) => {\n            const childnodes = edges.map((edge: DirectedEdgeModel | UndirectedEdgeModel) =>\n                new LoadmoreNode(new LinksToOtherPattern(edge, item.type === 'directed', this.patternId)));\n            this.updateTree(node, treenode, childnodes);\n        });\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {PatternViewManagementComponent} from './pattern-view-management/pattern-view-management.component';\nimport {PatternViewRendererComponent} from './pattern-view-renderer/pattern-view-renderer.component';\n\nconst routes: Routes = [\n    {\n        path: 'patternviews',\n        pathMatch: 'prefix',\n        children: [\n            {\n                path: '',\n                component: PatternViewManagementComponent\n            },\n          {\n            path: ':patternViewUri',\n            component: PatternViewRendererComponent\n          },\n        ]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class PatternViewManagementRoutingModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {PatternViewManagementRoutingModule} from './pattern-view-management-routing.module';\nimport {PatternViewManagementComponent} from './pattern-view-management/pattern-view-management.component';\nimport {CoreModule} from '../core/core.module';\nimport {PatternViewRendererComponent} from './pattern-view-renderer/pattern-view-renderer.component';\nimport {AddToViewComponent} from './add-to-view/add-to-view.component';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTreeModule } from '@angular/material/tree';\n\n@NgModule({\n    declarations: [PatternViewManagementComponent, PatternViewRendererComponent, AddToViewComponent],\n    imports: [\n        CommonModule, MatCardModule, MatBadgeModule,\n        PatternViewManagementRoutingModule, CoreModule, MatToolbarModule, MatDialogModule, MatButtonModule, MatTreeModule, MatIconModule, MatCheckboxModule\n    ],\n    entryComponents: [AddToViewComponent]\n})\nexport class PatternViewManagementModule {\n}\n","<pp-action-button-bar [goBackButton]=\"false\" [addButtonText]=\"'Add View'\"\n                      (addClicked)=\"createView()\"></pp-action-button-bar>\n<div style=\"display: flex; flex-wrap: wrap; padding: 0.25em;\">\n    <mat-card class=\"card box\"\n              *ngFor=\"let entity of patternViewResponse?._embedded?.patternViews\"\n              (click)=\"navigate(entity)\"\n    >\n        <span>{{entity.name}}</span>\n    </mat-card>\n\n</div>\n","import {Component, NgZone, OnInit} from '@angular/core';\nimport {PatternViewService} from '../../core/service/pattern-view.service';\nimport {PatternView} from '../../core/model/hal/pattern-view.model';\nimport {MatDialog} from '@angular/material/dialog';\nimport {CreateEditPatternLanguageComponent} from '../../core/component/create-edit-pattern-language/create-edit-pattern-language.component';\nimport {DialogPatternLanguageResult} from '../../pattern-language-management/data/DialogPatternLanguageResult.interface';\nimport {PatternLanguageService} from '../../core/service/pattern-language.service';\nimport PatternLanguage from '../../core/model/hal/pattern-language.model';\nimport {switchMap, tap} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\nimport {PatternViewResponse} from '../../core/model/hal/pattern-view-response.interface';\nimport {ToasterService} from 'angular2-toaster';\nimport {UriConverter} from '../../core/util/uri-converter';\nimport UriEntity from '../../core/model/hal/uri-entity.model';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n    selector: 'pp-solution-language-management',\n    templateUrl: './pattern-view-management.component.html',\n    styleUrls: ['./pattern-view-management.component.scss']\n})\nexport class PatternViewManagementComponent implements OnInit {\n    public patternViewResponse;\n    private patternLanguages: PatternLanguage[];\n\n    constructor(private patternViewService: PatternViewService, private dialog: MatDialog, private patternLanguageService: PatternLanguageService,\n                private toastService: ToasterService, private activatedRoute: ActivatedRoute, private router: Router, private zone: NgZone) {\n    }\n\n    ngOnInit() {\n\n        this.getData().subscribe();\n\n    }\n\n    private getData(): Observable<PatternViewResponse> {\n        return this.patternViewService.getPatternViews().pipe(tap((views) => {\n            this.patternViewResponse = views;\n        }));\n\n\n    }\n\n    navigate(view: UriEntity): void {\n        this.zone.run(() => {\n            this.router.navigate([UriConverter.doubleEncodeUri(view.uri)], {relativeTo: this.activatedRoute});\n        });\n    }\n\n    createView() {\n        const dialogRef = this.dialog.open(CreateEditPatternLanguageComponent, {data: {isPatternLanguageCreation: false}});\n        let view;\n        // Save PatternLanguage when user presses save\n        (<CreateEditPatternLanguageComponent>dialogRef.componentInstance)\n            .saveClicked.pipe(\n            tap((result: DialogPatternLanguageResult) => {\n                view = <PatternView>result.dialogResult;\n            }),\n            switchMap(() => this.patternViewService.savePatternView(this.patternViewResponse._links.patternViews.href, view)),\n            switchMap(() => this.getData())\n        ).subscribe(res => {\n            if (res) {\n                this.toastService.pop('success', 'Created View');\n            }\n        });\n    }\n\n}\n","<pp-action-button-bar [addButtonText]=\"'Add patterns'\" [secondAddButton]=\"true\"\n                      [secondAddButtonText]=\"'Create new Link'\" [displayText]=\"displayText\"\n                      (addClicked)=\"addPatternToView()\" (add2Clicked)=\"addLink()\">\n    <pp-toggle-renderer [graphVisible]=\"graphVisible\" (toggledRenderer)=\"changeRenderer($event)\"></pp-toggle-renderer>\n    <button style=\"margin-left: 10px;\" (click)=\"reloadGraph()\" *ngIf=\"graphVisible\" color=\"accent\" mat-raised-button>\n        <i class=\"material-icons\">autorenew</i> Reformat\n    </button>\n</pp-action-button-bar>\n\n<div class=\"container\" *ngIf=\"!isLoading && !graphVisible\">\n\n    <mat-card class=\"pattern-card\" *ngFor=\"let pattern of this.patterns\">\n        <mat-card-header>\n            <mat-card-title>{{pattern?.name}}</mat-card-title>\n            <mat-card-subtitle>{{pattern.patternLanguageName}}\n\n\n            </mat-card-subtitle>\n\n        </mat-card-header>\n\n        <mat-card-content class=\"card-content-style\">\n\n            <div class=\"badge-container\" (click)=\"showIngoingEdges(pattern._links.ingoingDirectedEdges)\">\n                <button mat-button class=\"edge-button\">\n                    <mat-icon> trending_flat\n                    </mat-icon>\n                    <span class=\"badge-span\" matBadgeOverlap=\"false\"\n                          [matBadge]=\"getLinkCount(pattern._links.ingoingDirectedEdges)\"\n                    >\n                    </span>\n                </button>\n            </div>\n\n            <div class=\"badge-container\" (click)=\"showOutgoingEdges(pattern._links.outgoingDirectedEdges)\">\n                <button mat-button class=\"edge-button\">\n                    <mat-icon class=\"flip\"> trending_flat\n                    </mat-icon>\n                    <span class=\"badge-span\" matBadgeOverlap=\"false\"\n                          [matBadge]=\"getLinkCount(pattern._links.outgoingDirectedEdges)\"\n                    >\n                </span>\n                </button>\n            </div>\n            <div class=\"badge-container\" (click)=\"showUndirectedEdges(pattern._links.undirectedEdges)\">\n                <button mat-button class=\"edge-button\">\n                    <mat-icon>compare_arrows</mat-icon>\n                    <span class=\"badge-span\" [matBadge]=\"getLinkCount(pattern._links.undirectedEdges)\"\n                          matBadgeOverlap=\"false\"\n                    >\n                </span>\n                </button>\n            </div>\n        </mat-card-content>\n        <mat-card-actions\n        >\n            <button mat-button (click)=\"addLinks(pattern)\">Add Links (incl. Pattern)\n            </button>\n        </mat-card-actions>\n    </mat-card>\n</div>\n\n<pp-graph-display *ngIf=\"!isLoading && graphVisible\"\n                  [data]=\"{\n                patterns: this.patterns, edges: this.patternLinks,\n                patternLanguage: null, patternView: this.patternViewResponse\n            }\"\n                  (addedEdge)=\"addedEdgeInGraphView($event)\" [showPatternLanguageName]=\"true\"></pp-graph-display>\n\n\n","import {AfterViewInit, ApplicationRef, ChangeDetectorRef, Component, OnInit, ViewChild} from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {AddToViewComponent, LinksToOtherPattern, LoazyLoadedFlatNode} from '../add-to-view/add-to-view.component';\nimport {PatternLanguageService} from '../../core/service/pattern-language.service';\nimport {EMPTY, forkJoin, Observable} from 'rxjs';\nimport {switchMap, tap} from 'rxjs/operators';\nimport {ToasterService} from 'angular2-toaster';\nimport {PatternViewService} from '../../core/service/pattern-view.service';\nimport Pattern from '../../core/model/hal/pattern.model';\nimport {PatternView} from '../../core/model/hal/pattern-view.model';\nimport {UriConverter} from '../../core/util/uri-converter';\nimport {ActivatedRoute} from '@angular/router';\nimport {PatternService} from '../../core/service/pattern.service';\nimport {CreatePatternRelationComponent} from '../../core/component/create-pattern-relation/create-pattern-relation.component';\nimport {DirectedEdgeModel} from '../../core/model/hal/directed-edge.model';\nimport {HalLink} from '../../core/model/hal/hal-link.interface';\nimport {AddDirectedEdgeToViewRequest} from '../../core/model/hal/add-directed-edge-to-view-request';\nimport {AddUndirectedEdgeToViewRequest} from '../../core/model/hal/add-undirected-edge-to-view-request';\nimport {UndirectedEdgeModel} from '../../core/model/hal/undirected-edge.model';\nimport PatternLanguageModel from '../../core/model/hal/pattern-language-model.model';\nimport {Embedded} from '../../core/model/hal/embedded';\nimport {UndirectedEdesResponse} from '../../core/model/hal/undirected-edes-response.interface';\nimport {DirectedEdesResponse} from '../../core/model/hal/directed-edes-response.interface';\nimport {GraphDisplayComponent} from '../../core/component/graph-display/graph-display.component';\nimport {DeletePatternRelationComponent} from '../../core/component/delete-pattern-relation/delete-pattern-relation.component';\n\n@Component({\n    selector: 'pp-pattern-view-renderer',\n    templateUrl: './pattern-view-renderer.component.html',\n    styleUrls: ['./pattern-view-renderer.component.scss']\n})\nexport class PatternViewRendererComponent implements OnInit, AfterViewInit {\n\n    patternViewResponse: PatternView;\n    patterns: Array<Pattern> = [];\n    displayText: string;\n    isLoading = true;\n    private patternLanguages: Array<PatternLanguageModel>;\n    private patternViewUri: string;\n    graphVisible = false;\n    private directedPatternRelations: DirectedEdgeModel[];\n    private undirectedPatternRelations: UndirectedEdgeModel[];\n    patternLinks: Array<DirectedEdgeModel | UndirectedEdgeModel> = [];\n    @ViewChild(GraphDisplayComponent, {static: false}) graphDisplayComponent: GraphDisplayComponent;\n\n    constructor(private matDialog: MatDialog, private patternLanguageService: PatternLanguageService, private patternViewService: PatternViewService,\n                private patternService: PatternService, private toasterService: ToasterService, private cdr: ChangeDetectorRef,\n                private activatedRoute: ActivatedRoute, private applicationRef: ApplicationRef) {\n    }\n\n    ngOnInit() {\n\n\n    }\n\n    ngAfterViewInit(): void {\n        this.patternViewUri = UriConverter.doubleDecodeUri(this.activatedRoute.snapshot.paramMap.get('patternViewUri'));\n\n        this.getData().pipe(\n            switchMap(() => {\n                return this.getLinks();\n            })\n        ).subscribe(() => {\n                this.isLoading = false;\n                this.displayText = this.patternViewResponse.name;\n            },\n            (error => this.toasterService.pop('error', 'Could not load data')));\n    }\n\n    addPatternToView() {\n        const dialogRef = this.matDialog.open(AddToViewComponent, {\n            data: {patternlanguages: this.patternLanguages, title: 'Add patterns to View'},\n            height: 'auto',\n            maxHeight: 'calc(100vh - 200px)'\n        });\n        dialogRef.afterClosed().pipe(\n            switchMap((res: LoazyLoadedFlatNode[]) => res ?\n                this.patternViewService.addPatterns(this.patternViewResponse._links.patterns.href, this.mapDialogResultToPatterns(res))\n                : EMPTY),\n            switchMap(result => result ? this.getCurrentPatternViewAndPatterns() : EMPTY)).subscribe((res) => {\n            if (res) {\n                this.toasterService.pop('success', 'Data added');\n                this.cdr.detectChanges();\n            }\n        });\n    }\n\n    addLinks(pattern: Pattern) {\n        const dialogRef = this.matDialog.open(AddToViewComponent,\n            {data: {links: this.mapPatternLinksToTreeNode(pattern), title: 'Add linked Patterns', patternId: pattern.id}});\n        this.subscribeToLinkDialogResult(dialogRef);\n    }\n\n    private getDirectedEdges(): Observable<Embedded<DirectedEdesResponse>> {\n        if (!this.patternViewResponse) {\n            return EMPTY;\n        }\n        return this.patternViewService.getDirectedEdges(this.patternViewResponse).pipe(\n            tap((edges) => {\n                this.directedPatternRelations = edges._embedded ? edges._embedded.directedEdgeModels : [];\n            }));\n    }\n\n    private getUndirectedEdges(): Observable<Embedded<UndirectedEdesResponse>> {\n        if (!this.patternViewResponse) {\n            return EMPTY;\n        }\n        return this.patternViewService.getUndirectedEdges(this.patternViewResponse).pipe(\n            tap((edges) => {\n                this.undirectedPatternRelations = edges._embedded ? edges._embedded.undirectedEdgeModels : [];\n            }));\n    }\n\n    addLink() {\n        const dialogRef = this.matDialog.open(CreatePatternRelationComponent, {data: {patterns: this.patterns, patternview: this.patternViewResponse}});\n        dialogRef.afterClosed().pipe(\n            switchMap((edge) => {\n                    return this.createLink(edge);\n                }\n            )).subscribe((res) => {\n            if (res) {\n                this.toasterService.pop('success', 'Relation added');\n                this.getData().subscribe(\n                    () => {\n                        this.getLinks();\n                    }\n                );\n            }\n        });\n    }\n\n    private deleteLink(edge): Observable<any> {\n        return this.patternViewService.deleteLink(edge._links.self.href);\n    }\n\n    private createLink(edge): Observable<any> {\n        const url = edge instanceof DirectedEdgeModel ? this.patternViewResponse._links.directedEdges.href :\n            this.patternViewResponse._links.undirectedEdges.href;\n        if (!edge || !url) {\n            return EMPTY;\n        }\n        return this.patternViewService.createLink(url, edge instanceof DirectedEdgeModel ?\n            new AddDirectedEdgeToViewRequest(<DirectedEdgeModel>edge) :\n            new AddUndirectedEdgeToViewRequest(<UndirectedEdgeModel>edge)).pipe(\n            switchMap(() => this.getLinks())\n        );\n    }\n\n\n    detectChanges() {\n        this.cdr.detectChanges();\n        console.log('detected');\n    }\n\n    getLinkCount(directedEdges: HalLink[] | HalLink) {\n        if (!directedEdges) {\n            return 0;\n        }\n        return Array.isArray(directedEdges) ? directedEdges.length : 1;\n    }\n\n    showUndirectedEdges(undirectedEdges: HalLink[]) {\n        if (undirectedEdges) {\n            const dialogRef = this.matDialog.open(DeletePatternRelationComponent, {\n                data: {edges: undirectedEdges, type: 'undirected'},\n                width: '600px',\n                panelClass: 'delete-relation-dialog'\n            });\n            dialogRef.afterClosed().subscribe(() => {\n                // reload patterns since ng for pattern loop doesnt get updated else\n                this.getData().subscribe(\n                    () => {\n                        this.getLinks();\n                    }\n                );\n            });\n        }\n    }\n\n    showIngoingEdges(ingoingEdges: HalLink[]) {\n        if (ingoingEdges) {\n            const dialogRef = this.matDialog.open(DeletePatternRelationComponent, {\n                data: {edges: ingoingEdges, type: 'ingoing'},\n                width: '600px',\n                panelClass: 'delete-relation-dialog'\n            });\n            dialogRef.afterClosed().subscribe(() => {\n                // reload patterns since ng for pattern loop doesnt get updated else\n                this.getData().subscribe(\n                    () => {\n                        this.getLinks();\n                    }\n                );\n            });\n        }\n    }\n\n    showOutgoingEdges(outgoingEdges: HalLink[]) {\n        if (outgoingEdges) {\n            const dialogRef = this.matDialog.open(DeletePatternRelationComponent, {\n                data: {edges: outgoingEdges, type: 'outgoing'},\n                width: '600px',\n                panelClass: 'delete-relation-dialog'\n            });\n            dialogRef.afterClosed().subscribe(() => {\n                // reload patterns since ng for pattern loop doesnt get updated else\n                this.getData().subscribe(\n                    () => {\n                        this.getLinks();\n                    }\n                );\n            });\n        }\n    }\n\n    private getPatternLanguages(): Observable<Array<PatternLanguageModel>> {\n        return this.patternLanguageService.getPatternLanguages()\n            .pipe(\n                tap(patternlanguages => this.patternLanguages = patternlanguages)\n            );\n    }\n\n    private getCurrentPatternViewAndPatterns(): Observable<Pattern[]> {\n        return this.patternViewService.getPatternViewByUri(this.patternViewUri).pipe(\n            tap(patternViewResponse => {\n                this.patternViewResponse = patternViewResponse;\n            }),\n            switchMap((patternViewResponse: PatternView) => this.patternService.getPatternsByUrl(patternViewResponse._links.patterns.href)),\n            tap(patterns => {\n                this.patterns = patterns;\n            }));\n    }\n\n    private getData(): Observable<any> {\n        const $getPatternLanguages = this.getPatternLanguages();\n        const $getCurrentPatternView = this.getCurrentPatternViewAndPatterns();\n        return forkJoin([$getPatternLanguages, $getCurrentPatternView]); // , $getDirectedEdges]);\n    }\n\n    private getLinks(): Observable<any> {\n        const $getUndirectedEdges = this.getUndirectedEdges();\n        const $getDirectedEdges = this.getDirectedEdges();\n        return forkJoin([$getUndirectedEdges, $getDirectedEdges]).pipe(tap(() => {\n            this.patternLinks = [];\n            this.patternLinks.push(...this.directedPatternRelations);\n            this.patternLinks.push(...this.undirectedPatternRelations);\n        }));\n    }\n\n    private mapDialogResultToPatterns(res: LoazyLoadedFlatNode[]): Pattern[] {\n        if (!res) {\n            return [];\n        }\n        const patternsToAdd = res.map((patternNode) => <Pattern>{\n            content: null,\n            id: patternNode.item.id,\n            name: patternNode.item.name,\n            _links: null\n        });\n        const patternIdsOfView = this.patterns.map(it => it.id);\n        // only add patterns that are not already in the view:\n        return patternsToAdd.filter(pattern => !patternIdsOfView.includes(pattern.id));\n    }\n\n    private subscribeToLinkDialogResult(dialogRef: MatDialogRef<AddToViewComponent, any>) {\n        let nodesToAdd;\n        dialogRef.afterClosed().pipe(\n            tap(res => {\n                nodesToAdd = res;\n                console.log(res);\n            }),\n            switchMap((res) => {\n                return forkJoin([this.patternViewService.addPatterns(this.patternViewResponse._links.patterns.href, this.mapDialogResultToPatterns(res)),\n                    this.patternViewService.addLinks(this.patternViewResponse, res && Array.isArray(res) ? res.map(it => it.item) : [])]);\n            }),\n            switchMap(result => result ? this.getCurrentPatternViewAndPatterns() : EMPTY)\n        ).subscribe((res) => {\n            if (res) {\n                this.toasterService.pop('success', 'Data added');\n                this.cdr.detectChanges();\n            }\n        });\n    }\n\n    private mapPatternLinksToTreeNode(pattern: Pattern): LinksToOtherPattern[] {\n        const types: LinksToOtherPattern[] = [];\n        const possibleEdgeTypes = [\n            {link: pattern._links.ingoingDirectedEdgesFromPatternLanguage, type: 'directed', displayName: 'Ingoing directed edges'},\n            {link: pattern._links.outgoingDirectedEdgesFromPatternLanguage, type: 'directed', displayName: 'Outgoing directed edges'},\n            {link: pattern._links.undirectedEdgesFromPatternLanguage, type: 'undirected', displayName: 'Undirected edges'}\n        ];\n        possibleEdgeTypes.forEach((edgeType: { link: HalLink | HalLink[], displayName: string, type: string }, index) => {\n            if (edgeType.link) {\n                types.push({\n                    name: edgeType.displayName, links: Array.isArray(edgeType.link) ? edgeType.link : [edgeType.link], id: index.toString(),\n                    type: edgeType.type\n                });\n            }\n        });\n        return types;\n    }\n\n\n    changeRenderer(isGraphVisible: any) {\n        this.graphVisible = isGraphVisible;\n    }\n\n    addedEdgeInGraphView(edge: any) {\n        if (edge) {\n            this.createLink(edge).subscribe(() => {\n                this.toasterService.pop('success', 'Link added');\n                this.cdr.detectChanges();\n            });\n        }\n    }\n\n    reloadGraph() {\n        this.graphDisplayComponent.reformatGraph();\n    }\n}\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\n// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\nimport * as jQuery from './libs/jquery-1.3.2.js';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}