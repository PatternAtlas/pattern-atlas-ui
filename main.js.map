{"version":3,"sources":["./src/$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/authentication/_interceptor/token.interceptor.ts","./src/app/authentication/_services/auth-guard.service.ts","./src/app/authentication/_services/authentication.service.ts","./src/app/authentication/authentication.module.ts","./src/app/core/candidate-management/_services/candidate-management.service.ts","./src/app/core/candidate-management/_store/candidate-management.store.ts","./src/app/core/component/action-button-bar/action-button-bar.component.html","./src/app/core/component/action-button-bar/action-button-bar.component.ts","./src/app/core/component/cardrenderer/card-renderer.component.html","./src/app/core/component/cardrenderer/card-renderer.component.ts","./src/app/core/component/create-edit-pattern-language/create-edit-pattern-language.component.html","./src/app/core/component/create-edit-pattern-language/create-edit-pattern-language.component.ts","./src/app/core/component/create-pattern-relation/create-pattern-relation.component.html","./src/app/core/component/create-pattern-relation/create-pattern-relation.component.ts","./src/app/core/component/creative-license-footer/creative-license-footer.component.html","./src/app/core/component/creative-license-footer/creative-license-footer.component.ts","./src/app/core/component/delete-pattern-relation/delete-pattern-relation.component.html","./src/app/core/component/delete-pattern-relation/delete-pattern-relation.component.ts","./src/app/core/component/divider/divider.component.html","./src/app/core/component/divider/divider.component.ts","./src/app/core/component/graph-display/graph-display.component.html","./src/app/core/component/graph-display/graph-display.component.ts","./src/app/core/component/markdown-content-container/interfaces/DataRenderingComponent.interface.ts","./src/app/core/component/markdown-content-container/markdown-pattern-sectioncontent/markdown-pattern-section-content.component.html","./src/app/core/component/markdown-content-container/markdown-pattern-sectioncontent/markdown-pattern-section-content.component.ts","./src/app/core/component/markdown-content-container/pattern-property.directive.ts","./src/app/core/component/md-editor/md-editor.component.html","./src/app/core/component/md-editor/md-editor.component.ts","./src/app/core/component/navigate-back/navigate-back.component.html","./src/app/core/component/navigate-back/navigate-back.component.ts","./src/app/core/component/page-not-found/page-not-found.component.html","./src/app/core/component/page-not-found/page-not-found.component.ts","./src/app/core/component/process-oauth-callback/process-oauth-callback.component.html","./src/app/core/component/process-oauth-callback/process-oauth-callback.component.ts","./src/app/core/component/toggle-renderer/toggle-renderer.component.html","./src/app/core/component/toggle-renderer/toggle-renderer.component.ts","./src/app/core/core.module.ts","./src/app/core/default-pattern-renderer/default-pattern-renderer.component.html","./src/app/core/default-pattern-renderer/default-pattern-renderer.component.ts","./src/app/core/default-pl-renderer/default-pl-renderer.component.html","./src/app/core/default-pl-renderer/default-pl-renderer.component.ts","./src/app/core/directives/emit-event-on-added-edge.directive.ts","./src/app/core/directives/emit-event-on-keyup.directive.ts","./src/app/core/issue-management/_services/issue-management.service.ts","./src/app/core/issue-management/_store/issue-management-store.ts","./src/app/core/model/hal/add-directed-edge-to-view-request.ts","./src/app/core/model/hal/add-undirected-edge-to-view-request.ts","./src/app/core/model/hal/create-directed-edge-request.ts","./src/app/core/model/hal/create-undirected-edge-request.ts","./src/app/core/model/hal/directed-edge.model.ts","./src/app/core/model/hal/edge.model.ts","./src/app/core/model/hal/pattern-container.model.ts","./src/app/core/model/hal/pattern-language.model.ts","./src/app/core/model/hal/pattern-schema.model.ts","./src/app/core/model/hal/pattern-section-schema.model.ts","./src/app/core/model/hal/undirected-edge.model.ts","./src/app/core/model/hal/uri-entity.model.ts","./src/app/core/model/pattern-relation-descriptor-direction.enum.ts","./src/app/core/service/component-registry.service.ts","./src/app/core/service/graph-data.service.ts","./src/app/core/service/image.service.ts","./src/app/core/service/pattern-language.service.ts","./src/app/core/service/pattern-relation-descriptor.service.ts","./src/app/core/service/pattern-view.service.ts","./src/app/core/service/pattern.service.ts","./src/app/core/service/validation.service.ts","./src/app/core/user-management/_models/role.model.ts","./src/app/core/user-management/_services/user.service.ts","./src/app/core/user-management/_store/user.store.ts","./src/app/core/user-management/index.ts","./src/app/core/util/uri-converter.ts","./src/app/design-model-module/component/design-model-management/design-model-management.component.html","./src/app/design-model-module/component/design-model-management/design-model-management.component.ts","./src/app/design-model-module/component/design-model-renderer/design-model-renderer.component.html","./src/app/design-model-module/component/design-model-renderer/design-model-renderer.component.ts","./src/app/design-model-module/design-model-routing.module.ts","./src/app/design-model-module/design-model.module.ts","./src/app/design-model-module/service/design-model.service.ts","./src/app/globals.ts","./src/app/graph/graph.module.ts","./src/app/graph/model/group.ts","./src/app/graph/model/index.ts","./src/app/graph/model/link.ts","./src/app/graph/model/network-graph.ts","./src/app/graph/model/node-info.ts","./src/app/graph/model/node.ts","./src/app/graph/model/pattern-relation.ts","./src/app/graph/model/pattern.ts","./src/app/graph/service/d3.service.ts","./src/app/pattern-language-management/create-pattern/create-pattern.component.html","./src/app/pattern-language-management/create-pattern/create-pattern.component.ts","./src/app/pattern-language-management/pattern-container/pattern-container.component.html","./src/app/pattern-language-management/pattern-container/pattern-container.component.ts","./src/app/pattern-language-management/pattern-container/pattern-container.directive.ts","./src/app/pattern-language-management/pattern-language-container/pattern-language-container.component.html","./src/app/pattern-language-management/pattern-language-container/pattern-language-container.component.ts","./src/app/pattern-language-management/pattern-language-container/pattern-language-container.directive.ts","./src/app/pattern-language-management/pattern-language-graph/pattern-language-graph.component.html","./src/app/pattern-language-management/pattern-language-graph/pattern-language-graph.component.ts","./src/app/pattern-language-management/pattern-language-management.module.ts","./src/app/pattern-language-management/pattern-language-management/pattern-language-management-resolver.service.ts","./src/app/pattern-language-management/pattern-language-management/pattern-language-management.component.html","./src/app/pattern-language-management/pattern-language-management/pattern-language-management.component.ts","./src/app/pattern-view-management/add-to-view/add-to-view.component.html","./src/app/pattern-view-management/add-to-view/add-to-view.component.ts","./src/app/pattern-view-management/pattern-view-management.module.ts","./src/app/pattern-view-management/pattern-view-management/pattern-view-management.component.html","./src/app/pattern-view-management/pattern-view-management/pattern-view-management.component.ts","./src/app/pattern-view-management/pattern-view-renderer/pattern-view-renderer.component.html","./src/app/pattern-view-management/pattern-view-renderer/pattern-view-renderer.component.ts","./src/environments/environment.ts","./src/main.ts","fs (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { PatternLanguageGraphComponent } from './pattern-language-management/pattern-language-graph/pattern-language-graph.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProcessOauthCallbackComponent } from './core/component/process-oauth-callback/process-oauth-callback.component';\nimport { ToasterModule } from 'angular2-toaster';\nimport { PageNotFoundComponent } from './core/component/page-not-found/page-not-found.component';\nimport { AuthGuardService as AuthGuard } from './authentication/_services/auth-guard.service';\nimport { PatternLanguageManagementResolverService } from './pattern-language-management/pattern-language-management/pattern-language-management-resolver.service'; // eslint-disable-line max-len\nimport { UserRole } from './core/user-management';\nimport { globals } from './globals';\n/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: globals.pathConstants.patternLanguages\n  },\n  {\n    path: globals.pathConstants.patternLanguages,\n    resolve: {\n      patternlanguages: PatternLanguageManagementResolverService,\n    },\n    loadChildren: () => import('./pattern-language-management/pattern-language-management.module').then(m => m.PatternLanguageManagementModule),\n  },\n  {\n    path: globals.pathConstants.patternViews,\n    loadChildren: () => import('./pattern-view-management/pattern-view-management.module').then(m => m.PatternViewManagementModule),\n  },\n  {\n    path: globals.pathConstants.designModels,\n    loadChildren: () => import('./design-model-module/design-model.module').then(m => m.DesignModelModule),\n  },\n  {\n    path: 'candidate',\n    loadChildren: () => import('./candidate-management/candidate-management.module').then(m => m.CandidateManagementModule),\n  },\n  {\n    path: 'issue',\n    loadChildren: () => import('./issue-management/issue-management.module').then(m => m.IssueManagementModule),\n  },\n  {\n    path: 'user',\n    loadChildren: () => import('./user-management/user-management.module').then(m => m.UserManagementModule),\n    canActivate: [AuthGuard],\n    data: { role: UserRole.MEMBER }\n  },\n  {\n    path: 'admin',\n    loadChildren: () => import('./admin-management/admin-management.module').then(m => m.AdminManagementModule),\n    canActivate: [AuthGuard],\n    data: { role: UserRole.ADMIN }\n  },\n  {\n    path: 'developer',\n    loadChildren: () => import('./developer-management/developer-management.module').then(m => m.DeveloperManagementModule),\n    canActivate: [AuthGuard],\n    data: { role: UserRole.ADMIN }\n  },\n  {\n    path: 'oauth-callback',\n    component: ProcessOauthCallbackComponent\n  },\n  {\n    path: 'graph',\n    component: PatternLanguageGraphComponent\n  },\n  {\n    path: '**',\n    component: PageNotFoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: false, onSameUrlNavigation: 'reload' }), ToasterModule.forRoot()],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","<!--\n  ~ Copyright (c) 2018 University of Stuttgart.\n  ~\n  ~ See the NOTICE file(s) distributed with this work for additional\n  ~ information regarding copyright ownership.\n  ~\n  ~ This program and the accompanying materials are made available under the\n  ~ terms of the Eclipse Public License 2.0 which is available at\n  ~ http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n  ~ which is available at https://www.apache.org/licenses/LICENSE-2.0.\n  ~\n  ~ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n  -->\n\n<mat-toolbar color=\"primary\">\n  <mat-icon>library_books</mat-icon>\n  <span style=\"margin-left: 1rem\">PatternAtlas</span>\n  <span class=\"spacer\"></span>\n  {{welcomeText}}\n  <div class=\"log-button\">\n    <button mat-stroked-button (click)=\"loginOAuth()\"> {{ loginButton }}</button>\n  </div>\n</mat-toolbar>\n<nav mat-tab-nav-bar>\n  <a mat-tab-link [routerLink]=\"'/' + pathConstants.patternLanguages\"\n     routerLinkActive #rla1=\"routerLinkActive\" [active]=\"rla1.isActive\">\n    Pattern Languages\n  </a>\n  <a mat-tab-link [routerLink]=\"'/' + pathConstants.patternViews\"\n     routerLinkActive #rla2=\"routerLinkActive\" [active]=\"rla2.isActive\">\n    Pattern Views\n  </a>\n  <a mat-tab-link [routerLink]=\"'/' + pathConstants.designModels\" *ngIf=\"featureToggles.designModel\"\n     routerLinkActive #rla3=\"routerLinkActive\" [active]=\"rla3.isActive\">\n    Design Models\n  </a>\n  <a mat-tab-link [routerLink]=\"'/candidate'\" *ngIf=\"featureToggles.patternCandidate\"\n     routerLinkActive #rla4=\"routerLinkActive\" [active]=\"rla4.isActive\">\n    Pattern Candidate\n  </a>\n  <a mat-tab-link [routerLink]=\"'/issue'\" *ngIf=\"featureToggles.issue\"\n     routerLinkActive #rla5=\"routerLinkActive\" [active]=\"rla5.isActive\">\n    Issue\n  </a>\n  <a mat-tab-link [routerLink]=\"'/user'\" *ngIf=\"(auth.hasRole('MEMBER') | async)\"\n     routerLinkActive #rla6=\"routerLinkActive\" [active]=\"rla6.isActive\">\n    Personal\n  </a>\n  <a mat-tab-link [routerLink]=\"'/admin'\" *ngIf=\"(auth.hasRole('ADMIN') | async)\"\n     routerLinkActive #rla7=\"routerLinkActive\" [active]=\"rla7.isActive\">\n    Admin\n  </a>\n  <a mat-tab-link [routerLink]=\"'/developer'\" *ngIf=\"(auth.hasRole('ADMIN') | async)\"\n     routerLinkActive #rla8=\"routerLinkActive\" [active]=\"rla8.isActive\">\n    Developer\n  </a>\n</nav>\n\n<router-outlet></router-outlet>\n<toaster-container></toaster-container>\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { Component } from '@angular/core';\nimport { AuthenticationService } from './authentication/_services/authentication.service';\nimport { PAUser } from './core/user-management';\nimport { globals } from './globals';\n\n\n@Component({\n  selector: 'pp-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  readonly featureToggles = globals.featureToggles;\n  loginButton = 'Login';\n  welcomeText = '';\n  user: PAUser;\n  readonly pathConstants = globals.pathConstants;\n\n\n  constructor(public auth: AuthenticationService) {\n    this.auth.userSubject.subscribe(_user => {\n      if (_user) {\n        console.log('User is Logged in: ', _user);\n        this.user = _user;\n        this.loginButton = 'Logout';\n        this.welcomeText = `Welcome ${_user.name}`;\n      } else {\n        console.log('No user logged in: ', _user);\n        this.user = null;\n        this.loginButton = 'Login';\n        this.welcomeText = '';\n      }\n    });\n  }\n\n  loginOAuth() {\n    this.user ? this.auth.logout() : this.auth.login();\n  }\n}\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PatternLanguageManagementModule } from './pattern-language-management/pattern-language-management.module';\nimport { CoreModule } from './core/core.module';\n\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { PatternViewManagementModule } from './pattern-view-management/pattern-view-management.module';\nimport { NgxMdModule } from 'ngx-md';\nimport { CovalentTextEditorModule } from '@covalent/text-editor';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ToasterModule } from 'angular2-toaster';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { TokenInterceptor } from './authentication/_interceptor/token.interceptor';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { LandingPageComponent } from './core/component/landing-page/landing-page.component';\nimport { PageNotFoundComponent } from './core/component/page-not-found/page-not-found.component';\nimport { AuthenticationModule } from './authentication/authentication.module';\nimport { DesignModelModule } from './design-model-module/design-model.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageNotFoundComponent,\n    LandingPageComponent,\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    AuthenticationModule,\n    PatternLanguageManagementModule,\n    PatternViewManagementModule,\n    DesignModelModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatTabsModule,\n    NgxMdModule,\n    CovalentTextEditorModule,\n    CoreModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FlexLayoutModule,\n    ToasterModule.forRoot(),\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    JwtModule,\n    MatSidenavModule,\n    MatListModule,\n  ],\n  providers: [\n    CookieService,\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthenticationService } from '../_services/authentication.service';\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n    private static authService: AuthenticationService = null;\n\n    static init(authService: AuthenticationService) {\n      console.log('interceptor initialized');\n      this.authService = authService;\n    }\n\n    constructor() { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler) {\n      if (request.url.includes(environment.repositoryUrl) || request.url.includes(environment.userInfoUrl) ) {\n        return next.handle(this.addToken(request));\n      } else {\n        return next.handle(request);\n      }\n    }\n\n    private addToken(request: HttpRequest<any>): HttpRequest<any> {\n      const token = TokenInterceptor.authService.getAccesToken()\n      if (token == null) {\n        return request;\n      } else {\n        return request.clone({ setHeaders: { Authorization: `Bearer ${token}` } });\n      }        \n    }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, ActivatedRouteSnapshot } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\nimport { ToasterService } from 'angular2-toaster';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(\n    public auth: AuthenticationService, \n    public router: Router,\n    private toaserService: ToasterService\n  ) { }\n\n  canActivate(route: ActivatedRouteSnapshot): boolean {\n\n    const role = route.data.role;\n\n    if (!this.auth.isAuthenticated() || !this.auth.roleSubject.value.includes(role)) {\n      console.log('Not allowed')\n      this.toaserService.pop('error', 'You do not have the rights for Route', route.routeConfig.path);\n      return false;\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject, of, EMPTY, observable } from 'rxjs';\nimport { HttpClient, HttpRequest, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { switchMap, skipWhile, tap, map, catchError } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { TokenInterceptor } from '../_interceptor/token.interceptor';\nimport { PAUser } from 'src/app/core/user-management';\nimport { environment } from 'src/environments/environment';\n\n\nconst accessTokenKey = 'access_token';\nconst refreshTokenKey = 'refresh_token';\n\nconst stateKey = 'state';\n\n@Injectable()\nexport class AuthenticationService {\n\n    private regexCode: RegExp;\n    private regexState: RegExp;\n\n    public accessTokenSubject: BehaviorSubject<string>;\n    public userSubject: BehaviorSubject<PAUser>;\n    public roleSubject: BehaviorSubject<string[]>;\n\n    private jwtHelper: JwtHelperService;\n\n    constructor(\n        private http: HttpClient,\n        private router: Router,\n    ) {\n      console.log('Init Authentication Service');\n      this.jwtHelper = new JwtHelperService();\n      TokenInterceptor.init(this);\n\n      this.regexCode = /code=(\\w*)/;\n      this.regexState = /state=(\\w*)/;\n\n      this.initSubjectsPipe();\n\n    }\n\n    private initSubjectsPipe() {\n      this.userSubject = new BehaviorSubject<PAUser>(null);\n      this.roleSubject = new BehaviorSubject<string[]>(null);\n      this.accessTokenSubject = new BehaviorSubject<string>(this.getAccesToken());\n\n      this.accessTokenSubject.subscribe(token => {\n        if (token === 'logout') {\n          console.log('User logout');\n          this.userSubject.next(null);\n          this.roleSubject.next(null);\n          this.router.navigate(['/']);\n\n        } else if (token && !this.jwtHelper.isTokenExpired(token)) {\n          console.log('Token exists && token not expired')\n          this.getUserInfo();\n          this.router.navigate(['/issue']);\n\n        } else if (token && this.getRefreshToken() && this.jwtHelper.isTokenExpired(this.getAccesToken())) {\n          console.log('Token exists && token expired');\n          this.refreshToken();\n\n        } else {\n          console.log('Token does not exist');\n          this.getToken();\n        }\n      })\n    }\n\n    public login() {\n      const state = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n      localStorage.setItem(stateKey, state);\n      this.getAccesCode(state);\n    }\n\n    private getAccesCode(state: string) {\n      const params = new HttpParams()\n        .set('response_type', 'code')\n        .set('client_id', environment.clientIdPublic)\n        .set('redirect_uri', `${window.location.origin}`)\n        .set('scope', 'read+write')\n        .set('state', state)\n        // outcomment IF PKCE Authentaction flow is used\n        // .set('client_id', environment.clientIdPKCE)\n        // .set('code_challenge', '4cc9b165-1230-4607-873b-3a78afcf60c5')\n\n\n      window.open(environment.authorizeUrl + params, '_self');\n    }\n\n    private checkState(state: string) {\n      const stateLocal = localStorage.getItem(stateKey);\n      return state !== stateLocal\n    }\n\n    private getToken() {\n      const url = window.location.search;\n\n      if (url.includes('code=') && url.includes('state=')) {\n        // Checks if sended state is equal to received state, CSRF attacks\n        if (this.checkState(this.regexState.exec(url)[1])) {\n          console.error('Wrong State')\n          localStorage.clear();\n        } else {\n          const code = this.regexCode.exec(url)[1];\n          const params = new HttpParams()\n            .set('client_id', `${environment.clientIdPublic}`)\n                   \n            .set('code', code)\n            .set('redirect_uri', `${window.location.origin}`)\n            .set('grant_type', 'authorization_code')\n          // outcomment IF PKCE Authentaction flow is used\n          // .set('client_id', `${environment.clientPKCE}`)\n          // .set('code_verifier', '4cc9b165-1230-4607-873b-3a78afcf60c5')\n\n          this.http.post<any>(environment.tokenUrl, params).subscribe(token => {\n\n            const accessToken = token[accessTokenKey];\n            const refreshToken = token[refreshTokenKey];\n\n            localStorage.setItem(accessTokenKey, accessToken);\n            localStorage.setItem(refreshTokenKey, refreshToken);\n\n            this.accessTokenSubject.next(accessToken);\n          },\n          error => console.error('Error getToken(): ', error)\n          );\n        }\n      }\n    }\n\n    refreshToken() {\n      console.log('Refresh Token');\n      const params = new HttpParams()\n        .set('client_id', `${environment.clientIdPublic}`)\n        .set('grant_type', 'refresh_token')\n        .set('refresh_token', `${this.getRefreshToken()}`)\n      this.http.post<any>('http://localhost:8081/oauth/token', params).subscribe(token => {\n\n        const accessToken = token[accessTokenKey];\n        const refreshToken = token[refreshTokenKey];\n\n        localStorage.setItem(accessTokenKey, accessToken);\n        localStorage.setItem(refreshTokenKey, refreshToken);\n\n        this.accessTokenSubject.next(accessToken);\n      },\n      error => {\n        console.error('Error getToken via refreshToken: ', error)\n\n      }\n      );\n    }\n\n    getUserInfo() {\n      this.http.get<PAUser>('http://localhost:8081/user_info').subscribe(user => {\n\n        console.log('UserInfo: ', user);\n        this.userSubject.next(user);\n        this.roleSubject.next(user.roles);\n\n      },\n      error => {\n        console.error('Error getToken via refreshToken: ', error)\n\n      }\n      );\n    }\n\n    logout() {\n      console.log('Logout');\n      localStorage.clear();\n      this.accessTokenSubject.next('logout');\n    }\n\n    public getAccesToken(): string {\n      return localStorage.getItem(accessTokenKey);\n    }\n\n    private getRefreshToken(): string {\n      return localStorage.getItem(refreshTokenKey);\n    }\n\n    public isAuthenticated(): boolean {\n      if (!this.jwtHelper.isTokenExpired(this.getAccesToken())) {\n        return true;\n      } else if (!this.jwtHelper.isTokenExpired(this.getRefreshToken())) {\n        this.refreshToken();\n        return true\n      } else {\n        this.logout();\n        return false;\n      }\n    }\n\n    public hasRole(role: string): Observable<boolean> {\n      return this.roleSubject.asObservable().pipe(\n        map(roles => {\n          if (roles) {\n            return roles.includes(role);\n          }\n          return null;\n        })\n      );\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthenticationService } from './_services/authentication.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    AuthenticationService\n  ]\n})\nexport class AuthenticationModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ToasterService } from 'angular2-toaster';\nimport { AuthenticationService } from 'src/app/authentication/_services/authentication.service';\nimport { Observable } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { Rating } from '../../model/rating.enum';\nimport { Candidate } from '../_models/candidate.model';\nimport { CandidateComment } from '../_models/candidate-comment.model';\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\nexport class CandidateManagementService {\n\n  private repoEndpoint: string;\n  private serviceEndpoint: string;\n\n  constructor(\n    private http: HttpClient,\n    private toasterService: ToasterService,\n    private auth: AuthenticationService,\n  ) {\n    this.repoEndpoint = environment.repositoryUrl;\n    this.serviceEndpoint = '/candidates';\n  }\n\n  /**\n   * GET\n   */\n  public getAllCandidates(): Observable<Candidate[]> {\n    return this.http.get<any>(this.repoEndpoint + this.serviceEndpoint).pipe(\n      map(result => {\n        return result._embedded ? result._embedded.candidateModels : [];\n      }),\n      catchError(error => {\n        this.toasterService.pop('error', 'Getting candidate list', error);\n        return [];\n      }),\n    );\n  }\n\n  /**\n   * CREATE\n   */\n  public createCandidate(candidate: Candidate, patternLanguageId: string): Observable<Candidate> {\n    candidate.uri = candidate.name;\n\n    return this.http.post<any>(this.repoEndpoint + this.serviceEndpoint, candidate).pipe(\n      map(result => {\n        this.toasterService.pop('success', 'Created new candidate');\n        return result;\n      }),\n      catchError(error => {\n        this.toasterService.pop('error', 'Could not create new candidate: ', error);\n        return null;\n      }),\n    );\n  }\n\n  public createComment(candidate: Candidate, candidateComment: CandidateComment): Observable<Candidate> {\n    const userId = this.auth.userSubject.value.id;\n\n    return this.http.post<any>(this.repoEndpoint + this.serviceEndpoint + `/${candidate.id}/comments/${userId}`, candidateComment).pipe(\n      map(result => {\n        this.toasterService.pop('success', 'Created new candidate');\n        return result;\n      }),\n      catchError(error => {\n        this.toasterService.pop('error', 'Could not create new candidate: ', error);\n        return null;\n      }),\n    );\n  }\n\n  /**\n   * UPDATE\n   */\n  public updateCandidate(candidate: Candidate): Observable<Candidate> {\n\n    return this.http.put<any>(this.repoEndpoint + this.serviceEndpoint + `/${candidate.id}`, candidate).pipe(\n      map(result => {\n        this.toasterService.pop('success', 'Updated candidate');\n        return result;\n      }),\n      catchError(error => {\n        this.toasterService.pop('error', 'Could not update candidate: ', error);\n        return null;\n      }),\n    );\n  }\n\n  public updateRating(candidate: Candidate, rating: Rating): Observable<Candidate> {\n    const userId = this.auth.userSubject.value.id;\n\n    return this.http.put<any>(this.repoEndpoint + this.serviceEndpoint + `/${candidate.id}/users/${userId}/rating/${rating}`, candidate).pipe(\n      map(result => {\n        this.toasterService.pop('success', 'Updated candidate');\n        return result;\n      }),\n      catchError(error => {\n        this.toasterService.pop('error', 'Could not update candidate: ', error);\n        return null;\n      }),\n    );\n  }\n\n  public updateCommentRating(candidateComment: CandidateComment, rating: Rating): Observable<Candidate> {\n    const userId = this.auth.userSubject.value.id;\n\n    const url = this.repoEndpoint + this.serviceEndpoint + `/comments/${candidateComment.id}/users/${userId}/rating/${rating}`;\n\n    return this.http.put<any>(url, candidateComment).pipe(\n      map(result => {\n        this.toasterService.pop('success', 'Updated candidate comment');\n        return result;\n      }),\n      catchError(error => {\n        this.toasterService.pop('error', 'Could not update candidate comment: ', error);\n        return null;\n      }),\n    );\n  }\n\n  public deleteCandidate(candidate: Candidate): Observable<Candidate> {\n\n    return this.http.delete<any>(this.repoEndpoint + this.serviceEndpoint + `/${candidate.id}`).pipe(\n      map(result => {\n        this.toasterService.pop('success', 'Deleted candidate');\n        return result;\n      }),\n      catchError(error => {\n        this.toasterService.pop('error', 'Could not delete candidate: ', error);\n        return null;\n      }),\n    );\n  }\n}\n","export class CandidateManagementStore {\n  // private _issue2Candidate: BehaviorSubject<any> = new BehaviorSubject(null);\n\n  // get candidateFromIssue() {\n  //     return this._issue2Candidate.asObservable();\n  // }\n\n  // addCandidateFromIssue(issue2Candidate: any) {\n  //     console.log(issue2Candidate)\n  //     this._issue2Candidate.next(issue2Candidate);\n  // }\n\n  // resetCandidateFromIssue() {\n  //     this._issue2Candidate.next(null);\n  // }\n}\n","<mat-toolbar>\n  <pp-navigate-back *ngIf=\"goBackButton\"></pp-navigate-back>\n\n  <span class=\"action-button-with-margin\"><b>{{this.displayText}}</b></span>\n\n  <ng-content></ng-content>\n\n  <button (click)=\"reloadButtonClicked()\" *ngIf=\"reloadButton\" class=\"action-button-with-margin\" color=\"accent\"\n          mat-raised-button>\n    <i class=\"material-icons\">autorenew</i> Reload\n  </button>\n\n  <button (click)=\"addButtonClicked()\" *ngIf=\"firstAddButton\" class=\"action-button-with-margin\" color=\"accent\"\n          mat-raised-button>\n    <i class=\"material-icons\">add</i> {{addButtonText}}\n  </button>\n\n  <button style=\"margin-left: 0;\" (click)=\"secondAddButtonClicked()\" *ngIf=\"secondAddButton\"\n          class=\"action-button-with-margin\" color=\"accent\"\n          mat-raised-button>\n    <i class=\"material-icons\">add</i> {{secondAddButtonText}}\n  </button>\n</mat-toolbar>\n\n\n","import { ApplicationRef, ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'pp-action-button-bar',\n  templateUrl: './action-button-bar.component.html',\n  styleUrls: ['./action-button-bar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class ActionButtonBarComponent implements OnInit {\n  @Output() addClicked = new EventEmitter<void>();\n  @Output() add2Clicked = new EventEmitter<void>();\n  @Output() reloadClicked = new EventEmitter<void>();\n  @Output() changedText = new EventEmitter<void>();\n  @Input() addButtonText: string;\n  @Input() reloadButton = false;\n  @Input() goBackButton = true;\n  @Input() secondAddButton: boolean;\n  @Input() firstAddButton = true;\n  @Input() secondAddButtonText: string;\n\n  @Input() displayText: string;\n\n  constructor(private cdr: ChangeDetectorRef,\n              private applicationRef: ApplicationRef) {\n  }\n\n  ngOnInit() {\n  }\n\n  addButtonClicked() {\n    this.addClicked.emit();\n  }\n\n  reloadButtonClicked() {\n    this.reloadClicked.emit();\n  }\n\n  secondAddButtonClicked() {\n    this.add2Clicked.emit();\n  }\n}\n","<div class=\"card-container\">\n  <mat-card *ngFor=\"let entity of uriEntities\"\n            class=\"card box\">\n    <mat-card-title style=\"margin-bottom: 1rem\">{{entity.name}}</mat-card-title>\n    <mat-card-content>\n      <img mat-card-image *ngIf=\"entity.iconUrl else noimage\" [src]=\"entity.iconUrl\">\n      <ng-template #noimage><img mat-card-image src=\"//via.placeholder.com/350x150\"></ng-template>\n      <button (click)=\"navigate(entity)\" class=\"save-button\" style=\"margin-bottom: 1rem\" mat-raised-button color=\"primary\">\n        <i class=\"material-icons\">list</i>Details\n      </button>\n      <button (click)=\"delete(entity)\" class=\"save-button\" style=\"margin-bottom: 1rem\" mat-raised-button color=\"warn\">\n        <i class=\"material-icons\">delete</i>Delete\n      </button>\n    </mat-card-content>\n    <mat-card-footer *ngIf=\"showLinks\">\n            <span [matBadge]=\"getLinkCount(entity._links.ingoingDirectedEdges)\"\n                  class=\"badge-span\"\n                  matBadgeOverlap=\"false\">\n                <mat-icon>trending_flat</mat-icon>\n            </span>\n      <mat-icon class=\"flip\">trending_flat</mat-icon>\n      <span [matBadge]=\"getLinkCount(entity._links.outgoingDirectedEdges)\"\n            class=\"badge-span\"\n            matBadgeOverlap=\"false\">\n            </span>\n      <span [matBadge]=\"getLinkCount(entity._links.undirectedEdges)\" matBadgeOverlap=\"false\">\n                <mat-icon>compare_arrows</mat-icon>\n            </span>\n    </mat-card-footer>\n  </mat-card>\n</div>\n","import { Component, EventEmitter, Input, NgZone, Output } from '@angular/core';\nimport { UriConverter } from '../../util/uri-converter';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport UriEntity from '../../model/hal/uri-entity.model';\nimport Pattern from '../../model/hal/pattern.model';\nimport { HalLink } from '../../model/hal/hal-link.interface';\nimport { PatternService } from '../../service/pattern.service';\nimport { ToasterService } from 'angular2-toaster';\n\n@Component({\n  selector: 'pp-card-renderer',\n  templateUrl: './card-renderer.component.html',\n  styleUrls: ['./card-renderer.component.scss']\n})\nexport class CardRendererComponent {\n\n  @Input() uriEntities: Array<Pattern>;\n  @Input() showLinks = true;\n  @Output() createEntityClicked: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(private zone: NgZone,\n              private router: Router,\n              private activatedRoute: ActivatedRoute,\n              private patternService: PatternService,\n              private toasterService: ToasterService) {\n  }\n\n  navigate(pattern: UriEntity): void {\n    this.zone.run(() => {\n      this.router.navigate([UriConverter.doubleEncodeUri(pattern.id)], { relativeTo: this.activatedRoute });\n    });\n  }\n\n  delete(pattern: Pattern): void {\n    this.patternService.deletePattern(pattern._links.self.href)\n      .subscribe(\n        value => this.handlePatternDelete(pattern),\n        error => {\n          this.toasterService.pop('error', 'Could not delete pattern!');\n        }\n      );\n  }\n\n  getLinkCount(directedEdges: HalLink[] | HalLink): number {\n    if (!directedEdges) {\n      return 0;\n    }\n    return Array.isArray(directedEdges) ? directedEdges.length : 1;\n  }\n\n  private collectAllEdgesOfPattern(pattern: Pattern): HalLink[] {\n    let collectedEdges: HalLink[] = [];\n    if (pattern._links.outgoingDirectedEdges) {\n      Array.isArray(pattern._links.outgoingDirectedEdges) ? collectedEdges = [...collectedEdges, ...pattern._links.outgoingDirectedEdges] :\n        collectedEdges.push(pattern._links.outgoingDirectedEdges);\n    }\n    if (pattern._links.ingoingDirectedEdges) {\n      Array.isArray(pattern._links.ingoingDirectedEdges) ? collectedEdges = [...collectedEdges, ...pattern._links.ingoingDirectedEdges] :\n        collectedEdges.push(pattern._links.ingoingDirectedEdges);\n    }\n    if (pattern._links.undirectedEdges) {\n      Array.isArray(pattern._links.undirectedEdges) ? collectedEdges = [...collectedEdges, ...pattern._links.undirectedEdges] :\n        collectedEdges.push(pattern._links.undirectedEdges);\n    }\n    return collectedEdges;\n  }\n\n  private deleteEdgesFromDeletedPattern(edgesToRemove: String []): void {\n    this.uriEntities.forEach(otherPattern => {\n      if (otherPattern._links.outgoingDirectedEdges) {\n        if (Array.isArray(otherPattern._links.outgoingDirectedEdges)) {\n          otherPattern._links.outgoingDirectedEdges = otherPattern._links.outgoingDirectedEdges\n            .filter(removeEdge => !(edgesToRemove.includes(removeEdge.href)));\n        } else {\n          if (edgesToRemove.includes(otherPattern._links.outgoingDirectedEdges.href)) {\n            otherPattern._links.outgoingDirectedEdges = undefined;\n          }\n        }\n      }\n      if (otherPattern._links.ingoingDirectedEdges) {\n        if (Array.isArray(otherPattern._links.ingoingDirectedEdges)) {\n          otherPattern._links.ingoingDirectedEdges = otherPattern._links.ingoingDirectedEdges\n            .filter(removeEdge => !(edgesToRemove.includes(removeEdge.href)));\n        } else {\n          if (edgesToRemove.includes(otherPattern._links.ingoingDirectedEdges.href)) {\n            otherPattern._links.ingoingDirectedEdges = undefined;\n          }\n        }\n      }\n      if (otherPattern._links.undirectedEdges) {\n        if (Array.isArray(otherPattern._links.undirectedEdges)) {\n          otherPattern._links.undirectedEdges = otherPattern._links.undirectedEdges\n            .filter(removeEdge => !(edgesToRemove.includes(removeEdge.href)));\n        } else {\n          if (edgesToRemove.includes(otherPattern._links.undirectedEdges.href)) {\n            otherPattern._links.undirectedEdges = undefined;\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * This method is called when the pattern is successfully deleted by the pattern service.\n   * It removes the selected pattern from the uriEntities, and\n   * removes all edges from all other patterns where the pattern to delete\n   * is part of the edge.\n   * This method is only used to update the rendered information in the frontend.\n   *\n   * @param pattern: The pattern which is deleted.\n   */\n  private handlePatternDelete(pattern: Pattern): void {\n    this.uriEntities = this.uriEntities.filter(value => value.id !== pattern.id);\n    let allEdgesToRemove: HalLink[];\n    const allEdgesToRemoveHref: String[] = [];\n    allEdgesToRemove = this.collectAllEdgesOfPattern(pattern);\n    allEdgesToRemove.forEach(link => allEdgesToRemoveHref.push(link.href));\n    this.deleteEdgesFromDeletedPattern(allEdgesToRemoveHref);\n  }\n}\n","<div style=\"display: flex; justify-content: space-between; align-items: baseline\">\n  <h1 mat-dialog-title>Create {{dialogTitle}}</h1>\n  <button mat-flat-button (click)=\"close()\" tabindex=\"-1\">\n    <mat-icon>close</mat-icon>\n  </button>\n</div>\n<div mat-dialog-content [formGroup]=\"patternLanguageForm\">\n  <div fxLayout=\"column\" fxLayoutAlign=\"space-around start\">\n    <mat-card fxLayout=\"column\" fxLayoutAlign=\"space-around\" style=\"margin: 10px;\">\n      <mat-form-field appearance=\"outline\" [floatLabel]=\"'always'\">\n        <mat-label>{{dialogTitle}} name</mat-label>\n        <input matInput formControlName=\"name\"\n               placeholder=\"Enter the name of the {{dialogTitle}}\">\n        <mat-error *ngIf=\"saveRequested && name?.hasError('required')\">\n          This field is mandatory.\n        </mat-error>\n        <mat-error *ngIf=\"saveRequested && name?.hasError('pattern')\">\n          Please use only alphanumeric characters, _ and spaces.\n        </mat-error>\n      </mat-form-field>\n\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\n        <mat-form-field class=\"full-width\" appearance=\"outline\" [floatLabel]=\"'always'\">\n          <mat-label>Icon URL</mat-label>\n          <input matInput formControlName=\"iconUrl\" placeholder=\"Enter URL of Icon\" type=\"url\">\n          <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\" *ngIf=\"iconPreviewVisible\">\n            <span class=\"label-preview\">Icon-Preview: </span>\n            <div mat-card-avatar #iconPreview\n                 [ngStyle]=\"{ 'background-image': 'url(' + iconUrl?.value + ')'}\"\n                 class=\"example-header-image\"></div>\n          </div>\n          <mat-error *ngIf=\"saveRequested && iconUrl?.hasError('required')\">\n            This field is mandatory.\n          </mat-error>\n          <mat-error *ngIf=\"saveRequested && iconUrl?.hasError('pattern')\">\n            Please insert a valid URL.\n          </mat-error>\n        </mat-form-field>\n      </div>\n\n      <div *ngIf=\"isPatternLanguageDialog\">\n        <h3>Sections</h3>\n        <mat-form-field appearance=\"outline\" [floatLabel]=\"'always'\">\n          <mat-label>New Section</mat-label>\n          <input #sectionInput (keyup.enter)=\"addSection(sectionInput.value)\" matInput\n                 placeholder=\"Type new section name and hit enter...\" [formControl]=\"sectionCtrl\">\n        </mat-form-field>\n        <mat-list matRipple cdkDropList [cdkDropListData]=\"sections\"\n                  [cdkDropListOrientation]=\"'vertical'\"\n                  (cdkDropListDropped)=\"dropSection($event)\">\n          <mat-list-item matRipple *ngFor=\"let section of sections; last as last; let i = index\" cdkDrag>\n            {{i + 1}}&nbsp;{{section}}\n            <button mat-button color=\"warn\" (click)=\"removeSection(section)\">\n              <mat-icon>delete</mat-icon>\n            </button>\n            <mat-divider [inset]=\"true\" *ngIf=\"!last\"></mat-divider>\n          </mat-list-item>\n        </mat-list>\n      </div>\n    </mat-card>\n\n  </div>\n</div>\n\n<div mat-dialog-actions>\n  <button mat-raised-button (click)=\"close()\">\n    <mat-icon>close</mat-icon>\n    Close\n  </button>\n  <button mat-raised-button color=\"primary\" (click)=\"save()\">\n    <mat-icon>save</mat-icon>\n    Save {{dialogTitle}}\n  </button>\n</div>\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/internal/operators';\nimport { DialogPatternLanguageResult } from '../../../pattern-language-management/data/DialogPatternLanguageResult.interface';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport PatternLanguage from '../../model/hal/pattern-language.model';\nimport PatternSchema from '../../model/hal/pattern-schema.model';\nimport PatternSectionSchema from '../../model/hal/pattern-section-schema.model';\nimport { ActivatedRoute } from '@angular/router';\n\n\nexport enum CreateEditComponentDialogType {\n  PATTERN_LANGUAGE, PATTERN_VIEW, DESIGN_MODEL\n}\n\n\n@Component({\n  selector: 'pp-create-edit-pattern-language',\n  templateUrl: './create-edit-pattern-language.component.html',\n  styleUrls: ['./create-edit-pattern-language.component.scss']\n})\nexport class CreateEditPatternLanguageComponent implements OnInit {\n  sectionCtrl = new FormControl();\n  sections: Array<string> = ['Icon', 'Context', 'Driving Question', 'Solution'];\n  patternLanguageForm: FormGroup;\n  iconPreviewVisible = false;\n  saveRequested = false;\n  componentDialogType;\n  dialogTitle: string;\n  isPatternLanguageDialog: boolean;\n\n  @Output() saveClicked = new EventEmitter<DialogPatternLanguageResult>();\n\n  get name(): AbstractControl {\n    return this.patternLanguageForm.get('name');\n  }\n\n  get iconUrl(): AbstractControl {\n    return this.patternLanguageForm.get('iconUrl');\n  }\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: { componentDialogType: CreateEditComponentDialogType },\n              public dialogRef: MatDialogRef<CreateEditPatternLanguageComponent>,\n              private _fb: FormBuilder, private activatedRoute: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.componentDialogType = this.data.componentDialogType;\n    this.dialogTitle = ['Pattern Language', 'Pattern View', 'Design Model'][ this.componentDialogType ];\n    this.isPatternLanguageDialog = this.componentDialogType === CreateEditComponentDialogType.PATTERN_LANGUAGE;\n\n    const urlRegex = /\\b((?:[a-z][\\w-]+:(?:\\/{1,3}|[a-z0-9%])|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}\\/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()\\[\\]{};:'\".,<>?«»“”‘’]))/i; // eslint-disable-line max-len\n    this.patternLanguageForm = this._fb.group({\n      name: ['', [Validators.required, Validators.pattern('[a-zA-Z0-9 _-]+')]],\n      iconUrl: ['', [Validators.pattern(urlRegex)]]\n    });\n\n    this.iconUrl.valueChanges.pipe(debounceTime(1000), distinctUntilChanged()).subscribe((urlValue) => {\n      this.iconPreviewVisible = urlValue && (urlValue.startsWith('https://') || urlValue.startsWith('http://'));\n    });\n  }\n\n  addSection(value: string) {\n    if ((value || '').trim()) {\n      if (this.sections.indexOf(value) < 0) {\n        this.sections.push(value.trim());\n        this.sectionCtrl.setValue(null);\n      }\n    }\n  }\n\n  dropSection(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.sections, event.previousIndex, event.currentIndex);\n  }\n\n  removeSection(section: string): void {\n    const index = this.sections.indexOf(section);\n    if (index >= 0) {\n      this.sections.splice(index, 1);\n    }\n  }\n\n  close(): void {\n    this.dialogRef.close();\n  }\n\n  save(): void {\n    this.saveRequested = true;\n    if (this.patternLanguageForm.valid) {\n\n      switch (this.componentDialogType) {\n        case CreateEditComponentDialogType.PATTERN_VIEW:\n\n          this.saveClicked.emit({\n            dialogResult: {\n              name: this.name.value\n            }\n          });\n          this.dialogRef.close();\n          break;\n\n        case CreateEditComponentDialogType.PATTERN_LANGUAGE:\n\n          const patternLanguage = new PatternLanguage();\n          patternLanguage.name = this.name.value;\n          patternLanguage.logo = this.iconUrl.value;\n          const patternSchema = new PatternSchema();\n          patternSchema.patternSectionSchemas = [];\n\n\n          for (let i = 0; i < this.sections.length; i++) {\n            const patternSectionSchema = new PatternSectionSchema();\n            patternSectionSchema.name = this.sections[ i ];\n            patternSectionSchema.label = this.sections[ i ];\n            patternSectionSchema.position = i;\n            patternSectionSchema.type = 'any';\n            patternSchema.patternSectionSchemas.push(patternSectionSchema);\n          }\n          patternLanguage.patternSchema = patternSchema;\n          this.saveClicked.emit({\n            dialogResult: patternLanguage\n          });\n          this.dialogRef.close();\n          break;\n\n        case CreateEditComponentDialogType.DESIGN_MODEL:\n\n          this.saveClicked.emit({\n            dialogResult: {\n              name: this.name.value,\n              logo: this.iconUrl.value\n            }\n          });\n          this.dialogRef.close();\n          break;\n      }\n    }\n  }\n}\n","<h1 mat-dialog-title>Add a relation to another pattern</h1>\n<div mat-dialog-content [formGroup]=\"relationForm\">\n    <mat-form-field *ngIf=\"data.firstPattern; else chooseFirstPattern\">\n        <input type=\"text\" formControlName=\"firstPattern\"\n               matInput [value]=\"data.firstPattern.name\" readonly>\n    </mat-form-field>\n    <ng-template #chooseFirstPattern>\n        <mat-form-field>\n            <mat-select formControlName=\"firstPattern\">\n                <mat-option *ngFor=\"let pattern of data.patterns\"\n                            [value]=\"pattern\">\n                    {{pattern.name}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </ng-template>\n\n    <mat-form-field style=\"width: 4em;\" [floatLabel]=\"'always'\">\n        <mat-label>Direction</mat-label>\n        <mat-select formControlName=\"direction\">\n            <mat-select-trigger>\n                <i class=\"material-icons\"\n                   [ngClass]=\"{'flip': relationForm.value?.direction?.name === directionEnum.DirectedLeft}\">{{relationForm.value\n                    ? relationForm.value.direction?.icon : ''}}</i>\n            </mat-select-trigger>\n            <mat-option *ngFor=\"let type of types\" [value]=\"type\">\n                <i class=\"material-icons\"\n                   [ngClass]=\"{'flip': type?.name === directionEnum.DirectedLeft}\">{{type?.icon}}</i>\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-form-field>\n        <input type=\"text\" matInput formControlName=\"relationType\" placeholder=\"Relationtype\"\n               [matAutocomplete]=\"auto\">\n    </mat-form-field>\n\n    <mat-autocomplete #auto=\"matAutocomplete\">\n        <mat-option *ngFor=\"let type of relationTypes\" [value]=\"type\">{{type}}</mat-option>\n    </mat-autocomplete>\n\n    <mat-form-field *ngIf=\"data.secondPattern; else chooseSecondPattern\">\n        <input type=\"text\" formControlName=\"secondPattern\"\n               matInput [value]=\"data.secondPattern.name\" readonly>\n    </mat-form-field>\n    <ng-template #chooseSecondPattern>\n        <mat-form-field>\n            <mat-select formControlName=\"secondPattern\">\n                <mat-option *ngFor=\"let pattern of data.patterns\"\n                            [value]=\"pattern\">\n                    {{pattern.name}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </ng-template>\n    <mat-form-field style=\"display: block\">\n        <textarea matInput formControlName=\"description\" placeholder=\"Provide a description\"></textarea>\n    </mat-form-field>\n</div>\n<div mat-dialog-actions>\n    <button mat-button [mat-dialog-close]=\"null\">Close</button>\n    <button mat-button [mat-dialog-close]=\"mapDialogDataToEdge(relationForm.value)\" [disabled]=\"!relationForm?.valid\">\n        Save\n    </button>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { PatternRelationDescriptorDirection } from '../../model/pattern-relation-descriptor-direction.enum';\nimport Pattern from '../../model/hal/pattern.model';\nimport { DirectedEdgeModel } from '../../model/hal/directed-edge.model';\nimport { UndirectedEdgeModel } from '../../model/hal/undirected-edge.model';\nimport { PatternContainer } from '../../model/hal/pattern-container.model';\nimport PatternLanguage from '../../model/hal/pattern-language.model';\n\n@Component({\n  selector: 'pp-create-pattern-relation',\n  templateUrl: './create-pattern-relation.component.html',\n  styleUrls: ['./create-pattern-relation.component.scss']\n})\n\n\nexport class CreatePatternRelationComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<CreatePatternRelationComponent>, @Inject(MAT_DIALOG_DATA) public data: DialogData, private fb: FormBuilder) {\n  }\n\n  directionEnum = PatternRelationDescriptorDirection;\n  patterns: Pattern[];\n  types = [{ name: PatternRelationDescriptorDirection.DirectedRight, icon: 'trending_flat' },\n    { name: PatternRelationDescriptorDirection.DirectedLeft, icon: 'trending_flat' }, {\n      name: PatternRelationDescriptorDirection.UnDirected,\n      icon: 'compare_arrows'\n    }];\n  relationForm: FormGroup;\n  relationTypes = ['isRelatedTo', 'isUsedBefore', 'isUsedAfter', 'dependsOn', 'canBeUsedWith',\n    'cannotBeUsedWith', 'consistsOf', 'uses', 'usedIn', 'isAlternativeTo', 'isVariationOf'];\n\n\n  ngOnInit() {\n    this.relationForm = this.fb.group({\n      firstPattern: ['', [Validators.required]],\n      secondPattern: ['', [Validators.required]],\n      direction: ['', [Validators.required]],\n      relationType: ['', [Validators.required]],\n      description: ['', []],\n    });\n\n    if (this.data.firstPattern) {\n      this.relationForm.get('firstPattern').setValue(this.data.firstPattern);\n    }\n    if (this.data.secondPattern) {\n      this.relationForm.get('secondPattern').setValue(this.data.secondPattern);\n    }\n  }\n\n  close(): void {\n    this.dialogRef.close();\n  }\n\n  // adds a relation created by the dialog to the local data and returns whether this was successful (or not, e.g. when simply closing the dialog)\n  mapDialogDataToEdge(dialogResult: DialogDataResult): DirectedEdgeModel | UndirectedEdgeModel {\n    if (!dialogResult || !dialogResult.secondPattern || !dialogResult.direction) {\n      return null;\n    }\n    const type = dialogResult.relationType ? dialogResult.relationType : null;\n    const description = dialogResult.description ? dialogResult.description : null;\n    switch (dialogResult.direction.name) {\n      case PatternRelationDescriptorDirection.DirectedRight:\n        return new DirectedEdgeModel(dialogResult.firstPattern, dialogResult.secondPattern, this.data.patternLanguage, description, type,\n          this.data.patternContainer);\n      case PatternRelationDescriptorDirection.DirectedLeft:\n        return new DirectedEdgeModel(dialogResult.secondPattern, dialogResult.firstPattern, this.data.patternLanguage, description, type,\n          this.data.patternContainer);\n      case PatternRelationDescriptorDirection.UnDirected:\n        return new UndirectedEdgeModel(dialogResult.secondPattern, dialogResult.firstPattern, this.data.patternLanguage, description, type,\n          this.data.patternContainer);\n    }\n    return null;\n\n  }\n\n}\n\nexport interface DialogData {\n  firstPattern?: Pattern;\n  secondPattern?: Pattern;\n  patterns: Pattern[];\n  patternLanguage: PatternLanguage;\n  patternContainer: PatternContainer;\n}\n\nexport interface PatternRelationDirection {\n  name: PatternRelationDescriptorDirection;\n  icon: string; // angular material icon name\n}\n\nexport interface DialogDataResult {\n  firstPattern: Pattern;\n  direction: PatternRelationDirection;\n  relationType?: string;\n  secondPattern: Pattern;\n  description?: string;\n}\n\n\n","<footer *ngIf=\"patternLanguage?.creativeCommonsReference\" class=\"center-content\">\n    <p><a rel=\"license\" href=\"http://creativecommons.org/licenses/by/4.0/\"><img\n            alt=\"Creative Commons Lizenzvertrag\"\n            style=\"border-width:0\"\n            src=\"https://i.creativecommons.org/l/by/4.0/88x31.png\"/></a>\n        <a rel=\"license\"\n           href=\"http://creativecommons.org/licenses/by/4.0/\"> {{patternLanguage?.creativeCommonsReference}}</a></p>\n</footer>\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pp-creative-license-footer',\n  templateUrl: './creative-license-footer.component.html',\n  styleUrls: ['./creative-license-footer.component.css']\n})\nexport class CreativeLicenseFooterComponent implements OnInit {\n\n    @Input() patternLanguage;\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n}\n","<button class=\"close\" mat-button (click)=\"close()\">X</button>\n<h1 mat-dialog-title>Delete a relation</h1>\n<div mat-dialog-content>\n    <div *ngIf=\"this.data.type == 'ingoing' || this.data.type == 'outgoing'; then directedEdgeModel else undirectedEdgeModel\"></div>\n    <ng-template #directedEdgeModel>\n        <mat-accordion style=\"padding: 3px\">\n            <mat-expansion-panel *ngFor=\"let edge of this.currentEdges\">\n                <mat-expansion-panel-header>\n                    <mat-panel-title>\n                        {{edge.edge.sourcePatternName}} {{edge.edge.type}} {{edge.edge.targetPatternName}}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"badge-container\">\n                    <b>Source Pattern:</b> {{edge.edge.sourcePatternName}}<br/>\n                    <b>Relation Type:</b> {{edge.edge.type}} <br/>\n                    <b>Target Pattern:</b> {{edge.edge.targetPatternName}}\n                    <div *ngIf=\"edge.description\"><b>Description:</b> {{edge.description}}</div>\n                    <br/>\n                </div>\n                <button class=\"delete-icon\" mat-button (click)=\"deleteEdge(edge)\">\n                    <mat-icon (click)=\"deleteEdge(edge)\" [inline]=\"true\">delete</mat-icon>\n                </button>\n            </mat-expansion-panel>\n        </mat-accordion>\n    </ng-template>\n    <ng-template #undirectedEdgeModel>\n        <mat-accordion style=\"padding: 3px;\">\n            <mat-expansion-panel *ngFor=\"let edge of this.currentEdges\">\n                <mat-expansion-panel-header>\n                    <mat-panel-title>\n                        {{edge.edge.pattern1Name}} {{edge.edge.type}} {{edge.edge.pattern2Name}}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"badge-container\">\n                    <b>Pattern 1:</b> {{edge.edge.pattern1Name}}<br/>\n                    <b>Relation Type:</b> {{edge.edge.type}} <br/>\n                    <b>Pattern 2:</b> {{edge.edge.pattern2Name}}\n                    <div *ngIf=\"edge.description\"><b>Description:</b> {{edge.description}}</div>\n                    <br/>\n                </div>\n                    <button class=\"delete-icon\" mat-button (click)=\"deleteEdge(edge)\">\n                        <mat-icon (click)=\"deleteEdge(edge)\" [inline]=\"true\">delete</mat-icon>\n                    </button>\n            </mat-expansion-panel>\n        </mat-accordion>\n    </ng-template>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { CreatePatternRelationComponent } from '../create-pattern-relation/create-pattern-relation.component';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { EdgeWithType, PatternRelationDescriptorService } from '../../service/pattern-relation-descriptor.service';\nimport { PatternViewService } from '../../service/pattern-view.service';\nimport { ToasterService } from 'angular2-toaster';\nimport { HalLink } from '../../model/hal/hal-link.interface';\n\n@Component({\n  selector: 'pp-delete-pattern-relation',\n  templateUrl: './delete-pattern-relation.component.html',\n  styleUrls: ['./delete-pattern-relation.component.scss']\n})\nexport class DeletePatternRelationComponent implements OnInit {\n\n    currentEdges: Array<EdgeWithType> = [];\n\n    constructor(public dialogRef: MatDialogRef<CreatePatternRelationComponent>,\n                @Inject(MAT_DIALOG_DATA) public data: DeleteRelationDialogData,\n                private patternRelationDescriptorService: PatternRelationDescriptorService,\n                private patternViewService: PatternViewService, private toasterService: ToasterService) {\n      this.getEdgesForPattern();\n    }\n\n    ngOnInit() {\n    }\n\n    close(): void {\n      this.dialogRef.close();\n    }\n\n    deleteEdge(edge: EdgeWithType): void {\n      console.log(edge);\n      this.patternViewService.deleteLink(edge.edge._links.self.href).subscribe(\n        (res) => {\n          this.currentEdges = this.currentEdges.filter(item => item.edge.id !== edge.edge.id);\n          this.toasterService.pop('success', 'Relation removed');\n          if (this.currentEdges.length === 0) {\n            this.dialogRef.close();\n          }\n        }\n      );\n    }\n\n    private getEdgesForPattern(): void {\n      let links = [];\n      if (!this.data.edges.length) {\n        links[0] = this.data.edges;\n      } else {\n        links = this.data.edges;\n      }\n      for (const link of links) {\n        this.patternRelationDescriptorService.getUndirectedEdgeByUrl(link.href).subscribe(\n          data => {\n            const edgeWithType: EdgeWithType = new EdgeWithType();\n            edgeWithType.edge = data;\n            edgeWithType.type = data.type;\n            this.currentEdges.push(edgeWithType);\n          }\n        );\n      }\n    }\n\n}\n\nexport interface DeleteRelationDialogData {\n    edges: HalLink[];\n    type: string;\n}\n","<p style=\"margin: 1em\"></p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pp-divider',\n  templateUrl: './divider.component.html',\n  styleUrls: ['./divider.component.scss']\n})\nexport class DividerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-sidenav-container [hasBackdrop]=\"false\" class=\"container\">\n  <mat-sidenav *ngIf=\"patternContainer\" #leftSidenav style=\"min-width: 300px;\" [disableClose]=\"true\" [opened]=\"true\" fixedInViewport=\"false\"\n               mode=\"push\">\n    <h3>Add Patterns</h3>\n    <mat-accordion>\n      <div cdkDropListGroup>\n        <mat-expansion-panel *ngFor=\"let patternLang of patternLanguages\" (afterExpand)=\"patternListExpanded(patternLang)\">\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              {{patternLang.name}}\n            </mat-panel-title>\n          </mat-expansion-panel-header>\n          <mat-panel-description>\n            <div *ngIf=\"allPatternsLoading; else dragAndDropContent\">\n              <mat-spinner class=\"drag-and-drop-spinner\"></mat-spinner>\n            </div>\n            <ng-template #dragAndDropContent>\n              <div cdkDropList\n                   [cdkDropListData]=\"patternLang.patterns\"\n                   class=\"pattern-list\"\n                   cdkDropListSortingDisabled\n                   (cdkDropListDropped)=\"patternDropped($event)\">\n                <div class=\"pattern-box\" *ngFor=\"let pattern of patternLang.patterns\" cdkDrag>\n                  {{pattern.name}}\n                  <mat-icon>drag_handle</mat-icon>\n                </div>\n              </div>\n            </ng-template>\n          </mat-panel-description>\n        </mat-expansion-panel>\n      </div>\n    </mat-accordion>\n  </mat-sidenav>\n\n  <mat-sidenav [opened]=\"patternClicked\" position=\"end\" fixedInViewport=\"true\" mode=\"over\">\n    <h4 style=\"margin: 1em\">Relations of {{currentPattern?.name}}</h4>\n    <mat-accordion>\n      <mat-expansion-panel *ngFor=\"let relation of currentEdges\">\n        <mat-expansion-panel-header>\n          <mat-panel-title style=\"align-self: center\">\n            {{relation?.edge.type}}\n          </mat-panel-title>\n          <mat-panel-description class=\"horiz-centered\">\n            <div [ngSwitch]=\"relation.type\">\n\n              <div *ngSwitchCase=\"'undirectedEdges'\" class=\"horiz-centered\">\n                {{ relation?.edge.sourcePatternName}}\n                <i class=\"material-icons flip\">compare_arrows</i>\n                {{ relation?.edge.pattern1Id === this.currentPattern.id ? relation.edge.pattern1Name :\n                relation.edge.pattern2Name}}\n              </div>\n\n              <div *ngSwitchCase=\"'outgoingDirectedEdges'\" class=\"horiz-centered\">\n                <i class=\"material-icons\">trending_flat</i>\n                {{ relation?.edge.sourcePatternId === this.currentPattern.id ?\n                relation?.edge.targetPatternName : relation?.edge.sourcePatternName}}\n\n              </div>\n              <div *ngSwitchCase=\"'ingoingDirectedEdges'\" class=\"horiz-centered\">\n                <i class=\"material-icons flip\">trending_flat</i>\n                {{ relation?.edge.sourcePatternId === this.currentPattern.id ?\n                relation?.edge.targetPatternName : relation?.edge.sourcePatternName}}\n              </div>\n\n            </div>\n          </mat-panel-description>\n        </mat-expansion-panel-header>\n        <i>{{relation?.edge.description ? ': ' + relation?.edge.description : ''}}</i>\n      </mat-expansion-panel>\n    </mat-accordion>\n\n  </mat-sidenav>\n  <mat-progress-spinner *ngIf=\"isLoading\"></mat-progress-spinner>\n  <mat-sidenav-content>\n    <network-graph #graphWrapper\n                   (onAddedEdge)=\"edgeAdded($event)\"\n                   (onClickedBackground)=\"backgroundClicked()\"\n                   (onClickedNode)=\"nodeClicked($event)\"\n                   (onNodePositionChange)=\"saveGraph()\"\n                   [ppGraphEventEmmiter]\n                   classes=\" highlighted-edge low-opacity-node low-opacity-edge\"\n                   mode=\"layout\"\n                   style=\"width: 100%; height: 100%\"\n                   zoom=\"both\">\n      <style slot=\"style\">\n        svg {\n          width: 1000px;\n          height: 700px;\n        }\n      </style>\n      <svg #svg slot=\"graph\" [class.left-sidenav-open]=\"!!patternContainer\">\n        <!-- TODO: Move style to scss file -->\n        <style>\n          .node {\n            fill: aliceblue;\n            opacity: 0.95;\n          }\n\n          svg {\n            background-color: white;\n          }\n\n          .link-handle {\n            display: none;\n\n            fill: black;\n            opacity: 0.1;\n            transition: opacity 0.25s ease-out;\n          }\n\n          .node.hovered {\n            fill: rgb(63, 81, 181);\n            opacity: 0.9;\n            color: white;\n          }\n\n          .edge-group .link-handle {\n            display: initial;\n          }\n\n          .low-opacity-edge {\n            stroke: grey;\n          }\n\n          .link-handle:hover {\n            opacity: 0.7;\n          }\n\n          .hovered .link-handle {\n            display: initial;\n          }\n\n          .text {\n            fill: black;\n            font-size: 6pt;\n            text-overflow: ellipsis;\n            word-break: break-word\n          }\n\n          .cursive {\n            font-style: italic;\n          }\n\n          .low-opacity-node {\n            opacity: 0.1;\n          }\n\n          .low-opacity-edge {\n            opacity: 0.1;\n          }\n        </style>\n        <defs>\n\n          <g data-template-type=\"node\" id=\"default\">\n\n            <rect data-click=\"nodeclick\" data-link-handles=\"edges\" height=\"50\" rx=\"5\" ry=\"5\"\n                  style=\"stroke:black;stroke-width:1;\"\n                  width=\"170\"\n                  x=\"-60\" y=\"-25\">\n            </rect>\n            <image width=\"40\" x=\"-55\" y=\"-20\" data-click=\"iconUrl\" data-href=\"iconUrl\"></image>\n            <image data-click=\"info\" data-content=\"patternLanguageId\" width=\"10\" x=\"95\"\n                   xlink:href=\"assets/Info_Simple_bw.svg\"\n                   y=\"-20\"/>\n            <text class=\"text\" data-click=\"title\" data-content=\"title\" dominant-baseline=\"middle\"\n                  height=\"50\" text-anchor=\"middle\"\n                  width=\"120\"\n                  x=\"45\"\n                  y=\"0\">\n            </text>\n            <text class=\"text cursive\" data-click=\"patternLanguageName\" *ngIf=\"showPatternLanguageName\"\n                  data-content=\"patternLanguageName\"\n                  dominant-baseline=\"middle\"\n                  height=\"50\" text-anchor=\"middle\"\n                  width=\"120\"\n                  x=\"45\"\n                  y=\"10\">\n            </text>\n          </g>\n\n          <g data-line-attachement-point=\"-9 0\" data-template-type=\"marker\" id=\"arrow\">\n            <path d=\"M -9 -4 L 0 0 L -9 4 z\"/>\n          </g>\n        </defs>\n      </svg>\n    </network-graph>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { D3Service } from '../../../graph/service/d3.service';\nimport { NetworkLink } from '../../model/network-link.interface';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CreatePatternRelationComponent } from '../create-pattern-relation/create-pattern-relation.component';\nimport { PatternContainer } from '../../model/hal/pattern-container.model';\nimport PatternLanguage from '../../model/hal/pattern-language.model';\nimport { EdgeWithType, PatternRelationDescriptorService } from '../../service/pattern-relation-descriptor.service';\nimport { ToasterService } from 'angular2-toaster';\nimport GraphEditor from '@ustutt/grapheditor-webcomponent/lib/grapheditor';\nimport { DraggedEdge, edgeId } from '@ustutt/grapheditor-webcomponent/lib/edge';\nimport Pattern from '../../model/hal/pattern.model';\nimport { GraphInputData } from '../../model/graph-input-data.interface';\nimport { PatternService } from '../../service/pattern.service';\nimport { Router } from '@angular/router';\nimport { switchMap, tap } from 'rxjs/operators';\nimport { PatternResponse } from '../../model/hal/pattern-response.interface';\nimport { EMPTY, Observable } from 'rxjs';\nimport { CdkDragDrop } from '@angular/cdk/drag-drop';\nimport { GraphDataService } from '../../service/graph-data.service';\nimport { globals } from '../../../globals';\n\n\nexport class GraphNode {\n  id: string;\n  title: string;\n  type: string;\n  x: number;\n  y: number;\n  patternLanguageId: string;\n}\n\n@Component({\n  selector: 'pp-graph-display',\n  templateUrl: './graph-display.component.html',\n  styleUrls: ['./graph-display.component.scss']\n})\nexport class GraphDisplayComponent implements AfterContentInit, OnChanges {\n\n  @ViewChild('graphWrapper', { static: true }) graph: ElementRef;\n  graphNativeElement: GraphEditor;\n  @ViewChild('svg') svg: ElementRef;\n  patternGraphData: any;\n  isLoading = true;\n  patternClicked = false;\n  allPatternsLoading = true;\n  @Input() data: GraphInputData;\n  @Input() showPatternLanguageName: boolean;\n  @Output() addedEdge = new EventEmitter<any>();\n  currentPattern: Pattern;\n  currentEdges: Array<EdgeWithType>;\n  patternLanguages: Array<PatternLanguage>;\n  patternContainer: PatternContainer;\n  private edges: Array<NetworkLink>;\n  private nodes: Array<GraphNode>;\n  private copyOfLinks: Array<NetworkLink>;\n  private patterns: Array<Pattern>;\n  private patternLanguage: PatternLanguage;\n  private currentEdge: any;\n  private highlightedNodeIds: Array<string> = [];\n  private clickedNodeId: string = null;\n  private highlightedEdgeIds: Array<string> = [];\n\n  constructor(private cdr: ChangeDetectorRef,\n              private d3Service: D3Service,\n              private matDialog: MatDialog,\n              private patternRelationDescriptionService: PatternRelationDescriptorService,\n              private toastService: ToasterService,\n              private patternService: PatternService,\n              private graphDataService: GraphDataService,\n              private router: Router) {\n  }\n\n  static mapPatternLinksToEdges(links: any[]): NetworkLink[] {\n    const edges: any = [];\n    if (!links.length) {\n      return [];\n    }\n    for (let i = 0; i < links.length; i++) {\n      const currentLink = links[ i ];\n      if (currentLink.sourcePatternId && currentLink.targetPatternId) {\n        edges.push({\n          source: currentLink.sourcePatternId, target: currentLink.targetPatternId,\n          id: currentLink.id,\n          markerEnd: { template: 'arrow', scale: 0.5, relativeRotation: 0 },\n        });\n      } else { // undirected link\n        edges.push(<NetworkLink>{\n          source: currentLink.pattern1Id, target: currentLink.pattern2Id,\n          id: currentLink.id,\n          markerEnd: { template: 'arrow', scale: 0.5, relativeRotation: 0 },\n          markerStart: { template: 'arrow', scale: 0.5, relativeRotation: 0 }\n        });\n      }\n    }\n    return edges;\n  }\n\n  static mapPatternsToNodes(patterns: Array<Pattern>, offsetIndex: number = 0): Array<GraphNode> {\n    const nodes: Array<any> = [];\n    if (patterns) {\n      for (let i = 0; i < patterns.length; i++) {\n        const node = {\n          id: patterns[ i ].id,\n          iconUrl: patterns[ i ].iconUrl,\n          title: patterns[ i ].name,\n          type: 'default',\n          x: 5 * offsetIndex,\n          y: 5 * offsetIndex,\n          patternLanguageId: patterns[ i ].patternLanguageId,\n          patternLanguageName: patterns[ i ].patternLanguageName\n        };\n        nodes.push(node);\n      }\n    }\n    return nodes;\n  }\n\n  ngAfterContentInit() {\n    this.graphNativeElement = this.graph.nativeElement;\n    if (this.graphNativeElement == null) {\n      return;\n    }\n\n    this.graphNativeElement.setNodeClass = (className, node) => {\n      if (this.highlightedNodeIds.length > 0) {\n        if (className === 'low-opacity-node') {\n          return !this.highlightedNodeIds.includes(<string>node.id);\n        }\n      }\n      return false;\n    };\n\n    this.graphNativeElement.setEdgeClass = (className, edge, sourceNode, targetNode) => {\n      if (targetNode == null) {\n        return false;\n      }\n      if (className === 'low-opacity-edge' && this.highlightedNodeIds.length > 0) {\n        const id = edge.id ? edge.id : edgeId(edge);\n        return !this.highlightedEdgeIds.includes(<string>id);\n      }\n      return false;\n    };\n    this.getGraph();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.data != null) {\n      this.isLoading = true;\n      this.initData();\n      this.getGraph();\n    }\n  }\n\n  edgeAdded(event) {\n    this.currentEdge = event.detail.edge;\n    const dialogRef = this.matDialog.open(CreatePatternRelationComponent, {\n      data: {\n        firstPattern: this.patterns.find((pat) => event.detail.edge.source === pat.id),\n        secondPattern: this.patterns.find((pat) => event.detail.edge.target === pat.id),\n        patterns: this.patterns,\n        patternLanguage: this.patternLanguage,\n        patternContainer: this.patternContainer\n      }\n    });\n\n    dialogRef.afterClosed().subscribe((edge) => {\n      if (edge) { // inform parent component that new edge was added\n        this.addedEdge.emit(edge);\n      } else {\n        this.graphNativeElement.removeEdge(this.currentEdge);\n        this.triggerRerendering();\n      }\n    });\n  }\n\n  patternDropped(event: CdkDragDrop<any[]>) {\n    if (event.isPointerOverContainer) {\n      return;\n    }\n    const patternDropped: Pattern = event.container.data[ event.previousIndex ];\n    this.addPatternToGraph(patternDropped);\n  }\n\n  addPatternToGraph(pattern: Pattern) {\n    this.graphDataService.addPatterns(this.patternContainer._links.patterns.href, [pattern]).pipe(\n      switchMap(result => result ? this.getCurrentPatternViewAndPatterns() : EMPTY))\n      .subscribe(\n        (res) => {\n          if (res) {\n            this.reformatGraph();\n            this.toastService.pop('success', 'Pattern added');\n          }\n        }\n      );\n  }\n\n  nodeClicked(event) {\n    const node = event[ 'detail' ][ 'node' ];\n    if (event[ 'detail' ][ 'key' ] === 'info') {\n      this.router.navigate(['/' + globals.pathConstants.patternLanguages + '/' + (<GraphNode>node).patternLanguageId + '/' + node.id]);\n    }\n    this.showInfoForClickedNode(node);\n  }\n\n  saveGraph() {\n    if (!this.nodes) {\n      console.error('No nodes to save');\n      return;\n    }\n\n    this.graphDataService.saveGraph(this.patternLanguage ? this.patternLanguage : this.patternContainer, this.graphNativeElement.nodeList)\n      .subscribe(() => console.info('saved pattern ' + (this.patternLanguage ? 'language' : 'container') + ' graph layout'));\n  }\n\n  reformatGraph() {\n    this.nodes = GraphDisplayComponent.mapPatternsToNodes(this.patterns);\n    this.startSimulation();\n  }\n\n  backgroundClicked() {\n    this.highlightedNodeIds = [];\n    this.highlightedEdgeIds = [];\n    this.clickedNodeId = null;\n    this.graphNativeElement.completeRender();\n    this.patternClicked = false;\n  }\n\n  public updateSideMenu() {\n    if (this.clickedNodeId) {\n      this.showInfoForClickedNode(this.graphNativeElement.getNode(this.clickedNodeId));\n    }\n  }\n\n  triggerRerendering() {\n    this.graphNativeElement.completeRender();\n  }\n\n  patternListExpanded(patternLang: PatternLanguage) {\n    if (patternLang.patterns) {\n      return;\n    }\n    this.allPatternsLoading = true;\n    this.patternService.getPatternsByUrl(patternLang._links.patterns.href).subscribe(\n      data => {\n        patternLang.patterns = data;\n        this.allPatternsLoading = false;\n      }\n    );\n  }\n\n  private getCurrentPatternViewAndPatterns(): Observable<Pattern[]> {\n    return this.graphDataService.getPatternContainer(this.patternContainer._links.self.href).pipe(\n      tap(patternContainerResponse => {\n        this.patternContainer = patternContainerResponse;\n      }),\n      switchMap((patternContainerResponse: PatternContainer) => this.patternService.getPatternsByUrl(patternContainerResponse._links.patterns.href)),\n      tap(patterns => {\n        this.patterns = patterns;\n      }));\n  }\n\n  private initData() {\n    this.patternGraphData = this.data;\n    if (this.patternGraphData) {\n      this.edges = GraphDisplayComponent.mapPatternLinksToEdges(this.patternGraphData.edges);\n      this.copyOfLinks = GraphDisplayComponent.mapPatternLinksToEdges(this.patternGraphData.edges);\n      this.patterns = this.patternGraphData.patterns;\n      this.patternLanguage = this.patternGraphData.patternLanguage;\n      this.patternContainer = this.patternGraphData.patternContainer;\n      this.nodes = GraphDisplayComponent.mapPatternsToNodes(this.patterns);\n      if (this.patternContainer) {\n        this.patternLanguages = this.patternGraphData.patternLanguages;\n        this.allPatternsLoading = false;\n      }\n    }\n  }\n\n  private startSimulation() {\n    const networkGraph = this.d3Service.getNetworkGraph(this.nodes, this.edges, {\n      width: 1000,\n      height: 500\n    });\n\n    // allow to create edges to any other node in the graph (this enables multiple edges between nodes)\n    this.graphNativeElement.onCreateDraggedEdge = (edge: DraggedEdge) => {\n      this.graphNativeElement.nodeList.forEach((node) => edge.validTargets.add(<string>node.id));\n      return edge;\n    };\n\n    // subscribe to the end of the network graph force-layout simulation:\n    networkGraph.ticker.subscribe(() => {\n      console.log('started force simulation');\n      this.graphNativeElement.setNodes(networkGraph.nodes, false);\n      this.nodes = networkGraph.nodes;\n      this.initGraphEdges();\n\n      this.isLoading = false;\n      this.cdr.detectChanges();\n      this.saveGraph();\n    });\n  }\n\n  private getEdgesForPattern(): void {\n    this.patternService.getPatternByUrl(this.currentPattern._links.self.href).pipe(\n      switchMap((pattern: PatternResponse) => {\n        return this.patternRelationDescriptionService.getEdgesForPattern(pattern);\n      }))\n      .subscribe(edges => {\n        this.currentEdges = edges;\n        this.cdr.detectChanges();\n      });\n  }\n\n  private getGraph() {\n    this.initData();\n    if (!this.patterns || this.patterns.length === 0) {\n      return;\n    }\n\n    this.graphDataService.getGraph(this.patternContainer)\n      .subscribe((res: { graph: Array<GraphNode> }) => {\n        this.prepareGraph(res.graph, this.patternContainer);\n      });\n  }\n\n  private initGraphEdges() {\n    // we need to use a hard-copy of the links, because get changed (by d3?) and the webcomponent can't handle them anymore\n    if (this.copyOfLinks.length > 0) {\n      this.graphNativeElement.setEdges(this.copyOfLinks, false);\n    }\n    this.triggerRerendering();\n    this.graphNativeElement.zoomToBoundingBox(true);\n  }\n\n  private addNewPatternNodeToGraph(pat: Pattern, index: number) {\n    this.graphNativeElement.addNode(GraphDisplayComponent.mapPatternsToNodes([pat], index)[ 0 ]);\n  }\n\n  private showInfoForClickedNode(node): void {\n    this.clickedNodeId = node.id;\n    const outgoingLinks = Array.from(this.graph.nativeElement.getEdgesByTarget(node.id));\n    const ingoingLinks = Array.from(this.graph.nativeElement.getEdgesBySource(node.id));\n\n    this.highlightedEdgeIds = [].concat(outgoingLinks).concat(ingoingLinks).map((edge) => edge.id ? edge.id : edgeId(edge));\n    const outgoingNodeIds: string[] = outgoingLinks.map(it => it[ 'source' ]);\n    const ingoingNodeIds: string[] = ingoingLinks.map(it => it[ 'target' ]);\n\n    this.highlightedNodeIds = [];\n    this.highlightedNodeIds = outgoingNodeIds.concat(ingoingNodeIds);\n    this.highlightedNodeIds.push(node.id);\n    this.currentPattern = this.patterns.find(pat => pat.id === node.id);\n    this.getEdgesForPattern();\n    this.patternClicked = true;\n    this.triggerRerendering();\n  }\n\n  private initGraphData(graphData: Array<GraphNode>) {\n    if (!this.graphNativeElement) {\n      return;\n    }\n    this.graphNativeElement.setNodes(graphData);\n    if (this.patterns.length > graphData.length) { // add newly added patterns that are not in the pattern graph yet\n      const newPatterns = this.patterns.filter(pat => !this.graphNativeElement.nodeList.map(node => <string>node.id).includes(pat.id));\n      newPatterns.forEach((pat, index) => this.addNewPatternNodeToGraph(pat, index));\n    }\n    this.initGraphEdges();\n    this.isLoading = false;\n  }\n\n  private prepareGraph(graph: Array<GraphNode>, patternGraphData: PatternContainer | PatternLanguage) {\n    if ((!graph && Array.isArray(this.patternGraphData.patterns)) ||\n      Array.isArray(this.patternGraphData.patterns) && (this.patternGraphData.patterns.length > graph.length)) {\n      this.startSimulation();\n      return;\n    }\n    this.initGraphData(graph);\n  }\n}\n","import { EventEmitter } from '@angular/core';\n\nexport class DataRenderingComponent {\n  data: string;\n\n  title: string;\n\n  changeContent: EventEmitter<DataChange>;\n  isEditingEnabled = false;\n\n  constructor() {\n  }\n\n\n}\n\nexport class DataChange {\n  previousValue: string;\n  currentValue: string;\n}\n","<mat-card class=\"section-card\">\n    <mat-card-header>\n        <mat-card-subtitle><b>{{title}}</b></mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n        <div style=\"display: flex; align-items: center;\" (mouseenter)=\"showActionButtons = true\"\n             (mouseleave)=\"showActionButtons = false\">\n\n            <div style=\"word-break: break-word\" #markdownContent></div>\n\n\n\n          <button *ngIf=\"showActionButtons && isEditingEnabled\" mat-stroked-button\n                    style=\"margin-left: 5px\" color=\"primary\"\n                    (click)=\"openEditor()\" matTooltip=\"Edit\"><i class=\"material-icons\">mode_edit</i></button>\n        </div>\n    </mat-card-content>\n</mat-card>\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  ViewChild\n} from '@angular/core';\nimport { DataChange, DataRenderingComponent } from '../interfaces/DataRenderingComponent.interface';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogData, MdEditorComponent } from '../../md-editor/md-editor.component';\nimport * as MarkdownIt from 'markdown-it';\nimport * as markdownitKatex from 'markdown-it-katex';\nimport { ImageService } from '../../../service/image.service';\nimport * as d3 from 'd3';\n\n\n@Component({\n  selector: 'pp-markdown-pattern-section-content',\n  templateUrl: './markdown-pattern-section-content.component.html',\n  styleUrls: ['./markdown-pattern-section-content.component.scss']\n})\nexport class MarkdownPatternSectionContentComponent extends DataRenderingComponent implements AfterViewInit {\n\n  data: string;\n  renderedData: string;\n  title = '';\n  mouseDown = false;\n  last: MouseEvent;\n\n\n  showActionButtons = false;\n  @ViewChild('markdownContent') markdownDiv: ElementRef;\n  @Input() content: string;\n  private markdown: MarkdownIt;\n\n  constructor(private dialog: MatDialog,\n              private cdr: ChangeDetectorRef,\n              private imageService: ImageService\n  ) {\n    super();\n    this.changeContent = new EventEmitter<DataChange>();\n    this.imageService = imageService;\n  }\n\n  ngAfterViewInit() {\n    this.markdown = new MarkdownIt();\n    this.markdown.use(markdownitKatex);\n    this.changeText(this.renderedData);\n  }\n\n  changeText(value: string): void {\n    this.markdownDiv.nativeElement.innerHTML = '';\n    this.renderedData = value;\n    this.renderSVGTags(value);\n    this.cdr.detectChanges();\n  }\n\n  renderSVGTags(data: string): void {\n    let editData =  data;\n    const svgIndexes: number[] = this.getNextOccurance(editData, '<SVG>', '</SVG>');\n    if (svgIndexes[0] !== -1 && svgIndexes[1] !== -1) {\n      // render elements before svg imgage link\n      this.markdownDiv.nativeElement.innerHTML += this.markdown.render(editData.substring(0, svgIndexes[0] - 1));\n      // get id for img on database\n      const id = editData.substring(svgIndexes[0] + 5, svgIndexes[1]);\n      // get image and add raw svg text to html\n      this.imageService.getImageById(id)\n        .subscribe(res => {\n          this.markdownDiv.nativeElement.innerHTML += res;\n          // cut off parts that were added to html and recursive call function to render the rest.\n          editData = editData.slice(svgIndexes[1] + 6);\n          this.renderSVGTags(editData);\n        });\n    } else {\n      // if no svg tag remaining - render remaining elements\n      this.markdownDiv.nativeElement.innerHTML += this.markdown.render(editData);\n      // this.getSVG();\n    }\n\n  }\n\n  openEditor(): void {\n    const dialogRef = this.dialog.open(MdEditorComponent,\n      { data: { content: this.data, field: this.title } });\n    dialogRef.afterClosed().subscribe(async (result: DialogData) => {\n      const previousValue = this.data;\n\n      if (result) {\n        this.data = result.content;\n        this.changeText(this.renderedData);\n      }\n      this.changeContent.emit({ previousValue: previousValue, currentValue: result.content });\n    });\n  }\n\n  getNextOccurance(content: string, begin: string, end: string): number[] {\n    return [content.indexOf(begin, 0), content.indexOf(end, 0)];\n  }\n\n\n}\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[ppPatternProperty]'\n})\nexport class PatternPropertyDirective {\n\n  constructor(public viewContainerRef: ViewContainerRef) { }\n\n}\n","<div style=\"display: flex; justify-content: space-between; align-items: baseline\">\n  <h1 mat-dialog-title>Edit '{{data.label}}'</h1>\n  <button mat-flat-button (click)=\"close()\" tabindex=\"-1\">\n    <i class=\"material-icons\">close</i>\n  </button>\n</div>\n<div mat-dialog-content>\n  <td-text-editor #mdEditor [value]=\"data.content\"></td-text-editor>\n</div>\n<div mat-dialog-actions>\n  <button mat-raised-button color=\"warn\"\n          (click)=\"revert()\" matTooltip=\"Revert Changes\">\n    <i class=\"material-icons\">restore</i> Revert\n  </button>\n  <button mat-raised-button color=\"primary\" (click)=\"saveChanges()\"><i\n    class=\"material-icons\">save</i> Save\n  </button>\n</div>\n\n","import { Component, Inject, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { TdTextEditorComponent } from '@covalent/text-editor';\n\nexport class DialogData {\n    field: string;\n    label?: string;\n    content: string;\n}\n\n@Component({\n  selector: 'pp-md-editor',\n  templateUrl: './md-editor.component.html',\n  styleUrls: ['./md-editor.component.scss']\n})\nexport class MdEditorComponent {\n\n    @ViewChild('mdEditor') private _textEditor: TdTextEditorComponent;\n    private intialContent: string;\n\n    constructor(public dialogRef: MatDialogRef<MdEditorComponent>,\n                @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n      if (!data.label) {\n        data.label = data.field;\n      }\n      this.intialContent = data.content;\n      // We revert changes and close modal at click on backdrop\n      this.dialogRef.backdropClick().subscribe(() => {\n        this.dialogRef.close({ field: this.data.field, content: this.intialContent });\n      });\n      // We revert changes and close modal at hitting ESC\n      this.dialogRef.keydownEvents().subscribe(event => {\n        if (event.code === 'Escape') {\n          this.dialogRef.close({ field: this.data.field, content: this.intialContent });\n        }\n      });\n    }\n\n    close(): void {\n      this.dialogRef.close({ field: this.data.field, content: this.intialContent });\n    }\n\n    saveChanges(): void {\n      this.dialogRef.close({ field: this.data.field, content: this._textEditor.value });\n    }\n\n    revert(): void {\n      this._textEditor.value = this.intialContent;\n    }\n\n}\n","<button mat-raised-button color=\"primary\" (click)=\"navigateBack()\"><i\n        class=\"material-icons\">keyboard_backspace</i></button>\n","import { Component, NgZone, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'pp-navigate-back',\n  templateUrl: './navigate-back.component.html',\n  styleUrls: ['./navigate-back.component.scss']\n})\nexport class NavigateBackComponent implements OnInit {\n\n  constructor( private zone: NgZone, private activatedRoute: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  navigateBack(): void {\n    this.zone.run(() => {\n      this.router.navigate(['..'], { relativeTo: this.activatedRoute });\n    });\n  }\n\n}\n","The page you are looking for is not available!\nlol\n<!--\n  ~ Copyright (c) 2018 University of Stuttgart.\n  ~\n  ~ See the NOTICE file(s) distributed with this work for additional\n  ~ information regarding copyright ownership.\n  ~\n  ~ This program and the accompanying materials are made available under the\n  ~ terms of the Eclipse Public License 2.0 which is available at\n  ~ http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n  ~ which is available at https://www.apache.org/licenses/LICENSE-2.0.\n  ~\n  ~ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n  -->\n\n\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pp-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div  fxLayout=\"row\" fxLayoutAlign=\"center center\"><span>Processing Authorization... </span><mat-progress-spinner mode=\"indeterminate\" ></mat-progress-spinner></div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { switchMap } from 'rxjs/internal/operators';\n\n@Component({\n  selector: 'pp-process-oauth-callback',\n  templateUrl: './process-oauth-callback.component.html',\n  styleUrls: ['./process-oauth-callback.component.scss']\n})\nexport class ProcessOauthCallbackComponent implements OnInit {\n\n  constructor(private _httpClient: HttpClient, private _route: ActivatedRoute, private _cookieService: CookieService, private _router: Router) {\n    this._route.params.subscribe(params => console.log(params));\n\n  }\n\n  ngOnInit() {\n    this._route.queryParams.pipe(\n      switchMap((params) => {\n        return this._httpClient.get(\n          'https://eqjjnlkv6a.execute-api.eu-central-1.amazonaws.com/default/authenticate/' + params[ 'code' ],\n          { responseType: 'text' }\n        );\n      })).subscribe(\n      (res) => {\n        const response = res.replace('\"', '');\n        // github sends the access_token in url param style (access_token=...&...), so let's use this info to decode the token:\n        const urlResponse = new URLSearchParams(response);\n        if (urlResponse.get('access_token')) {\n          this._cookieService.set('patternpedia_github_token', urlResponse.get('access_token'));\n        }\n\n        this._router.navigate(['..'], { relativeTo: this._route });\n      });\n  }\n\n}\n","<mat-button-toggle-group #group=\"matButtonToggleGroup\" (change)=\"emitValueChange(group.value)\"\n                         [value]=\"graphVisible\"\n                         appearance=\"legacy\"\n                         style=\"font-size: small; height: 35px; align-items: center;\" class=\"action-button-with-margin\">\n    <mat-button-toggle [checked]=\"true\" [value]=\"false\" aria-label=\"Text align center\" mat-raised-button>\n        Cards\n    </mat-button-toggle>\n    <mat-button-toggle [value]=\"true\" aria-label=\"Text align left\" mat-raised-button>\n        Graph\n    </mat-button-toggle>\n</mat-button-toggle-group>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'pp-toggle-renderer',\n  templateUrl: './toggle-renderer.component.html',\n  styleUrls: ['./toggle-renderer.component.css']\n})\nexport class ToggleRendererComponent implements OnInit {\n\n    @Output() toggledRenderer = new EventEmitter<boolean>();\n    @Input() graphVisible: boolean;\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    emitValueChange(value: any) {\n      this.toggledRenderer.emit(value);\n    }\n}\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DefaultPlRendererComponent } from './default-pl-renderer/default-pl-renderer.component';\nimport { DefaultPatternRendererComponent } from './default-pattern-renderer/default-pattern-renderer.component';\nimport { ComponentRegistryService } from './service/component-registry.service';\nimport { PrettyJsonModule } from 'angular2-prettyjson';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { TextFieldModule } from '@angular/cdk/text-field';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MdEditorComponent } from './component/md-editor/md-editor.component';\nimport { CovalentTextEditorModule } from '@covalent/text-editor';\nimport { EmitEventOnKeyupDirective } from './directives/emit-event-on-keyup.directive';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { NavigateBackComponent } from './component/navigate-back/navigate-back.component';\nimport { PatternPropertyDirective } from './component/markdown-content-container/pattern-property.directive';\nimport { DividerComponent } from './component/divider/divider.component';\nimport { NgxMdModule } from 'ngx-md';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CreatePatternRelationComponent } from './component/create-pattern-relation/create-pattern-relation.component';\nimport { MarkdownPatternSectionContentComponent } from './component/markdown-content-container/markdown-pattern-sectioncontent/markdown-pattern-section-content.component'; // eslint-disable-line max-len\nimport { PatternLanguageService } from './service/pattern-language.service';\nimport { PatternService } from './service/pattern.service';\nimport { GraphDisplayComponent } from './component/graph-display/graph-display.component';\nimport { CardRendererComponent } from './component/cardrenderer/card-renderer.component';\nimport { PatternViewService } from './service/pattern-view.service';\nimport { CreateEditPatternLanguageComponent } from './component/create-edit-pattern-language/create-edit-pattern-language.component';\nimport { ActionButtonBarComponent } from './component/action-button-bar/action-button-bar.component';\nimport { EmitEventOnAddedEdgeDirective } from './directives/emit-event-on-added-edge.directive';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { RouterModule } from '@angular/router';\nimport { ToggleRendererComponent } from './component/toggle-renderer/toggle-renderer.component';\nimport { DeletePatternRelationComponent } from './component/delete-pattern-relation/delete-pattern-relation.component';\nimport { CreativeLicenseFooterComponent } from './component/creative-license-footer/creative-license-footer.component';\nimport { RatingComponent } from './component/rating/rating.component';\nimport { CommentListComponent } from './component/comment-list/comment-list.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { UserService } from './user-management/_services/user.service';\nimport { UserStore } from './user-management/_store/user.store';\nimport { IssueManagementService } from './issue-management/_services/issue-management.service';\nimport { IssueManagementStore } from './issue-management/_store/issue-management-store';\nimport { CandidateManagementService } from './candidate-management/_services/candidate-management.service';\nimport { CandidateManagementStore } from './candidate-management';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DragDropModule,\n    PrettyJsonModule,\n    MatButtonModule,\n    TextFieldModule,\n    CovalentTextEditorModule,\n    MatCardModule,\n    FlexLayoutModule,\n    MatProgressSpinnerModule,\n    MatListModule,\n    MatFormFieldModule,\n    MatDatepickerModule, MatInputModule,\n    ReactiveFormsModule,\n    MatTooltipModule,\n    MatSelectModule,\n    MatDialogModule, MatGridListModule, MatSidenavModule,\n    MatAutocompleteModule,\n    MatIconModule, MatToolbarModule,\n    MatBadgeModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatTreeModule,\n    NgxMdModule.forRoot(),\n    MatNativeDateModule,\n    RouterModule,\n    MatSortModule,\n    FormsModule,\n  ],\n  exports: [\n    CovalentTextEditorModule,\n    EmitEventOnKeyupDirective,\n    EmitEventOnAddedEdgeDirective,\n    MatProgressSpinnerModule,\n    NavigateBackComponent,\n    CardRendererComponent,\n    ActionButtonBarComponent,\n    RatingComponent,\n    CommentListComponent,\n    ToggleRendererComponent,\n    GraphDisplayComponent\n  ],\n  providers: [\n    PatternLanguageService,\n    PatternService,\n    PatternViewService,\n    // USER\n    UserService,\n    UserStore,\n    // ISSUE\n    IssueManagementService,\n    IssueManagementStore,\n    // CANDIDATE\n    CandidateManagementService,\n    CandidateManagementStore\n  ],\n  declarations: [\n    DefaultPlRendererComponent,\n    DefaultPatternRendererComponent,\n    MdEditorComponent,\n    EmitEventOnKeyupDirective,\n    EmitEventOnAddedEdgeDirective,\n    NavigateBackComponent,\n    PatternPropertyDirective,\n    DividerComponent,\n    CreatePatternRelationComponent,\n    MarkdownPatternSectionContentComponent,\n    GraphDisplayComponent,\n    CardRendererComponent,\n    CreateEditPatternLanguageComponent,\n    ActionButtonBarComponent,\n    RatingComponent,\n    CommentListComponent,\n    ToggleRendererComponent,\n    DeletePatternRelationComponent,\n    CreativeLicenseFooterComponent\n  ],\n  entryComponents: [\n    DefaultPlRendererComponent,\n    DefaultPatternRendererComponent,\n    MdEditorComponent,\n    DividerComponent,\n    CreatePatternRelationComponent,\n    DeletePatternRelationComponent,\n    MarkdownPatternSectionContentComponent,\n    CardRendererComponent,\n    GraphDisplayComponent,\n    CreateEditPatternLanguageComponent\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class CoreModule {\n  constructor(private cr: ComponentRegistryService) {\n    this.cr.registerComponent('default', { plcomponent: DefaultPlRendererComponent, pcomponent: DefaultPatternRendererComponent });\n  }\n}\n","<mat-progress-spinner *ngIf=\"isLoading\" mode=\"indeterminate\"></mat-progress-spinner>\n<mat-card class=\"pattern-card mat-elevation-z5\">\n  <mat-card-header>\n    <pp-action-button-bar [displayText]=\"pattern?.name\" [firstAddButton]=\"false\">\n    </pp-action-button-bar>\n  </mat-card-header>\n  <div>\n    <ng-template ppPatternProperty></ng-template>\n  </div>\n  <mat-card *ngIf=\"!isLoading\" class=\"section-card\">\n    <mat-card-header>\n      <mat-card-subtitle style=\"display: flex;\n     align-items: flex-start;\"><b>Relations to other Patterns</b></mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n      <div *ngIf=\"directedPatternRelations?.length > 0\">\n        <ng-container *ngFor=\"let relation of directedPatternRelations\">\n          <p class=\"horiz-centered\">\n            <a [routerLink]=\"['..',relation.sourcePatternId]\">{{ relation?.sourcePatternName}}</a>\n            <span *ngIf=\"relation?.type\" class=\"horiz-centered\">\n                            <i class=\"material-icons\">remove</i>{{relation?.type}}\n                        </span>\n            <i class=\"material-icons\">trending_flat</i>\n            <a [routerLink]=\"['..', relation.targetPatternId]\">{{ relation?.targetPatternName}}</a>\n            <i>{{relation?.description ? ': ' + relation?.description : ''}}</i>\n          </p>\n          <br/>\n        </ng-container>\n      </div>\n      <div *ngIf=\"undirectedPatternRelations?.length > 0\">\n        <ng-container *ngFor=\"let relation of undirectedPatternRelations\">\n          <p class=\"horiz-centered\">\n            <a [routerLink]=\"['..', relation.pattern1Id]\">{{ relation?.pattern1Name}}</a>\n            <span *ngIf=\"!relation?.type\"><i class=\"material-icons\">compare_arrows</i></span>\n            <span *ngIf=\"relation?.type\" class=\"horiz-centered\"><i\n              class=\"material-icons flip\">trending_flat</i>{{relation?.type}}\n              <i class=\"material-icons\">trending_flat</i></span>\n            <a [routerLink]=\"['..',relation.pattern2Id]\">{{ relation?.pattern2Name}}</a>\n            <i>{{relation?.description ? ': ' + relation?.description : ''}}</i>\n          </p>\n          <br/>\n        </ng-container>\n      </div>\n      <div *ngIf=\"undirectedPatternRelations?.length === 0 && directedPatternRelations?.length === 0\">\n        <p> No links found for this pattern.</p>\n      </div>\n      <mat-card-actions>\n        <div style=\"display: flex; align-items: center;\">\n          <button (click)=\"addLink()\"\n                  *ngIf=\"isEditingEnabled\"\n                  color=\"primary\"\n                  mat-stroked-button\n                  matTooltip=\"Add Link\"\n                  style=\"margin-left: 5px\">\n            <i class=\"material-icons\">trending_flat</i>\n            <i class=\"material-icons\" style=\"height: 2em;\n    font-size: smaller;  \">add</i>\n          </button>\n        </div>\n      </mat-card-actions>\n    </mat-card-content>\n\n  </mat-card>\n\n</mat-card>\n<pp-creative-license-footer *ngIf=\"pattern && patternLanguage\"\n                            [patternLanguage]=\"patternLanguage\"></pp-creative-license-footer>\n","import { AfterViewInit, ChangeDetectorRef, Component, ComponentFactoryResolver, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToasterService } from 'angular2-toaster';\nimport { PatternPropertyDirective } from '../component/markdown-content-container/pattern-property.directive';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CreatePatternRelationComponent } from '../component/create-pattern-relation/create-pattern-relation.component';\nimport Pattern from '../model/hal/pattern.model';\nimport { PatternLanguageService } from '../service/pattern-language.service';\nimport PatternLanguage from '../model/hal/pattern-language.model';\nimport { PatternService } from '../service/pattern.service';\nimport { MarkdownPatternSectionContentComponent } from '../component/markdown-content-container/markdown-pattern-sectioncontent/markdown-pattern-section-content.component'; // eslint-disable-line max-len\nimport { DataChange } from '../component/markdown-content-container/interfaces/DataRenderingComponent.interface';\nimport PatternSectionSchema from '../model/hal/pattern-section-schema.model';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { EMPTY, forkJoin, Observable } from 'rxjs';\nimport { PatternRelationDescriptorService } from '../service/pattern-relation-descriptor.service';\nimport { DirectedEdgeModel } from '../model/hal/directed-edge.model';\nimport { Embedded } from '../model/hal/embedded';\nimport { DirectedEdesResponse } from '../model/hal/directed-edes-response.interface';\nimport { UndirectedEdesResponse } from '../model/hal/undirected-edes-response.interface';\nimport { UndirectedEdgeModel } from '../model/hal/undirected-edge.model';\nimport { globals } from '../../globals';\n\n@Component({\n  selector: 'pp-default-pattern-renderer',\n  templateUrl: './default-pattern-renderer.component.html',\n  styleUrls: ['./default-pattern-renderer.component.scss']\n})\nexport class DefaultPatternRendererComponent implements AfterViewInit {\n  @ViewChild(PatternPropertyDirective) ppPatternProperty: PatternPropertyDirective;\n  isLoading = true;\n  isLoadingLinks = true;\n  isEditingEnabled = true;\n  patternLanguage: PatternLanguage;\n  pattern: Pattern;\n  patterns: Array<Pattern>;\n  private directedPatternRelations: Array<DirectedEdgeModel>;\n  private undirectedPatternRelations: Array<UndirectedEdgeModel>;\n  private viewContainerRef;\n  private patternLanguageId: string;\n  private patternId: string;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private toasterService: ToasterService,\n              private cdr: ChangeDetectorRef,\n              private componentFactoryResolver: ComponentFactoryResolver,\n              private patternLanguageService: PatternLanguageService,\n              private patternService: PatternService,\n              private patternRelationDescriptorService: PatternRelationDescriptorService,\n              private dialog: MatDialog,\n              private router: Router) {\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n  }\n\n  ngAfterViewInit(): void {\n    this.viewContainerRef = this.ppPatternProperty.viewContainerRef;\n    this.patternLanguageId = this.activatedRoute.snapshot.paramMap.get(globals.pathConstants.patternLanguageId);\n    this.patternId = this.activatedRoute.snapshot.paramMap.get('patternId');\n    this.getData();\n  }\n\n  addLink() {\n    if (!this.patterns || this.patterns.length === 0) {\n      this.patternService.getPatternsByUrl(this.patternLanguage._links.patterns.href).subscribe((patterns) => {\n        this.patterns = patterns;\n        this.patterns.sort((p1, p2) => p1.name.localeCompare(p2.name));\n        this.showAndHandleLinkDialog();\n      });\n    } else {\n      this.showAndHandleLinkDialog();\n    }\n  }\n\n  addContentInfoToPattern(edge: DirectedEdgeModel | UndirectedEdgeModel): Observable<DirectedEdgeModel | UndirectedEdgeModel> {\n    const toPattern = edge instanceof DirectedEdgeModel ? edge.targetPatternId : edge.pattern2Id;\n    return this.patternService.getPatternContentByPattern(this.patterns.find(it => it.id === toPattern)).pipe(\n      map((patterncontent) => {\n        const targetPatternContent = patterncontent.content;\n        // edge instanceof DirectedEdgeModel ? edge.content = targetPatternContent : edge.p2.content = targetPatternContent;\n        return edge;\n      }));\n  }\n\n  getPatternInfos(): Observable<Pattern> {\n    if (!this.patternLanguage) {\n      console.log('tried to get patterns before the pattern language object with the url was instanciated');\n      return EMPTY;\n    }\n    return this.patternService.getPatternById(this.patternLanguage, this.patternId).pipe(\n      tap(pattern => this.pattern = pattern),\n      switchMap((pat) => {\n        const content = this.patternService.getPatternContentByPattern(this.pattern);\n        const renderedContent = this.patternService.getPatternRenderedContentByPattern(this.pattern);\n        return forkJoin([content, renderedContent]);\n      }),\n      map((patternContent) => {\n        this.pattern.renderedContent = patternContent[ 1 ].renderedContent;\n        return this.pattern.content = patternContent[ 0 ].content;\n      }));\n  }\n\n  getPatternLanguageLinks(): Observable<any> {\n    const $getDirectedEdges = this.getDirectedEdges();\n    const $getUndirectedEdges = this.getUndirectedEdges();\n    return forkJoin([$getDirectedEdges, $getUndirectedEdges]).pipe(tap(() => this.isLoadingLinks = false));\n  }\n\n  getPatternByLink(edge: DirectedEdgeModel | UndirectedEdgeModel, res: any) {\n    const url = res.url + '/' + res.body.id;\n    this.patternRelationDescriptorService.getEdgeByUrl(url, edge)\n      .subscribe(\n        edgeResult => {\n          edge instanceof DirectedEdgeModel ?\n            this.directedPatternRelations.push(edgeResult as DirectedEdgeModel) :\n            this.undirectedPatternRelations.push(edgeResult as UndirectedEdgeModel);\n        }\n      );\n  }\n\n  private createSectionComponent(section: string) {\n    if (!this.pattern.renderedContent) {\n      return;\n    }\n    const renderedContent = this.pattern.renderedContent[ section ];\n    const content = this.pattern.content[ section ];\n\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(MarkdownPatternSectionContentComponent);\n    const componentRef = this.viewContainerRef.createComponent(componentFactory);\n    const instance = (<MarkdownPatternSectionContentComponent>componentRef.instance);\n    instance.renderedData = renderedContent;\n    instance.data = content;\n    instance.title = section;\n    instance.isEditingEnabled = this.isEditingEnabled;\n    instance.changeContent.subscribe((dataChange: DataChange) => {\n      this.pattern.content[ section ] = dataChange.currentValue;\n      this.cdr.detectChanges();\n      this.savePattern(section, dataChange.previousValue, instance);\n      this.cdr.detectChanges();\n    });\n  }\n\n  private getDirectedEdges(): Observable<Embedded<DirectedEdesResponse>> {\n    if (!this.patternLanguage) {\n      return EMPTY;\n    }\n    return this.patternLanguageService.getDirectedEdges(this.patternLanguage).pipe(\n      tap((edges) => {\n        this.directedPatternRelations = edges && edges._embedded ?\n          edges._embedded.directedEdgeModels.filter(edge => edge.sourcePatternId === this.pattern.id ||\n            edge.targetPatternId === this.pattern.id) : [];\n      }));\n  }\n\n  private getUndirectedEdges(): Observable<Embedded<UndirectedEdesResponse>> {\n    if (!this.patternLanguage) {\n      return EMPTY;\n    }\n    return this.patternLanguageService.getUndirectedEdges(this.patternLanguage).pipe(\n      tap((edges) => {\n        this.undirectedPatternRelations = edges && edges._embedded ?\n          edges._embedded.undirectedEdgeModels.filter(edge => edge.pattern1Id === this.pattern.id || edge.pattern2Id === this.pattern.id) : [];\n      }));\n  }\n\n  private savePattern(section: string, previousContent: any, instance: MarkdownPatternSectionContentComponent) {\n    this.patternService.updatePattern(this.pattern._links.self.href, this.pattern).subscribe(\n      data => {\n        const test = data.body.renderedContent[ section ];\n        this.pattern.renderedContent[ section ] = test;\n        instance.changeText(this.pattern.renderedContent[ section ]);\n        this.toasterService.pop('success', 'Saved pattern');\n      },\n      (error) => {\n        this.toasterService.pop('error', 'Could not save pattern, resetting content', error.message);\n        // reset text of the section:\n        this.pattern.content[ section ] = previousContent;\n        instance.changeText(previousContent);\n        this.cdr.detectChanges();\n      });\n  }\n\n  private getData(): void {\n    // get pattern language object with all the hal links that we need\n    this.patternLanguageService.getPatternLanguageByID(this.patternLanguageId).pipe(\n      tap((patternLanguage) => this.patternLanguage = patternLanguage),\n      // get our individual pattern\n      switchMap(() => this.fillPatternSectionData()),\n      switchMap(() => this.getPatternLanguageLinks())).subscribe(() =>\n      this.cdr.detectChanges());\n  }\n\n  private fillPatternSectionData() {\n    return this.getPatternInfos().pipe(\n      tap(() => {\n        this.patternLanguage.patternSchema.patternSectionSchemas.forEach((sec: PatternSectionSchema) => {\n          this.createSectionComponent(sec.name);\n        });\n        this.isLoading = false;\n      }));\n  }\n\n  private showAndHandleLinkDialog() {\n    const dialogRef = this.dialog.open(CreatePatternRelationComponent,\n      { data: { firstPattern: this.pattern, patterns: this.patterns } }\n    );\n    dialogRef.afterClosed().pipe(\n      switchMap(result => {\n        return result ? this.addContentInfoToPattern(result) : EMPTY;\n      }),\n      switchMap((edge) => {\n        return edge ? this.insertEdge(edge) : EMPTY;\n      }))\n      .subscribe(\n        data => {\n          this.toasterService.pop('success', 'Created new Relation');\n        }\n      );\n  }\n\n  private insertEdge(edge): Observable<any> {\n    return this.patternRelationDescriptorService.addRelationToPL(this.patternLanguage, edge).pipe(\n      tap((res) => res ? this.getPatternByLink(edge, res) : EMPTY));\n  }\n}\n","<pp-action-button-bar (add2Clicked)=\"addPattern()\" (addClicked)=\"addLink()\" [addButtonText]=\"'Add Link'\"\n                      [displayText]=\"patternLanguage?.name\" [secondAddButtonText]=\"'Add Pattern'\"\n                      [secondAddButton]=\"true\">\n  <pp-toggle-renderer [graphVisible]=\"graphVisible\" *ngIf=\"!isLoadingPatternData && !isLoadingLinkData\"\n                      (toggledRenderer)=\"setGraphVisible($event)\"></pp-toggle-renderer>\n  <span *ngIf=\"isLoadingLinkData\"> Loading Links... </span>\n  <mat-form-field id=\"search-field\" class=\"action-button-with-margin\" #searchField appearance=\"outline\"\n                  *ngIf=\"!graphVisible\" [floatLabel]=\"'always'\">\n    <mat-label>Filter</mat-label>\n    <input matInput placeholder=\"Type to filter\" [formControl]=\"filter\">\n    <mat-icon matSuffix>filter_list</mat-icon>\n  </mat-form-field>\n  <button class=\"action-button-with-margin\" (click)=\"reloadGraph()\" *ngIf=\"graphVisible\"\n          color=\"accent\" mat-raised-button>\n    <i class=\"material-icons\">autorenew</i> Reformat\n  </button>\n</pp-action-button-bar>\n\n<mat-progress-spinner *ngIf=\"isLoadingPatternData\" mode=\"indeterminate\"></mat-progress-spinner>\n<div>\n  <pp-card-renderer *ngIf=\"!graphVisible && patterns && patternsForCardsView\"\n                    [uriEntities]=\"this.patternsForCardsView\"\n                    [showLinks]=\"false\"></pp-card-renderer>\n  <pp-graph-display *ngIf=\"graphVisible && patterns && !isLoadingLinkData\" [data]=\"{\n                patterns: this.patterns, edges: this.patternLinks,\n                patternLanguage: this.patternLanguage, patternContainer: null\n            }\" (addedEdge)=\"linkAddedInGraphEditor($event)\" [showPatternLanguageName]=\"false\">\n  </pp-graph-display>\n\n</div>\n\n<pp-creative-license-footer *ngIf=\"patterns && patterns.length\"\n                            [patternLanguage]=\"patternLanguage\"></pp-creative-license-footer>\n","import {\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  ElementRef,\n  OnInit,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UriConverter } from '../util/uri-converter';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PatternLanguageService } from '../service/pattern-language.service';\nimport PatternLanguage from '../model/hal/pattern-language.model';\nimport { D3Service } from '../../graph/service/d3.service';\nimport { GraphDisplayComponent } from '../component/graph-display/graph-display.component';\nimport { EMPTY, forkJoin, Observable } from 'rxjs';\nimport { Embedded } from '../model/hal/embedded';\nimport { DirectedEdesResponse } from '../model/hal/directed-edes-response.interface';\nimport { switchMap, tap } from 'rxjs/operators';\nimport { UndirectedEdesResponse } from '../model/hal/undirected-edes-response.interface';\nimport { DirectedEdgeModel } from '../model/hal/directed-edge.model';\nimport { UndirectedEdgeModel } from '../model/hal/undirected-edge.model';\nimport { CreatePatternRelationComponent } from '../component/create-pattern-relation/create-pattern-relation.component';\nimport { PatternRelationDescriptorService } from '../service/pattern-relation-descriptor.service';\nimport { ToasterService } from 'angular2-toaster';\nimport { PatternService } from '../service/pattern.service';\nimport Pattern from '../model/hal/pattern.model';\nimport { FormControl } from '@angular/forms';\nimport { globals } from '../../globals';\n\n@Component({\n  selector: 'pp-default-pl-renderer',\n  templateUrl: './default-pl-renderer.component.html',\n  styleUrls: ['./default-pl-renderer.component.scss']\n})\nexport class DefaultPlRendererComponent implements OnInit {\n  patterns: Array<Pattern> = [];\n  patternsForCardsView: Array<Pattern> = [];\n  patternLanguage: PatternLanguage;\n  patternLanguageId: string;\n  @ViewChild('graphWrapper') graph: ElementRef;\n  @ViewChild('cardsView') cardsView: ElementRef;\n  @ViewChild('searchField') searchField: ElementRef;\n  @ViewChild(GraphDisplayComponent, { static: false }) graphDisplayComponent: GraphDisplayComponent;\n  @ViewChild('displayPLContainer', { read: ViewContainerRef }) loadRenderer;\n  graphVisible = false;\n  isLoadingPatternData = true;\n  isLoadingLinkData = true;\n  toggleBeforeDataLoaded = false;\n  filter: FormControl;\n  private directedPatternRelations: Array<DirectedEdgeModel> = [];\n  private undirectedPatternRelations: Array<UndirectedEdgeModel> = [];\n  private patternLinks: Array<UndirectedEdgeModel | DirectedEdgeModel>;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private cdr: ChangeDetectorRef,\n              private dialog: MatDialog,\n              private patternLanguageService: PatternLanguageService,\n              private patternService: PatternService,\n              private patternRelationDescriptorService: PatternRelationDescriptorService,\n              private d3Service: D3Service,\n              private router: Router,\n              private componentFactoryResolver: ComponentFactoryResolver,\n              private toasterService: ToasterService) {\n  }\n\n  ngOnInit() {\n    this.loadData();\n    this.filter = new FormControl('');\n    this.filter.valueChanges.subscribe((filterText: string) => {\n      if (this.graphVisible || !this.patterns || this.patterns.length === 0) {\n        return;\n      }\n      this.patternsForCardsView = this.patterns.filter(pattern => pattern.name.toLowerCase().includes(filterText.toLowerCase()));\n    });\n  }\n\n  detectChanges() {\n    this.cdr.detectChanges();\n  }\n\n  getPatternLinks(): Observable<any> {\n    const $getDirectedEdges = this.getDirectedEdges();\n    const $getUndirectedEdges = this.getUndirectedEdges();\n    return forkJoin([$getDirectedEdges, $getUndirectedEdges]).pipe(\n      tap((edges) => {\n        this.patternLinks = [];\n        this.patternLinks.push(...this.directedPatternRelations);\n        this.patternLinks.push(...this.undirectedPatternRelations);\n      }));\n  }\n\n  public addPattern(): void {\n    this.router.navigate(['create-patterns'], { relativeTo: this.activatedRoute });\n  }\n\n  public addLink() {\n    // Todo: Make patternlanguage camelcase\n    const dialogRef = this.dialog.open(CreatePatternRelationComponent, {\n      data: {\n        patterns: this.patterns,\n        patternlanguage: this.patternLanguage\n      }\n    });\n    dialogRef.afterClosed().pipe(\n      switchMap((edge) => {\n        return edge ? this.insertEdge(edge) : EMPTY;\n      })).subscribe(res => {\n      if (res) {\n        this.toasterService.pop('success', 'Added Relation');\n        this.detectChanges();\n      }\n    });\n  }\n\n  insertEdge(edge): Observable<any> {\n    return this.patternRelationDescriptorService.addRelationToPL(this.patternLanguage, edge).pipe(\n      tap((res) => res ? this.getPatternByLink(edge, res) : EMPTY));\n  }\n\n  getPatternByLink(edge: DirectedEdgeModel | UndirectedEdgeModel, res: any) {\n    const url = res.url + '/' + res.body.id;\n    this.patternRelationDescriptorService.getEdgeByUrl(url, edge)\n      .subscribe(\n        edgeResult => {\n          this.patternLinks.push(edgeResult);\n        }\n      );\n  }\n\n  linkAddedInGraphEditor(edge) {\n    this.insertEdge(edge).subscribe(res => {\n      this.toasterService.pop('success', 'Added Relation');\n      this.graphDisplayComponent.updateSideMenu();\n      this.detectChanges();\n    });\n  }\n\n  reloadGraph() {\n    this.graphDisplayComponent.reformatGraph();\n  }\n\n  setGraphVisible(newValueGraphVisible: boolean) {\n    if (newValueGraphVisible) { // reset the search field so all patterns are shown in the graph\n      this.filter.setValue('');\n    }\n    this.graphVisible = newValueGraphVisible;\n    // if user toggled to early, we will retrigger\n    this.toggleBeforeDataLoaded = this.isLoadingLinkData && this.isLoadingPatternData;\n  }\n\n  private loadData(): void {\n    this.isLoadingPatternData = true;\n    this.patternLanguageId = UriConverter.doubleDecodeUri(this.activatedRoute.snapshot.paramMap.get(globals.pathConstants.patternLanguageId));\n    if (this.patternLanguageId) {\n      this.patternLanguageService.getPatternLanguageByID(this.patternLanguageId)\n        .pipe(\n          tap(patternlanguage => this.patternLanguage = patternlanguage),\n          switchMap(() => this.loadPatterns()),\n          switchMap(() => this.getPatternLinks())\n        )\n        .subscribe(() => {\n          this.isLoadingLinkData = false;\n          this.detectChanges();\n        });\n    }\n  }\n\n  private getDirectedEdges(): Observable<Embedded<DirectedEdesResponse>> {\n    if (!this.patternLanguage) {\n      return EMPTY;\n    }\n    return this.patternLanguageService.getDirectedEdges(this.patternLanguage).pipe(\n      tap((edges) => {\n        this.directedPatternRelations = edges._embedded ? edges._embedded.directedEdgeModels : [];\n      }));\n  }\n\n  private getUndirectedEdges(): Observable<Embedded<UndirectedEdesResponse>> {\n    if (!this.patternLanguage) {\n      return EMPTY;\n    }\n    return this.patternLanguageService.getUndirectedEdges(this.patternLanguage).pipe(\n      tap((edges) => {\n        this.undirectedPatternRelations = edges._embedded ? edges._embedded.undirectedEdgeModels : [];\n      }));\n  }\n\n  private loadPatterns(): Observable<any[]> {\n    return this.patternService.getPatternsByUrl(this.patternLanguage._links.patterns.href).pipe(\n      tap(patterns => {\n        this.patterns = patterns;\n        this.patternsForCardsView = this.patterns;\n        this.isLoadingPatternData = false;\n      }));\n  }\n}\n","import { Directive, EventEmitter, HostListener, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { debounceTime, takeUntil } from 'rxjs/operators';\n\n@Directive({\n  selector: '[ppGraphEventEmmiter]'\n})\nexport class EmitEventOnAddedEdgeDirective implements OnInit, OnDestroy {\n  @Output('onAddedEdge') edgeAddedEventEmitter = new EventEmitter<any>(); // eslint-disable-line @angular-eslint/no-output-rename\n  @Output('onClickedNode') nodeClickedEventEmitter = new EventEmitter<any>(); // eslint-disable-line @angular-eslint/no-output-rename\n  @Output('onClickedBackground') backgroundClickedEventEmitter = new EventEmitter<any>(); // eslint-disable-line @angular-eslint/no-output-rename\n  // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n  @Output('onNodePositionChange') onNodePositionChangeEventEmitter = new EventEmitter<any>(); // eslint-disable-line @angular-eslint/no-output-rename\n\n\n  constructor() {\n  }\n\n  private movements = new Subject();\n  private unsubscribe: Subject<void> = new Subject();\n\n  ngOnInit(): void {\n    // delay trigggering click events and don't trigger it if nothing changed\n    this.movements.pipe(\n      debounceTime(1000),\n      takeUntil(this.unsubscribe)\n    ).subscribe((e) => {\n      this.onNodePositionChangeEventEmitter.emit(e);\n    });\n  }\n\n  @HostListener('edgeadd', ['$event']) onEdgeAdd($event) {\n    this.edgeAddedEventEmitter.emit($event);\n  }\n\n  @HostListener('nodeclick', ['$event']) onNodeClick($event) {\n    console.log('click-event');\n    if ($event.details && $event.details.key === 'image-clicked') {\n      console.log('image');\n      // $event.preventDefault();\n      // return;\n    }\n\n    this.nodeClickedEventEmitter.emit($event);\n\n  }\n\n  @HostListener('backgroundclick', ['$event']) onBackgroundClick($event) {\n    console.log($event);\n    if ($event.details && $event.details.key === 'image-clicked') {\n      console.log('image');\n    }\n    this.backgroundClickedEventEmitter.emit($event);\n  }\n\n  @HostListener('nodepositionchange', ['$event']) onNodePositionChange(event) {\n    this.movements.next(event);\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n\n}\n","import { Directive, EventEmitter, HostListener, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/internal/operators';\n\n@Directive({\n  selector: '[ppEmitOnChange]'\n})\nexport class EmitEventOnKeyupDirective implements OnInit, OnDestroy {\n\n  constructor() {\n  }\n\n  @Output('onKeyup') keyUpEventEmitter = new EventEmitter<any>(); // eslint-disable-line @angular-eslint/no-output-rename\n\n\n  private clicks = new Subject();\n\n  ngOnInit(): void {\n    // delay trigggering click events and don't trigger it if nothing changed\n    this.clicks.pipe(\n      debounceTime(1000),\n      distinctUntilChanged()\n    ).subscribe((e) => {\n      this.keyUpEventEmitter.emit(e);\n    });\n  }\n\n\n  @HostListener('window:keyup', ['$event'])\n  keyEvent(event: KeyboardEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.clicks.next(event);\n  }\n\n  ngOnDestroy(): void {\n    this.clicks.unsubscribe();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ToasterService } from 'angular2-toaster';\nimport { AuthenticationService } from 'src/app/authentication/_services/authentication.service';\nimport { Issue } from '../_models/issue.model';\nimport { Observable } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { IssueComment } from '../_models/issue-comment.model';\nimport { Rating } from '../../model/rating.enum';\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\nexport class IssueManagementService {\n\n  private repoEndpoint: string;\n  private serviceEndpoint: string;\n\n  constructor(\n    private http: HttpClient,\n    private toasterService: ToasterService,\n    private auth: AuthenticationService,\n  ) {\n    this.repoEndpoint = environment.repositoryUrl;\n    this.serviceEndpoint = '/issues';\n  }\n\n  /**\n   * GET\n   */\n  public getAllIssues(): Observable<Issue[]> {\n    return this.http.get<any>(this.repoEndpoint + this.serviceEndpoint).pipe(\n      map(result => {\n        return result\n      }),\n      catchError(error => {\n        this.toasterService.pop('error', 'Getting issue list', error)\n        return [];\n      }),\n    )\n  }\n\n  /**\n   * CREATE\n   */\n  public createIssue(issue: Issue): Observable<Issue> {\n    issue.rating = 0;\n    issue.uri = issue.name;\n    issue.version = '1.0'\n    \n    return this.http.post<any>(this.repoEndpoint + this.serviceEndpoint, issue).pipe(\n      map(result => {\n        this.toasterService.pop('success', 'Created new issue')\n        return result\n      }),\n      catchError(error => {\n        this.toasterService.pop('error', 'Could not create new issue: ', error)\n        return null;\n      }),\n    )\n  }\n\n  public createComment(issue: Issue, issueComment: IssueComment): Observable<Issue> {\n    const userId = this.auth.userSubject.value.id;\n\n    return this.http.post<any>(this.repoEndpoint + this.serviceEndpoint + `/${issue.id}/comments/${userId}`, issueComment).pipe(\n      map(result => {\n        this.toasterService.pop('success', 'Created new issue')\n        return result\n      }),\n      catchError(error => {\n        this.toasterService.pop('error', 'Could not create new issue: ', error)\n        return null;\n      }),\n    )\n  }\n\n  /**\n   * UPDATE\n   */\n  public updateIssue(issue: Issue): Observable<Issue> {\n\n    return this.http.put<any>(this.repoEndpoint + this.serviceEndpoint + `/${issue.id}`, issue).pipe(\n      map(result => {\n        this.toasterService.pop('success', 'Updated issue')\n        return result\n      }),\n      catchError(error => {\n        this.toasterService.pop('error', 'Could not update issue: ', error)\n        return null;\n      }),\n    )\n  }\n\n  public updateRating(issue: Issue, rating: Rating): Observable<Issue> {\n    const userId = this.auth.userSubject.value.id;\n\n    return this.http.put<any>(this.repoEndpoint + this.serviceEndpoint + `/${issue.id}/users/${userId}/rating/${rating}`, issue).pipe(\n      map(result => {\n        this.toasterService.pop('success', 'Updated issue')\n        return result\n      }),\n      catchError(error => {\n        this.toasterService.pop('error', 'Could not update issue: ', error)\n        return null;\n      }),\n    )\n  }\n\n  public updateCommentRating(issueComment: IssueComment, rating: Rating): Observable<Issue> {\n    const userId = this.auth.userSubject.value.id;\n\n    return this.http.put<any>(this.repoEndpoint + this.serviceEndpoint + `/comments/${issueComment.id}/users/${userId}/rating/${rating}`, issueComment).pipe(\n      map(result => {\n        this.toasterService.pop('success', 'Updated issue comment')\n        return result\n      }),\n      catchError(error => {\n        this.toasterService.pop('error', 'Could not update issue comment: ', error)\n        return null;\n      }),\n    )\n  }\n\n  /**\n   * DELETE\n   */\n  public deleteIssue(issue: Issue): Observable<Issue> {\n\n    return this.http.delete<any>(this.repoEndpoint + this.serviceEndpoint + `/${issue.id}`).pipe(\n      map(result => {\n        this.toasterService.pop('success', 'Deleted issue')\n        return result\n      }),\n      catchError(error => {\n        this.toasterService.pop('error', 'Could not delete issue: ', error)\n        return null;\n      }),\n    )\n  }\n}\n","import { BehaviorSubject } from 'rxjs';\n\nexport class IssueManagementStore {\n    private _issue2Candidate: BehaviorSubject<any> = new BehaviorSubject(null);\n\n    get candidateFromIssue() {\n      return this._issue2Candidate.asObservable();\n    }\n\n    addCandidateFromIssue(issue2Candidate: any) {\n      console.log(issue2Candidate)\n      this._issue2Candidate.next(issue2Candidate);\n    }\n\n    resetCandidateFromIssue() {\n      this._issue2Candidate.next(null);\n    }\n}\n","import { DirectedEdgeModel } from './directed-edge.model';\n\nexport class AddDirectedEdgeToViewRequest {\n  directedEdgeId: string;\n  sourcePatternId: string;\n  targetPatternId: string;\n  description: string;\n  type: string;\n  newEdge: boolean;\n\n\n  constructor(edge: DirectedEdgeModel) {\n    this.directedEdgeId = edge.id ? edge.id : null;\n    this.sourcePatternId = edge.sourcePatternId;\n    this.targetPatternId = edge.targetPatternId;\n    this.description = edge.description;\n    this.type = edge.type;\n    // if there is no existing edge id, this must be a new edge:\n    this.newEdge = !edge.id;\n  }\n}\n","import { UndirectedEdgeModel } from './undirected-edge.model';\n\nexport class AddUndirectedEdgeToViewRequest {\n  undirectedEdgeId: string;\n  pattern1Id: string;\n  pattern2Id: string;\n  description: string;\n  type: string;\n  newEdge: boolean;\n\n\n  constructor(edge: UndirectedEdgeModel) {\n    this.undirectedEdgeId = edge.id;\n    this.pattern1Id = edge.pattern1Id;\n    this.pattern2Id = edge.pattern2Id;\n    this.description = edge.description;\n    this.type = edge.type;\n    // if there is no existing edge id, this must be a new edge:\n    this.newEdge = !edge.id;\n  }\n}\n","import { DirectedEdgeModel } from './directed-edge.model';\n\nexport class CreateDirectedEdgeRequest {\n  targetPatternId: string;\n  sourcePatternId: string;\n  type: string;\n  description: string;\n\n  constructor(edge: DirectedEdgeModel) {\n    this.sourcePatternId = edge.sourcePatternId;\n    this.targetPatternId = edge.targetPatternId;\n    this.type = edge.type;\n    this.description = edge.description;\n  }\n}\n","import { UndirectedEdgeModel } from './undirected-edge.model';\n\nexport class CreateUndirectedEdgeRequest {\n  p2Id: string;\n  p1Id: string;\n  type: string;\n  description: string;\n\n  constructor(edge: UndirectedEdgeModel) {\n    this.p1Id = edge.pattern1Id;\n    this.p2Id = edge.pattern2Id;\n    this.type = edge.type;\n    this.description = edge.description;\n  }\n}\n","import { DirectedEdgeResource } from './hal-resources.interface';\nimport PatternLanguage from './pattern-language.model';\nimport { Edge } from './edge.model';\nimport { PatternContainer } from './pattern-container.model';\nimport Pattern from './pattern.model';\n\nexport class DirectedEdgeModel extends Edge {\n  sourcePatternName: string;\n  sourcePatternId: string;\n  sourcePatternUri: string;\n  targetPatternName: string;\n  targetPatternId: string;\n  targetPatternUri: string;\n\n  _links: DirectedEdgeResource;\n\n  constructor(source: Pattern, target: Pattern, patternlanguage: PatternLanguage, description: any, type: string, patternView: PatternContainer = null) {\n    super(description, type, patternView, patternlanguage);\n    this.sourcePatternId = source.id;\n    this.sourcePatternName = source.name;\n    this.sourcePatternUri = source.uri;\n    this.targetPatternId = target.id;\n    this.targetPatternName = target.name;\n    this.targetPatternUri = target.uri;\n  }\n}\n","import { PatternContainer } from './pattern-container.model';\nimport PatternLanguage from './pattern-language.model';\n\nexport class Edge {\n  description: any;\n  id: string;\n  type: string;\n  patternView?: PatternContainer;\n  patternlanguage?: PatternLanguage;\n\n  constructor(description: any, type: string, patternView: PatternContainer = null, patternLanguage: PatternLanguage = null) {\n    this.description = description;\n    this.type = type;\n    this.patternView = patternView;\n    this.patternlanguage = patternLanguage;\n  }\n}\n","import Pattern from './pattern.model';\nimport UriEntity from './uri-entity.model';\nimport { HalLink } from './hal-link.interface';\n\nexport class PatternContainer extends UriEntity {\n  patterns: Pattern[];\n  _links: {\n    self: HalLink;\n    patternViews: HalLink;\n    patterns: HalLink;\n    directedEdges: HalLink;\n    undirectedEdges: HalLink;\n    graph: HalLink;\n  };\n}\n","/*\n * Copyright (c) 2019 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport UriEntity from './uri-entity.model';\nimport PatternSchema from './pattern-schema.model';\nimport { PatternLanguageResource } from './hal-resources.interface';\nimport Pattern from './pattern.model';\n\nclass PatternLanguage extends UriEntity {\n  patterns?: Array<Pattern>;\n  logo: string;\n  patternSchema: PatternSchema;\n  _links: PatternLanguageResource;\n  creativeCommonsReference: string;\n}\n\nexport default PatternLanguage;\n","/*\n * Copyright (c) 2019 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport PatternSectionSchema from './pattern-section-schema.model';\nimport { PatternSchemaResource } from './hal-resources.interface';\n\nclass PatternSchema {\n  id: string;\n  patternSectionSchemas: Array<PatternSectionSchema> = [];\n  _links: PatternSchemaResource;\n}\n\nexport default PatternSchema;\n","/*\n * Copyright (c) 2019 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nclass PatternSectionSchema {\n  id: number;\n  label: string;\n  name: string;\n  type: string;\n  position: number;\n}\n\nexport default PatternSectionSchema;\n","import { UndirectedEdgeResource } from './hal-resources.interface';\nimport Pattern from './pattern.model';\nimport PatternLanguage from './pattern-language.model';\nimport { PatternContainer } from './pattern-container.model';\nimport { Edge } from './edge.model';\n\nexport class UndirectedEdgeModel extends Edge {\n  pattern1Id: string;\n  pattern2Id: string;\n  pattern1Name: string;\n  pattern2Name: string;\n  pattern1Uri: string;\n  pattern2Uri: string;\n  patternlanguage: PatternLanguage;\n  _links: UndirectedEdgeResource;\n  patternContainer?: PatternContainer;\n\n  constructor(p1: Pattern, p2: Pattern, patternlanguage: PatternLanguage, description: any, type: string, patternContainer: PatternContainer = null) {\n    super(description, type, patternContainer, patternlanguage);\n    this.pattern1Id = p1.id;\n    this.pattern1Name = p1.name;\n    this.pattern1Uri = p1.uri;\n    this.pattern2Id = p2.id;\n    this.pattern2Name = p2.name;\n    this.pattern2Uri = p2.uri;\n  }\n}\n","/*\n * Copyright (c) 2019 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nclass UriEntity {\n  id: string;\n  uri: string;\n  name: string;\n}\n\nexport default UriEntity;\n","export enum PatternRelationDescriptorDirection {\n  DirectedRight,\n  DirectedLeft,\n  UnDirected\n}\n","import { Injectable } from '@angular/core';\nimport RenderingComponent from '../model/rendering-component';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Service for registering and retreiving rendering components of patterns languages and patterns.\n */\nexport class ComponentRegistryService {\n\n  // dictionary mapping IRI to list of renderer components\n  private dictionary = new Map<string, Array<RenderingComponent>>();\n\n  constructor() {\n  }\n\n  /**\n   * Returns the rendering component at the given index.\n   *\n   * @param id the uri of the registered renderer components\n   * @param index (optional) the index of the renderer within the list\n   * @returns the rendering component at the given index or null, if there is no registered component\n   */\n  getPLRenderingComponents(id: string, index: number = 0): RenderingComponent {\n    const componentList = this.dictionary.get(id.toLowerCase());\n    return componentList ? componentList[ index ] : null;\n  }\n\n  /**\n   * Returns all rendering components that have been registered to the given uri.\n   *\n   * @param id the uri of the registered renderer components\n   * @returns a list containing all rendering components or null, if there are no registered renderer\n   */\n  getRenderingComponents(id: string): Array<RenderingComponent> {\n    return this.dictionary.get(id.toLowerCase());\n  }\n\n  /**\n   * Registers the given components for the given uri.\n   *\n   * @param id the uri which the components will be registered for\n   * @param component the components to be registered (higher priority first!)\n   */\n  registerComponent(id: string, component: RenderingComponent): void {\n    const componentList = this.dictionary.get(id);\n    if (!componentList) {\n      this.dictionary.set(id.toLowerCase(), [component]);\n    } else {\n      componentList.push(component);\n      // sort list DESCENDING according to priority (higher prio first)\n      componentList.sort((a, b) => b.priority - a.priority);\n    }\n  }\n}\n","/*\n * Copyright (c) 2020 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { Observable } from 'rxjs';\nimport Pattern from '../model/hal/pattern.model';\nimport { PatternContainer } from '../model/hal/pattern-container.model';\nimport { GraphNode } from '../component/graph-display/graph-display.component';\nimport { PatternContainerResponse } from '../model/hal/pattern-container-response.interface';\nimport { Injectable } from '@angular/core';\nimport PatternLanguage from '../model/hal/pattern-language.model';\n\n\n@Injectable()\nexport abstract class GraphDataService {\n\n  abstract addPatterns(url: string, patterns: Pattern[]): Observable<PatternContainerResponse>;\n\n  abstract getPatternContainerByUri(uri: string): Observable<PatternContainer>;\n\n  abstract getPatternContainer(url: string): Observable<PatternContainer> ;\n\n  abstract saveGraph(patternContainer: PatternContainer | PatternLanguage, nodeList: any[]): Observable<any>;\n\n  abstract getGraph(patternContainer: PatternContainer): Observable<{ graph: Array<GraphNode> }>;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { globals } from '../../globals';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n\n  private repoEndpoint = globals.repoEndpoint;\n\n  constructor(private http: HttpClient) {\n  }\n\n  getImageById(id: String): Observable<string> {\n    const headers = new HttpHeaders().set('Content-Type', 'text/plain; charset=utf-8');\n    const url = this.repoEndpoint + '/getImageById/' + id;\n    return this.http.get<string>(url, { headers, responseType: 'text' as 'json' });\n  }\n}\n","/*\n * Copyright (c) 2019 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport PatternLanguage from '../model/hal/pattern-language.model';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { globals } from '../../globals';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport PatternLanguages from '../model/hal/pattern-languages.model';\nimport { DirectedEdesResponse } from '../model/hal/directed-edes-response.interface';\nimport { Embedded } from '../model/hal/embedded';\nimport { UndirectedEdesResponse } from '../model/hal/undirected-edes-response.interface';\nimport { GraphNode } from '../component/graph-display/graph-display.component';\nimport PatternLanguageModel from '../model/hal/pattern-language-model.model';\n\n@Injectable()\nexport class PatternLanguageService {\n\n  private repoEndpoint = globals.repoEndpoint;\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getPatternLanguages(): Observable<Array<PatternLanguageModel>> {\n    return this.getPatternLanguageResult()\n      .pipe(\n        map((result: PatternLanguages) => {\n          return result._embedded ? result._embedded.patternLanguageModels : [];\n        })\n      );\n  }\n\n  public getPatternLanguageResult(): Observable<PatternLanguages> {\n    return this.http.get<PatternLanguages>(this.repoEndpoint + '/patternLanguages');\n  }\n\n  public getPatternLanguageByUrl(url: string): Observable<PatternLanguage> {\n    return this.http.get(url).pipe(\n      map(res => <PatternLanguage>res)\n    );\n  }\n\n  public getPatternLanguageByEncodedUri(encodedUri: string): Observable<PatternLanguage> {\n    const url = this.repoEndpoint + '/patternLanguages/findByUri?encodedUri=' + encodedUri;\n    return this.http.get<PatternLanguage>(url);\n  }\n\n  public savePatternLanguage(patternLanguage: PatternLanguage): Observable<HttpResponse<any>> {\n    return this.http.post<HttpResponse<any>>(this.repoEndpoint + '/patternLanguages', patternLanguage, { observe: 'response' });\n  }\n\n  public getDirectedEdges(patternLanguage: PatternLanguage): Observable<Embedded<DirectedEdesResponse>> {\n    return this.http.get<Embedded<DirectedEdesResponse>>(patternLanguage._links.directedEdges.href);\n  }\n\n  public getUndirectedEdges(patternLanguage: PatternLanguage): Observable<Embedded<UndirectedEdesResponse>> {\n    return this.http.get<Embedded<UndirectedEdesResponse>>(patternLanguage._links.undirectedEdges.href);\n  }\n\n  saveGraph(patternLanguage: PatternLanguage, nodes: Array<any>) {\n    return this.http.post<any>(patternLanguage._links.graph.href, nodes, { observe: 'response' });\n  }\n\n  getGraph(patternLanguage: PatternLanguage) {\n    return this.http.get<{ graph: Array<GraphNode> }>(patternLanguage._links.graph.href);\n  }\n\n  getPatternLanguageByID(patternLanguageId: string): Observable<PatternLanguage> {\n    const url = this.repoEndpoint + '/patternLanguages/' + patternLanguageId;\n    return this.http.get<PatternLanguage>(url);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { globals } from '../../globals';\nimport { HttpClient } from '@angular/common/http';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport { DirectedEdgeModel } from '../model/hal/directed-edge.model';\nimport { UndirectedEdgeModel } from '../model/hal/undirected-edge.model';\nimport { HalLink } from '../model/hal/hal-link.interface';\nimport { map } from 'rxjs/operators';\nimport PatternLanguage from '../model/hal/pattern-language.model';\nimport { CreateUndirectedEdgeRequest } from '../model/hal/create-undirected-edge-request';\nimport { CreateDirectedEdgeRequest } from '../model/hal/create-directed-edge-request';\nimport { PatternResponse } from '../model/hal/pattern-response.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatternRelationDescriptorService {\n\n  private repoEndpoint = globals.repoEndpoint;\n\n  constructor(private http: HttpClient) {\n  }\n\n  addRelationToPL(patternLanguage: PatternLanguage, relation: DirectedEdgeModel | UndirectedEdgeModel): Observable<any> {\n    return relation instanceof DirectedEdgeModel ?\n      this.http.post(patternLanguage._links.directedEdges.href, new CreateDirectedEdgeRequest(relation), { observe: 'response' }) :\n      this.http.post(patternLanguage._links.undirectedEdges.href, new CreateUndirectedEdgeRequest(relation), { observe: 'response' });\n  }\n\n  getDirectedEdgeByUrl(url: string): Observable<DirectedEdgeModel> {\n    return this.http.get<DirectedEdgeModel>(url);\n  }\n\n  getUndirectedEdgeByUrl(url: string): Observable<UndirectedEdgeModel> {\n    return this.http.get<UndirectedEdgeModel>(url);\n  }\n\n  getEdgeByUrl(url: string, edge: DirectedEdgeModel | UndirectedEdgeModel): Observable<DirectedEdgeModel | UndirectedEdgeModel> {\n    return edge instanceof DirectedEdgeModel ?\n      this.getDirectedEdgeByUrl(url) : this.getUndirectedEdgeByUrl(url);\n  }\n\n  getEdgesForPattern(pattern: PatternResponse): Observable<EdgeWithType[]> {\n    if (!pattern) {\n      return of(null);\n    }\n    const observables = [];\n    const edgeLinks = ['undirectedEdges', 'outgoingDirectedEdges', 'ingoingDirectedEdges'];\n    edgeLinks.forEach((edgeType: string) => {\n      const edgeLink = pattern._links[ edgeType ];\n      if (edgeLink) {\n        const halLinks = Array.isArray(edgeLink) ? <HalLink[]>edgeLink : [edgeLink];\n        observables.push(...halLinks.map(link =>\n          this.getUndirectedEdgeByUrl(link.href).pipe(map(res => {\n            return <EdgeWithType>{ type: edgeType, edge: res };\n          }))\n        ));\n      }\n    });\n\n    return observables.length > 0 ? forkJoin(observables) : of(null);\n  }\n}\n\nexport class EdgeWithType {\n  type: string;\n  edge: (DirectedEdgeModel | UndirectedEdgeModel);\n}\n","/*\n * Copyright (c) 2019 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { globals } from '../../globals';\nimport { EMPTY, forkJoin, Observable, of } from 'rxjs';\nimport Pattern from '../model/hal/pattern.model';\nimport { PatternContainer } from '../model/hal/pattern-container.model';\nimport { PatternContainerResponse } from '../model/hal/pattern-container-response.interface';\nimport { DirectedEdgeModel } from '../model/hal/directed-edge.model';\nimport { UndirectedEdgeModel } from '../model/hal/undirected-edge.model';\nimport { LinksToOtherPattern } from '../../pattern-view-management/add-to-view/add-to-view.component'; // TODO move this to a model class\nimport { AddDirectedEdgeToViewRequest } from '../model/hal/add-directed-edge-to-view-request';\nimport { AddUndirectedEdgeToViewRequest } from '../model/hal/add-undirected-edge-to-view-request';\nimport { Embedded } from '../model/hal/embedded';\nimport { UndirectedEdesResponse } from '../model/hal/undirected-edes-response.interface';\nimport { DirectedEdesResponse } from '../model/hal/directed-edes-response.interface';\nimport { GraphNode } from '../component/graph-display/graph-display.component';\nimport { GraphDataService } from './graph-data.service';\n\n\n@Injectable()\nexport class PatternViewService implements GraphDataService {\n\n  private repoEndpoint = globals.repoEndpoint;\n\n  constructor(private http: HttpClient) {\n  }\n\n\n  getPatternViews(): Observable<PatternContainerResponse> {\n    return this.http.get<PatternContainerResponse>(this.repoEndpoint + '/patternViews');\n  }\n\n\n  savePatternView(url: string, view: PatternContainer): Observable<HttpResponse<PatternContainerResponse>> {\n    return this.http.post<PatternContainerResponse>(url, view, { observe: 'response' });\n  }\n\n  addPatterns(url: string, patterns: Pattern[]): Observable<any> {\n    const observables = patterns.map(pat => this.http.post<PatternContainerResponse>(url, pat, { observe: 'response' }));\n    return observables.length > 0 ? forkJoin(observables) : of(null);\n  }\n\n  getPatternContainerByUri(encodedUri: string): Observable<PatternContainer> {\n    return this.http.get<PatternContainer>(this.repoEndpoint + `/patternViews/findByUri?encodedUri=${encodedUri}`);\n  }\n\n  getPatternContainer(url: string): Observable<PatternContainer> {\n    return this.http.get<PatternContainer>(url);\n  }\n\n  createLink(\n    url,\n    edge: DirectedEdgeModel | UndirectedEdgeModel | AddDirectedEdgeToViewRequest | AddUndirectedEdgeToViewRequest\n  ): Observable<HttpResponse<Object>> {\n    return this.http.post(url, edge, { observe: 'response' });\n  }\n\n  addLinks(patternContainer: PatternContainer, items: LinksToOtherPattern[]): Observable<any> {\n\n    const observables = items\n      .map(item => item.type === 'directed' ?\n        this.http.post(patternContainer._links.directedEdges.href, new AddDirectedEdgeToViewRequest(<DirectedEdgeModel>item.edge), { observe: 'response' }) :\n        this.http.post(\n          patternContainer._links.undirectedEdges.href,\n          new AddUndirectedEdgeToViewRequest(<UndirectedEdgeModel>item.edge),\n          { observe: 'response' })\n      );\n    return observables.length > 0 ? forkJoin(observables) : EMPTY;\n  }\n\n  getDirectedEdges(patternContainer: PatternContainer): Observable<Embedded<DirectedEdesResponse>> {\n    return this.http.get<Embedded<DirectedEdesResponse>>(patternContainer._links.directedEdges.href);\n  }\n\n  getUndirectedEdges(patternContainer: PatternContainer): Observable<Embedded<UndirectedEdesResponse>> {\n    return this.http.get<Embedded<UndirectedEdesResponse>>(patternContainer._links.undirectedEdges.href);\n  }\n\n  deleteLink(patternLink: any): Observable<any> {\n    return this.http.delete(patternLink);\n  }\n\n  saveGraph(patternView: PatternContainer, nodeList: any[]) {\n    return this.http.post<any>(patternView._links.graph.href, nodeList, { observe: 'response' });\n  }\n\n  getGraph(patternView: PatternContainer) {\n    return this.http.get<{ graph: Array<GraphNode> }>(patternView._links.graph.href);\n  }\n\n}\n","/*\n * Copyright (c) 2019 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { globals } from '../../globals';\nimport { Observable } from 'rxjs';\nimport Pattern from '../model/hal/pattern.model';\nimport { map } from 'rxjs/operators';\nimport { PatternResponse } from '../model/hal/pattern-response.interface';\nimport PatternLanguage from '../model/hal/pattern-language.model';\nimport { Edge } from '../model/hal/edge.model';\n\n@Injectable()\nexport class PatternService {\n\n  private repoEndpoint = globals.repoEndpoint;\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getPatternByEncodedUri(encodedUri: string): Observable<Pattern> {\n    const url = this.repoEndpoint + '/patterns/search/findByUri?encodedUri=' + encodedUri;\n    return this.http.get<Pattern>(url);\n  }\n\n  getPatternsByUrl(patternsUrl: string): Observable<Array<Pattern>> {\n    return this.http.get<PatternResponse>(patternsUrl).pipe(\n      map(result => {\n        return <Array<Pattern>>(result && result._embedded ? result._embedded.patternModels : []);\n      })\n    );\n  }\n\n  getPatternContentByPattern(pattern: Pattern): Observable<{ content: any }> {\n    return this.http.get<{ content: any }>(pattern._links.content.href);\n  }\n\n  getPatternRenderedContentByPattern(pattern: Pattern): Observable<{ renderedContent: any }> {\n    return this.http.get<{ renderedContent: any }>(pattern._links.content.href);\n  }\n\n  savePattern(url: string, pattern: any): Observable<any> {\n    return this.http.post<Pattern>(url, pattern, { observe: 'response' });\n  }\n\n  updatePattern(url: string, pattern: any): Observable<any> {\n    return this.http.put<Pattern>(url, pattern, { observe: 'response' });\n  }\n\n  deletePattern(url: string): Observable<any> {\n    return this.http.delete<Pattern>(url);\n  }\n\n  getLinksForPattern(url: string) {\n    return this.http.get<Array<Edge>>(url);\n  }\n\n  getPatternById(patternLanguage: PatternLanguage, patternId: String): Observable<Pattern> {\n    console.log('patternid');\n    console.log(patternId);\n    return this.http.get <Pattern>(this.repoEndpoint + '/patternLanguages/' + patternLanguage.id + '/patterns/' + patternId);\n  }\n\n  getPatternByUrl(href: string): Observable<PatternResponse> {\n    return this.http.get<PatternResponse>(href);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AbstractControl, ValidatorFn } from '@angular/forms';\nimport { UriConverter } from '../util/uri-converter';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidationService {\n\n\n  constructor() {\n  }\n\n\n  static getMessageForError(section, keyError, errorValue): string {\n    if (keyError === 'required') {\n      return section + ': This value is required';\n    }\n    if (keyError === 'xsdImage') {\n\n      return section + ': Please follow this patterns: ![](http://) and enter a valid url in the round brackets';\n    }\n    if (keyError === 'xsdInteger') {\n      return section + ': Please enter an integer.';\n    }\n\n    if (keyError === 'xsdAnyURI') {\n\n      return section + ': Please enter a valid URL/URL.';\n    }\n    if (keyError === 'minlength') {\n      return section + ': Please enter only ' + errorValue[ 'requiredLength' ] + ' entries';\n    }\n    if (keyError === 'maxlength') {\n      return section + ': Please enter max. ' + errorValue[ 'requiredLength' ] + ' entries';\n    }\n  }\n\n\n  // checks if value is an array of strings matching the markdown image patterns (e.g. [![test](http://placekitten.com/200/300), ![](http://any.valid.url.com)]\n  static xsdImage(): ValidatorFn {\n    return (control: AbstractControl): { [ key: string ]: boolean } | null => {\n      if (control.value !== undefined) {\n        if (!this.allValuesMatchRegex(control.value, /!\\[.*\\]\\(http(s)?:\\/\\/([a-zA-Z.0-9]+[\\/]*)+\\)/g)) {\n          return { xsdImage: true };\n        }\n      }\n      return null;\n    };\n  }\n\n  // checks if value is an array of strings matching the markdown image patterns (e.g. [![test](http://placekitten.com/200/300), ![](http://any.valid.url.com)]\n  static xsdInteger(): ValidatorFn {\n    return (control: AbstractControl): { [ key: string ]: boolean } | null => {\n      if (control.value !== undefined) {\n        let arrayOfImageValues = control.value;\n        if (!(arrayOfImageValues instanceof Array)) {\n          arrayOfImageValues = [arrayOfImageValues];\n        }\n        for (const item of arrayOfImageValues) {\n          if (isNaN(+item)) {\n            return { xsdInteger: true };\n          }\n        }\n      }\n      return null;\n    };\n  }\n\n  // checks if value is an array of strings matching the markdown url patterns (e.g. [[test](http://placekitten.com/200/300), [](http://any.valid.url.com)]\n  static xsdAnyURI(): ValidatorFn {\n    return (control: AbstractControl): { [ key: string ]: boolean } | null => {\n      if (control.value !== undefined) {\n        if (!this.allValuesMatchRegex(control.value, /\\[.*\\]\\(http:\\/\\/([a-zA-Z.0-9]+[\\/]*)+\\)/g)) {\n          return { xsdAnyURI: true };\n        }\n      }\n      return null;\n    };\n  }\n\n  static startsWithValidPrefix(allowedPrefixes: string[]): ValidatorFn {\n    return (control: AbstractControl): { [ key: string ]: boolean } | null => {\n      if (control.value !== undefined) {\n        if (control.value.indexOf(':') === -1) {\n          return { startsWithValidPrefix: true };\n        }\n        const prefix = control.value.trim().substring(0, control.value.indexOf(':'));\n        if (allowedPrefixes.findIndex(it => it === prefix) === -1) {\n          return { startsWithValidPrefix: true };\n        }\n      }\n      return null;\n    };\n  }\n\n\n  private static allValuesMatchRegex(array: any, regex) {\n    let arrayOfImageValues = array;\n    if (!(arrayOfImageValues instanceof Array)) {\n      arrayOfImageValues = [arrayOfImageValues];\n    }\n    for (const stringItem of arrayOfImageValues) {\n      const item = stringItem.startsWith('* ') ? stringItem.substr(2) : stringItem;\n      if (!item || UriConverter.removeWhitespace(item).length === 0) {\n        continue;\n      }\n      if (!item.match(regex)) {\n        continue;\n      }\n      const match = item.match(regex);\n      if (match.length < item.trim().length) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n","export enum UserRole {\n    MEMBER = 'MEMBER',\n    EXPERT = 'EXPERT',\n    AUTHOR = 'AUTHOR',\n    LIBRARIAN = 'LIBRARIAN',\n    ADMIN = 'ADMIN'\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ToasterService } from 'angular2-toaster';\nimport { Observable } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { PAUser } from '../_models/user.model';\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\nexport class UserService {\n\n  private userInfoEndpoint: string;\n  private repoEndpoint: string;\n  private serviceEndpoint: string;\n\n  constructor(\n    private http: HttpClient,\n    private toasterService: ToasterService\n  ) {\n    this.repoEndpoint = environment.repositoryUrl;\n    this.userInfoEndpoint = environment.userInfoUrl;\n    this.serviceEndpoint = '/users';\n  }\n\n  /**\n  * GET\n  */\n  public getAllUsers(): Observable<PAUser[]> {\n    return this.http.get<PAUser>(this.repoEndpoint + this.serviceEndpoint).pipe(\n      map(result => {\n        return result\n      }),\n      catchError(error => {\n        this.toasterService.pop('error', 'Getting user list', error)\n        return [];\n      }),\n    )\n  }\n\n  public getUserWithToken(): Observable<any> {\n    return this.http.get<any>(this.userInfoEndpoint).pipe(\n      map(result => {\n        return result\n      }),\n      catchError(error => {\n        console.error(error);\n        this.toasterService.pop('error', 'Getting user info did not work: ', error)\n        return [];\n      }),\n    )\n  }\n\n  /**\n  * CREATE\n  */\n  public createUser(user: PAUser): Observable<PAUser> {\n    \n    return this.http.post<any>(this.repoEndpoint + this.serviceEndpoint, user).pipe(\n      map(result => {\n        this.toasterService.pop('success', 'Created new user')\n        return result\n      }),\n      catchError(error => {\n        this.toasterService.pop('error', 'Could not create new user: ', error)\n        return null;\n      }),\n    )\n  }\n\n  public updateUser(user: PAUser): Observable<PAUser> {\n    \n    return this.http.put<any>(this.repoEndpoint + this.serviceEndpoint + `/${user.id}`, user).pipe(\n      map(result => {\n        this.toasterService.pop('success', 'Updated user')\n        return result\n      }),\n      catchError(error => {\n        this.toasterService.pop('error', 'Could not update user: ', error)\n        return null;\n      }),\n    )\n  }\n\n  public deleteUser(user: PAUser): Observable<PAUser> {\n    \n    return this.http.delete<any>(this.repoEndpoint + this.serviceEndpoint + `/${user.id}`).pipe(\n      map(result => {\n        this.toasterService.pop('success', 'Deleted user')\n        return result\n      }),\n      catchError(error => {\n        this.toasterService.pop('error', 'Could not delete user: ', error)\n        return null;\n      }),\n    )\n  }\n}\n","import { BehaviorSubject } from 'rxjs';\nimport { PAUser } from '../_models/user.model';\n\nexport class UserStore {\n    private _user: BehaviorSubject<PAUser> = new BehaviorSubject(null);\n\n    get user() {\n      return this._user.asObservable();\n    }\n\n    addUser(user: PAUser) {\n      this._user.next(user);\n    }\n\n    resetUser() {\n      this._user.next(null);\n    }\n}\n","// Models\nexport { UserRole } from './_models/role.model'\nexport { PAUser } from './_models/user.model';\n\n// Services\nexport { UserService } from './_services/user.service';\n\n// Store\nexport { UserStore } from './_store/user.store';\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { QueriedData } from '../service/data/QueriedData.interface';\nimport { globals } from '../../globals';\n\nexport class UriConverter {\n\n  static encodeUri(uri: string): string {\n    return encodeURIComponent(uri);\n  }\n\n  static doubleEncodeUri(uri: string): string {\n    return encodeURIComponent(encodeURIComponent(uri));\n  }\n\n  static decodeUri(id: string): string {\n    return decodeURIComponent(id);\n  }\n\n  static doubleDecodeUri(id: string): string {\n    return decodeURIComponent(decodeURIComponent(id));\n  }\n\n  static getFileName(iri: string): string {\n    return iri.split('#')[0];\n  }\n\n  static extractIndividualNameFromIri(iri: string): string {\n    return iri.includes('#') ? iri.split('#')[1] :\n      iri.split('/')[iri.split('/').length - 1];\n  }\n\n  static getURL(patternlanguageIri: string) {\n    if (patternlanguageIri.indexOf(globals.pathConstants.patternLanguages) !== -1) {\n      return patternlanguageIri;\n\n    }\n    return this.getFileName(patternlanguageIri);\n  }\n\n  static removeWhitespace(text: string): string {\n    return text.replace(/\\s/g, '');\n  }\n\n\n  static extractDataValue(pl: QueriedData[]): string[] {\n    return pl.map((graph: QueriedData) => {\n      return this.getURL(graph.value);\n    });\n  }\n\n  static getSectionName(patternSection: string) {\n    return patternSection.split('#has')[1];\n  }\n\n  static isIri(name: string): boolean {\n    return (name.indexOf('#') >= 0) || (name.indexOf('://') >= 0) || (name.indexOf('purl.org/patternpedia') >= 0);\n  }\n\n\n  static getPatternListIriForPLIri(plIri: string): string {\n    return this.getFileName(plIri) + '/' + this.extractIndividualNameFromIri(this.getFileName(plIri)).toLowerCase() + '-Patterns';\n\n  }\n\n  static getRelationListIriForPLIri(plIri: string): string {\n    return this.getFileName(plIri) + '/' + this.extractIndividualNameFromIri(this.getFileName(plIri)).toLowerCase() + '-Relations';\n  }\n\n  static getGithubAPIURLForURI(iri: string): string {\n    if (iri.indexOf(globals.pathConstants.patternLanguages) !== -1 || iri.indexOf(globals.pathConstants.patternViews) !== -1) {\n      const foldername = iri.indexOf(globals.pathConstants.patternLanguages) !== -1\n        ? globals.pathConstants.patternLanguages : globals.pathConstants.patternViews;\n      let relativePath = this.getFileName(iri.split(foldername + '/')[1]);\n      // is this a request for the base file of a patternlanguage add the patternlanguage identifier again (convention)\n      relativePath = relativePath.indexOf('/') !== -1 ? relativePath : `${relativePath}/${relativePath}`;\n      return `${globals.urlGithubAPI}/${foldername}/${relativePath}.ttl`;\n    }\n    if (iri.indexOf('patternatlas') !== -1) {\n      return `${globals.urlGithubAPI}/patternatlas.ttl`;\n    }\n    return iri;\n  }\n}\n","<pp-action-button-bar [goBackButton]=\"false\"\n                      [addButtonText]=\"'Add Design Model'\"\n                      (addClicked)=\"addDesignModel()\">\n</pp-action-button-bar>\n\n\n<div class=\"container\">\n  <mat-card *ngFor=\"let designModel of designModelResponse?._embedded?.designModels\"\n            [routerLink]=\"[designModel.id]\" class=\"landing-card\">\n\n    <mat-card-header>\n      <img mat-card-avatar [src]=\"designModel?.logo || '//via.placeholder.com/50x50'\" alt=\"\"/>\n\n      <mat-card-title>\n        {{designModel.name}}\n      </mat-card-title>\n    </mat-card-header>\n\n    <img mat-card-image [src]=\"designModel?.logo || '//via.placeholder.com/200x300'\" alt=\"\"/>\n\n    <mat-card-actions>\n      <button mat-stroked-button color=\"primary\">\n        <mat-icon>pageview</mat-icon>\n        View\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {\n  CreateEditComponentDialogType,\n  CreateEditPatternLanguageComponent\n} from '../../../core/component/create-edit-pattern-language/create-edit-pattern-language.component';\nimport { switchMap, tap } from 'rxjs/operators';\nimport { DialogPatternLanguageResult } from '../../../pattern-language-management/data/DialogPatternLanguageResult.interface';\nimport { PatternContainer } from '../../../core/model/hal/pattern-container.model';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PatternLanguageService } from '../../../core/service/pattern-language.service';\nimport { ToasterService } from 'angular2-toaster';\nimport { Observable } from 'rxjs';\nimport { DesignModelService } from '../../service/design-model.service';\nimport { DesignModelResponse } from '../../model/hal/design-model-response';\n\n\n@Component({\n  selector: 'pp-design-model-management',\n  templateUrl: './design-model-management.component.html',\n  styleUrls: ['./design-model-management.component.scss']\n})\nexport class DesignModelManagementComponent implements OnInit {\n\n  public designModelResponse;\n\n\n  constructor(private designModelService: DesignModelService,\n              private dialog: MatDialog,\n              private patternLanguageService: PatternLanguageService,\n              private toastService: ToasterService) {\n  }\n\n\n  ngOnInit() {\n    this.getData().subscribe();\n  }\n\n\n  private getData(): Observable<DesignModelResponse> {\n    return this.designModelService.getDesignModels().pipe(tap((modelResponse) => {\n      this.designModelResponse = modelResponse;\n    }));\n  }\n\n\n  addDesignModel() {\n    const dialogRef = this.dialog.open(CreateEditPatternLanguageComponent, { data: { componentDialogType: CreateEditComponentDialogType.DESIGN_MODEL } });\n    let model;\n\n    // Save design model when user presses save\n    (<CreateEditPatternLanguageComponent>dialogRef.componentInstance)\n      .saveClicked\n      .pipe(\n        tap(\n          (result: DialogPatternLanguageResult) => {\n            model = <PatternContainer>result.dialogResult;\n          }\n        ),\n        switchMap(() => this.designModelService.saveDesignModel(this.designModelResponse._links.designModels.href, model)),\n        switchMap(() => this.getData())\n      )\n      .subscribe(\n        res => {\n          if (res) {\n            this.toastService.pop('success', 'Created Design Model');\n          }\n        }\n      );\n  }\n}\n","<pp-action-button-bar [firstAddButton]=\"false\">\n  <button mat-raised-button class=\"action-button-with-margin\" (click)=\"reloadGraph()\" color=\"accent\">\n    <mat-icon>autorenew</mat-icon>\n    Reload\n  </button>\n</pp-action-button-bar>\n\n<pp-graph-display *ngIf=\"!isLoading\"\n                  [data]=\"graphData\"\n                  (addedEdge)=\"addedEdgeInGraphView($event)\"\n                  [showPatternLanguageName]=\"true\">\n</pp-graph-display>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { DesignModelService } from '../../service/design-model.service';\nimport { PatternLanguageService } from '../../../core/service/pattern-language.service';\nimport { GraphInputData } from '../../../core/model/graph-input-data.interface';\n\n\n@Component({\n  selector: 'pp-design-model-renderer',\n  templateUrl: './design-model-renderer.component.html',\n  styleUrls: ['./design-model-renderer.component.scss']\n})\nexport class DesignModelRendererComponent implements OnInit {\n\n  isLoading = true;\n\n\n  graphData: GraphInputData = {\n    patterns: [],\n    edges: [],\n    copyOfLinks: [],\n    patternLanguage: null,\n    patternContainer: null,\n    patternLanguages: []\n  };\n\n\n  private designModelId: [];\n\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private designModelService: DesignModelService,\n              private patternLanguageService: PatternLanguageService) {\n  }\n\n\n  ngOnInit(): void {\n    this.patternLanguageService.getPatternLanguages().subscribe(patternLanguages => {\n      this.patchGraphData({\n        patternLanguages: patternLanguages\n      });\n\n      this.isLoading = false;\n    });\n\n\n    this.activatedRoute.params.subscribe(pathParams => {\n      this.loadDesignModel(pathParams.designModelUri);\n    });\n  }\n\n\n  private patchGraphData(data?: object): void {\n    if (data) {\n      Object.keys(data).forEach(key => {\n        this.graphData[ key ] = data[ key ];\n      });\n    }\n\n    console.debug('New graphData is', this.graphData);\n  }\n\n\n  private loadDesignModel(id): void {\n    this.designModelId = id;\n    this.designModelService.getPatternContainerByUuid(id).subscribe(patternContainer => {\n      console.debug('Fetched pattern container is:', patternContainer);\n\n      this.patchGraphData({ patternContainer: patternContainer, patterns: patternContainer });\n    });\n  }\n\n\n  addedEdgeInGraphView(event) {\n    console.error('TODO: IMPLEMENT', this);\n  }\n\n\n  reloadGraph() {\n    this.loadDesignModel(this.designModelId);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DesignModelManagementComponent } from './component/design-model-management/design-model-management.component';\nimport { DesignModelRendererComponent } from './component/design-model-renderer/design-model-renderer.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DesignModelManagementComponent\n  },\n  {\n    path: ':designModelUri',\n    component: DesignModelRendererComponent\n  },\n];\n\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DesignModelRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DesignModelRoutingModule } from './design-model-routing.module';\nimport { CoreModule } from '../core/core.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DesignModelManagementComponent } from './component/design-model-management/design-model-management.component';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { DesignModelService } from './service/design-model.service';\nimport { DesignModelRendererComponent } from './component/design-model-renderer/design-model-renderer.component';\nimport { GraphDataService } from '../core/service/graph-data.service';\nimport { PatternViewService } from '../core/service/pattern-view.service';\n\n\n@NgModule({\n  declarations: [\n    DesignModelManagementComponent,\n    DesignModelRendererComponent\n  ],\n  imports: [\n    CommonModule,\n    CoreModule,\n    DesignModelRoutingModule,\n    ReactiveFormsModule,\n    MatBadgeModule,\n    MatButtonModule,\n    MatCardModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatListModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatTreeModule\n  ],\n  providers: [\n    DesignModelService,\n    { provide: GraphDataService, useClass: DesignModelService }\n  ]\n})\nexport class DesignModelModule {\n}\n","/*\n * Copyright (c) 2020 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { globals } from '../../globals';\nimport { EMPTY, forkJoin, Observable, of } from 'rxjs';\nimport Pattern from '../../core/model/hal/pattern.model';\nimport { PatternContainer } from '../../core/model/hal/pattern-container.model';\nimport { DirectedEdgeModel } from '../../core/model/hal/directed-edge.model';\nimport { UndirectedEdgeModel } from '../../core/model/hal/undirected-edge.model';\nimport { LinksToOtherPattern } from '../../pattern-view-management/add-to-view/add-to-view.component'; // TODO\nimport { AddDirectedEdgeToViewRequest } from '../../core/model/hal/add-directed-edge-to-view-request';\nimport { AddUndirectedEdgeToViewRequest } from '../../core/model/hal/add-undirected-edge-to-view-request';\nimport { Embedded } from '../../core/model/hal/embedded';\nimport { UndirectedEdesResponse } from '../../core/model/hal/undirected-edes-response.interface';\nimport { DirectedEdesResponse } from '../../core/model/hal/directed-edes-response.interface';\nimport { GraphNode } from '../../core/component/graph-display/graph-display.component';\nimport { DesignModel } from '../model/hal/design-model';\nimport { DesignModelResponse } from '../model/hal/design-model-response';\nimport { GraphDataService } from '../../core/service/graph-data.service';\nimport { map } from 'rxjs/operators';\n\n\n@Injectable()\nexport class DesignModelService implements GraphDataService {\n\n  private repoEndpoint = globals.repoEndpoint;\n\n  constructor(private http: HttpClient) {\n  }\n\n\n  getDesignModels(): Observable<DesignModelResponse> {\n    return this.http.get<DesignModelResponse>(this.repoEndpoint + '/designModels');\n  }\n\n\n  saveDesignModel(url: string, view: PatternContainer) {\n    return this.http.post<DesignModelResponse>(url, view, { observe: 'response' });\n  }\n\n  addPatterns(url: string, patterns: Pattern[]): Observable<any> {\n    const observables = patterns.map(pat => this.http.post<DesignModelResponse>(url, pat, { observe: 'response' }));\n    return observables.length > 0 ? forkJoin(observables) : of(null);\n  }\n\n  getPatternContainerByUri(uri: string): Observable<PatternContainer> {\n    return this.getDesignModelByUrl(uri).pipe(\n      map(designModel => {\n        const patternContainer = new PatternContainer();\n        patternContainer.patterns = designModel._embedded.patterns;\n        patternContainer._links = designModel._links;\n        return patternContainer;\n      })\n    );\n  }\n\n  getPatternContainer(url: string): Observable<PatternContainer> {\n    return this.getDesignModelByUrl(url).pipe(\n      map(designModel => {\n        const patternContainer = new PatternContainer();\n        patternContainer.patterns = designModel._embedded.patterns;\n        patternContainer._links = designModel._links;\n        return patternContainer;\n      })\n    );\n  }\n\n  getPatternContainerByUuid(uuid: string): Observable<PatternContainer> {\n    return this.getDesignModelByUuid(uuid).pipe(\n      map(designModel => {\n        const patternContainer = new PatternContainer();\n        patternContainer.patterns = designModel._embedded ? designModel._embedded.patterns : [];\n        patternContainer._links = designModel._links;\n        return patternContainer;\n      })\n    );\n  }\n\n  getDesignModelByUrl(url: string): Observable<DesignModel> {\n    return this.http.get<DesignModel>(url);\n  }\n\n  getDesignModelByUuid(uuid: string): Observable<DesignModel> {\n    return this.http.get<DesignModel>(this.repoEndpoint + '/designModels/' + uuid + '/patterns');\n  }\n\n  createLink(\n    url,\n    edge: DirectedEdgeModel | UndirectedEdgeModel | AddDirectedEdgeToViewRequest | AddUndirectedEdgeToViewRequest\n  ): Observable<HttpResponse<Object>> {\n    return this.http.post(url, edge, { observe: 'response' });\n  }\n\n  addLinks(patternContainer: PatternContainer, items: LinksToOtherPattern[]): Observable<any> {\n\n    const observables = items\n      .map(item => item.type === 'directed' ?\n        this.http.post(patternContainer._links.directedEdges.href, new AddDirectedEdgeToViewRequest(<DirectedEdgeModel>item.edge), { observe: 'response' }) :\n        this.http.post(\n          patternContainer._links.undirectedEdges.href,\n          new AddUndirectedEdgeToViewRequest(<UndirectedEdgeModel>item.edge),\n          { observe: 'response' }\n        )\n      );\n    return observables.length > 0 ? forkJoin(observables) : EMPTY;\n  }\n\n  getDirectedEdges(patternContainer: PatternContainer): Observable<Embedded<DirectedEdesResponse>> {\n    return this.http.get<Embedded<DirectedEdesResponse>>(patternContainer._links.directedEdges.href);\n  }\n\n  getUndirectedEdges(patternContainer: PatternContainer): Observable<Embedded<UndirectedEdesResponse>> {\n    return this.http.get<Embedded<UndirectedEdesResponse>>(patternContainer._links.undirectedEdges.href);\n  }\n\n  deleteLink(patternLink: any): Observable<any> {\n    return this.http.delete(patternLink);\n  }\n\n  saveGraph(patternContainer: PatternContainer, nodeList: any[]) {\n    return this.http.post<any>(patternContainer._links.patterns.href, nodeList, { observe: 'response' });\n  }\n\n  getGraph(patternContainer: PatternContainer): Observable<{ graph: Array<GraphNode> }> {\n    const graphNodes = [];\n\n    patternContainer.patterns.forEach(pattern => {\n      let x = 0;\n      let y = 0;\n\n      try {\n        x = pattern[ 'graphData' ][ 'x' ];\n        y = pattern[ 'graphData' ][ 'y' ];\n      } catch (e) {\n      }\n\n      graphNodes.push({\n        id: pattern.id,\n        title: pattern.name,\n        type: 'default',\n        x: x,\n        y: y,\n        patternLanguageId: pattern.patternLanguageId\n      });\n    });\n\n    return of({ graph: graphNodes });\n  }\n}\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nexport const globals = {\n  urlPatternRepoOntology: 'https://purl.org/patternpedia',\n  iriPatternRepoInstance: 'https://purl.org/patternpedia#LinkedOpenPatterns',\n  urlGithubAPI: 'https://api.github.com/repos/PatternPedia/patternpediacontent/contents',\n  loadOntologyLocally: true,\n  repoEndpoint: 'http://localhost:8080',\n  featureToggles: {\n    designModel: false,\n    patternCandidate: true,\n    issue: true,\n  },\n  pathConstants: {\n    patternLanguages: 'pattern-languages',\n    patternLanguageId: 'pattern-language-id',\n    patternViews: 'pattern-views',\n    patternViewURI: 'pattern-view-uri',\n    designModels: 'design-models'\n  }\n};\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatButtonModule\n  ],\n  exports: [],\n  entryComponents: []\n})\nexport class GraphModule {\n}\n","/**\n * Class representing the information of a group of patterns.\n */\nexport default class Group {\n    /** the uri of the group from the store */\n    uri: string;\n\n    /** the name of the group for labeling */\n    groupName: string;\n\n    /** list of patterns ids of included patterns */\n    patterns: Array<string>;\n}\n","export * from './node';\nexport * from './link';\nexport * from './network-graph';\nexport * from './node-info';\nexport * from './group';\nexport * from './pattern-relation';\nexport * from './pattern';\n","import { Node } from './node';\n\nexport class Link implements d3.SimulationLinkDatum<Node> {\n  index?: number;\n\n  // the id of the link as defined from the triple\n  id?: string;\n\n  // the source node\n  source: Node | string | number;\n  // the target node\n  target: Node | string | number;\n\n  // the type of the relation, e.g. 'see also'\n  weight: string;\n  description: string[];\n\n  // state of the link\n  selected: boolean;\n  preview: boolean;\n  hide: boolean;\n\n  constructor(source: string | number | Node, target: string | number | Node, weight: string = 'see also', description?: string[]) {\n    this.source = source;\n    this.target = target;\n\n    this.weight = weight;\n    this.description = description;\n  }\n}\n","import { EventEmitter } from '@angular/core';\nimport { Link } from './link';\nimport { Node } from './node';\nimport * as d3 from 'd3';\nimport GraphConfig from './graph-config';\n\nconst DEFAULT_CONFIG = {\n  charge: -20,\n  xStrength: 1,\n  yStrength: 1,\n  linkDistance: 300,\n  linkStrength: 0.5\n};\n\nexport class NetworkGraph {\n    public ticker: EventEmitter<d3.Simulation<Node, Link>> = new EventEmitter();\n    public simulation: d3.Simulation<any, any>;\n\n    public nodes: any[] = [];\n    public links: any[] = [];\n\n    config: GraphConfig;\n\n    constructor(nodes, links, options: { width, height }, config?: GraphConfig) {\n      this.nodes = nodes;\n      this.links = links;\n\n      this.config = config || DEFAULT_CONFIG;\n\n      this.initSimulation(options);\n    }\n\n\n    initSimulation(options) {\n      if (!options || !options.width || !options.height) {\n        throw new Error('missing options when initializing simulation');\n      }\n\n      /** Creating the simulation */\n      if (!this.simulation) {\n        const ticker = this.ticker;\n\n        this.simulation = d3.forceSimulation()\n          .force('charge', d3.forceManyBody().strength(this.config.charge).distanceMax(100))\n          .force('charge', d3.forceManyBody().strength(15))\n          .force('center', d3.forceCenter(options.width / 2, options.height / 2))\n          .force('link', d3.forceLink().id((d) => d['id']))\n          .force('collision', d3.forceCollide().radius(() => 75));\n        this.simulation.stop();\n\n        // set data\n        this.simulation.nodes(this.nodes);\n        this.simulation.force('link')['links'](this.links && this.links.length ? this.links : []);\n\n        // Connecting the d3 ticker to an angular event emitter\n        this.simulation.on('end', function () {\n          ticker.emit();\n        });\n\n        console.log('start graph force simulation');\n        this.simulation.alpha(1).alphaMin(0.25).restart();\n      }\n\n    }\n\n}\n","\n/**\n * Defines a relation between two patterns.\n */\nexport interface Relation {\n  /** the id of the relation itself */\n  relationId: string;\n  /** the label that will be displayed for this link entry, e.g. the name of there referenced patterns */\n  label: string;\n  /** the id of the referenced patterns */\n  patternId: string;\n  /** the direction of the relation as seen from the current patterns */\n  direction: 'outgoing' | 'incoming';\n  /** whether there are more details about this relation or not. Will be requested separately */\n  hasDescription: boolean;\n}\n\n/**\n * Contains relations from a certain patterns language.\n */\nexport interface LanguageRelation {\n  /** the id of the language */\n  languageId: string;\n  /** the name of the language that will be displayed */\n  languageName: string;\n  /** relations of the patterns within that language */\n  relations: Array<Relation>;\n}\n\n/**\n * Contains the informations displayed in the Node-Infobox component.\n */\nexport class NodeInfo {\n  /** name of the patterns */\n  name: string;\n  /** group name */\n  group?: string;\n  /** summary set by corresponding module */\n  summary: string;\n  /** relations grouped by languages */\n  languageRelations: Array<LanguageRelation>;\n}\n","\nexport class Node implements d3.SimulationNodeDatum {\n  // optional - defining optional implementation properties - required for relevant typing assistance\n  index?: number;\n  x?: number;\n  y?: number;\n  vx?: number;\n  vy?: number;\n  fx?: number | null;\n  fy?: number | null;\n\n  // the id of the patterns\n  id: string;\n\n  // the name of the patterns which will be displayed\n  name: string;\n  // color of the node\n  color?: string;\n\n  // status of the node\n  selected: boolean;\n  preview: boolean;\n  hide: boolean;\n\n  constructor(id: string) {\n    this.id = id;\n  }\n}\n","\nexport class PatternRelation {\n  id: string;\n  sourceId: string;\n  targetId: string;\n  weight?: string;\n  description?: Array<string>;\n  isCLR: boolean;\n}\n","import { PatternRelation } from '.';\nimport UriEntity from '../../core/model/hal/uri-entity.model';\n\nexport class Pattern extends UriEntity {\n\n    relations?: Array<PatternRelation>;\n    // whether this patterns has any relations to patterns from other languages\n    hasClrs?: boolean;\n}\n","import { Injectable } from '@angular/core';\nimport { NetworkGraph, Node } from '../model';\nimport * as d3 from 'd3';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class D3Service {\n\n  constructor() { }\n\n  getNetworkGraph(nodes: any, links: any, options: { width: number, height: number }): NetworkGraph {\n    const ng = new NetworkGraph(nodes, links, options);\n    return ng;\n  }\n\n  applyZoomableBehaviour(svgElement, containerElement) {\n    let svg, container, zoomed, zoom;\n\n    svg = d3.select(svgElement);\n    container = d3.select(containerElement);\n\n    zoomed = () => {\n      const transform = d3.event.transform;\n      container.attr('transform', 'translate(' + transform.x + ',' + transform.y + ') scale(' + transform.k + ')');\n    };\n\n    zoom = d3.zoom().on('zoom', zoomed);\n    svg.call(zoom);\n  }\n\n  applyDraggableBehaviour(element, node: Node, graph: NetworkGraph) {\n    const d3element = d3.select(element);\n\n    function started() {\n      /** Preventing propagation of dragstart to parent elements */\n      d3.event.sourceEvent.stopPropagation();\n\n      if (!d3.event.active) {\n        graph.simulation.alphaTarget(0.3).restart();\n      }\n\n      d3.event.on('drag', dragged).on('end', ended);\n\n      function dragged() {\n        node.fx = d3.event.x;\n        node.fy = d3.event.y;\n      }\n\n      function ended() {\n        if (!d3.event.active) {\n          graph.simulation.alphaTarget(0);\n        }\n\n        node.fx = null;\n        node.fy = null;\n      }\n    }\n\n    d3element.call(d3.drag()\n      .on('start', started));\n  }\n}\n","<pp-navigate-back></pp-navigate-back>\n<h2>\n  Add a new pattern to {{patternLanguage?.name}}\n</h2>\n<div mat-dialog-content [formGroup]=\"iconForm\" style=\"width: 100%\">\n  <div fxLayout=\"column\">\n    <mat-card fxLayout=\"column\" fxLayoutAlign=\"space-around\">\n      <div fxLayout=\"row\">\n        <mat-form-field class=\"full-width\" appearance=\"outline\" style=\"width: 24em\" [floatLabel]=\"'always'\">\n          <mat-label>Icon URL</mat-label>\n          <input matInput formControlName=\"iconUrl\" placeholder=\"Enter URL of Icon\" type=\"url\">\n          <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\" *ngIf=\"iconPreviewVisible\">\n            <span class=\"label-preview\">Icon-Preview: </span>\n            <div mat-card-avatar #iconPreview\n                 [ngStyle]=\"{ 'background-image': 'url(' + iconUrl?.value + ')'}\"\n                 class=\"example-header-image\"></div>\n          </div>\n          <mat-error *ngIf=\"wasSaveButtonClicked && iconUrl?.hasError('pattern')\">Please insert a valid URL.\n          </mat-error>\n        </mat-form-field>\n      </div>\n\n      <div class=\"parent \">\n\n        <div class=\"item editor-preview-container\">\n          <td-text-editor ppEmitOnChange (onKeyup)=\"onChangeMarkdownText()\" class=\"markdownEditor\"\n                          [(value)]=\"previousTextEditorValue\" [options]=\"options\"\n                          #textEditor\n                          id=\"textEditor\"></td-text-editor>\n        </div>\n\n        <div class=\"item last\">\n\n          <div id=\"preview\"></div>\n\n          <mat-error *ngIf=\"wasSaveButtonClicked && errorMessages\">Found errors in the following sections:\n            <div *ngFor=\"let message of errorMessages\">\n              <span>{{message}}<br></span>\n            </div>\n          </mat-error>\n\n        </div>\n      </div>\n    </mat-card>\n  </div>\n</div>\n<button [disabled]=\"iconUrl?.hasError('pattern')\" (click)=\"save()\" class=\"save-button\" mat-raised-button color=\"primary\" style=\"float: right\"><i\n  class=\"material-icons\">save</i>Save\n</button>\n","import { ChangeDetectorRef, Component, NgZone, OnInit, ViewChild } from '@angular/core';\nimport { TdTextEditorComponent } from '@covalent/text-editor';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as marked from 'marked';\nimport { TokensList } from 'marked';\nimport Pattern from '../../core/model/pattern.model';\nimport { ToasterService } from 'angular2-toaster';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidationErrors, Validators } from '@angular/forms';\nimport { ValidationService } from '../../core/service/validation.service';\nimport { PatternLanguageService } from '../../core/service/pattern-language.service';\nimport PatternLanguage from '../../core/model/hal/pattern-language.model';\nimport PatternSectionSchema from '../../core/model/hal/pattern-section-schema.model';\nimport * as MarkdownIt from 'markdown-it';\nimport * as markdownitKatex from 'markdown-it-katex';\nimport { PatternService } from '../../core/service/pattern.service';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/internal/operators';\nimport { globals } from '../../globals';\n\n\n@Component({\n  selector: 'pp-create-pattern',\n  templateUrl: './create-pattern.component.html',\n  styleUrls: ['./create-pattern.component.scss']\n})\nexport class CreatePatternComponent implements OnInit {\n\n  iconForm: FormGroup;\n  patterns: Array<Pattern>;\n  patternLanguageId: string;\n  iconPreviewVisible = false;\n  wasSaveButtonClicked = false;\n  patternValuesFormGroup: FormGroup;\n  previousTextEditorValue = '# Pattern name';\n  options: any = {\n    // todo: hide the preview button because it forces fullscreen mode (and destroys our page layout)\n  };\n  errorMessages: Array<string>;\n  patternLanguage: PatternLanguage;\n  @ViewChild('textEditor') private _textEditor: TdTextEditorComponent;\n  private sections: Array<string>;\n  private markdown;\n  private patternName: string;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private cdr: ChangeDetectorRef,\n              private toastService: ToasterService,\n              private patternLanguageService: PatternLanguageService,\n              private patternService: PatternService,\n              private router: Router,\n              private zone: NgZone,\n              private _fb: FormBuilder) {\n  }\n\n  get iconUrl(): AbstractControl {\n    return this.iconForm.get('iconUrl');\n  }\n\n  static isListItem(i: number, sectionIndex: number, lines: marked.TokensList): boolean {\n    for (let index = sectionIndex + 1; index < i; index++) {\n      if (lines[ index ].type === 'list_item_start') {\n        return true;\n      }\n    }\n    return false;\n  }\n\n\n  ngOnInit() {\n    this.patternLanguageId = this.activatedRoute.snapshot.paramMap.get(globals.pathConstants.patternLanguageId);\n    this.markdown = new MarkdownIt();\n    this.markdown.use(markdownitKatex);\n\n    this.patternLanguageService.getPatternLanguageByID(this.patternLanguageId).subscribe((pl: PatternLanguage) => {\n      this.patternLanguage = pl;\n      this.sections = this.patternLanguage.patternSchema ?\n        this.patternLanguage.patternSchema.patternSectionSchemas.map((schema: PatternSectionSchema) => schema.label) : [];\n      this.initTextEditor();\n      this.initFormGroup();\n    });\n\n    const urlRegex = /\\b((?:[a-z][\\w-]+:(?:\\/{1,3}|[a-z0-9%])|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}\\/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()\\[\\]{};:'\".,<>?«»“”‘’]))/i;  // eslint-disable-line max-len\n    this.iconForm = this._fb.group({\n      iconUrl: ['', [Validators.pattern(urlRegex)]]\n    });\n\n    this.iconUrl.valueChanges.pipe(debounceTime(1000), distinctUntilChanged()).subscribe((urlValue) => {\n      this.iconPreviewVisible = urlValue && (urlValue.startsWith('https://') || urlValue.startsWith('http://'));\n    });\n  }\n\n  save(): void {\n    this.parsePatternInput();\n\n    this.wasSaveButtonClicked = true;\n    if (this.patternValuesFormGroup && !this.patternValuesFormGroup.valid) {\n      console.log('pattern entries not valid');\n      this.updateFormValidationErrors();\n      return;\n    }\n    // We send null as uri and let the backend create proper uris, which include camel cased names of patterns\n    this.patternService.savePattern(this.patternLanguage._links.patterns.href,\n      {\n        uri: null,\n        name: this.patternName,\n        content: this.patternValuesFormGroup.value,\n        iconUrl: this.iconForm.value.iconUrl\n      }\n    ).subscribe(\n      () => {\n        this.toastService.pop('success', 'Pattern successfully created');\n        this.zone.run(() => {\n          this.router.navigate(['..'], { relativeTo: this.activatedRoute });\n        });\n      },\n      (error) => this.toastService.pop('error', 'Could not create Pattern', error.message)\n    );\n\n  }\n\n  parseMarkdownText(): TokensList {\n    return marked.lexer(this._textEditor.value);\n  }\n\n  onChangeMarkdownText(): void {\n    const currentText = this.parseMarkdownText();\n    if (this.invalidTextEdit(currentText)) {\n      // TODO\n    }\n    if (this.markdown) {\n      document.getElementById('preview').innerHTML = this.markdown.render(this._textEditor.value);\n    }\n  }\n\n  ignoreCaseAndWhitespace(text: string): string {\n    return text.trim().replace(new RegExp('/s', 'g'), '').toLowerCase();\n  }\n\n  addSpaceForCamelCase(text: string): string {\n    return text.replace(/([a-z])([A-Z])/g, '$1 $2');\n  }\n\n  getDefaultTextForSection(section: string): string {\n    return 'Enter your input for this section here.';\n  }\n\n  updateFormValidationErrors(): string {\n    if (this.patternValuesFormGroup.valid) {\n      return '';\n    }\n    this.errorMessages = [];\n    Object.keys(this.patternValuesFormGroup.controls).forEach(key => {\n      const controlErrors: ValidationErrors = this.patternValuesFormGroup.controls[ key ].errors;\n      if (controlErrors != null) {\n        Object.keys(controlErrors).forEach(keyError => {\n          this.errorMessages.push(ValidationService.getMessageForError(key, keyError, controlErrors[ keyError ]));\n        });\n      }\n    });\n  }\n\n  // returns if a user changed the value of the sections headers (which he is not allowed to do)\n  private invalidTextEdit(currentText: marked.TokensList): boolean {\n    if (!this.sections) {\n      return false;\n    }\n    // we should find a corresponding line (= that starts with ## followed by section patternName) for each section\n    for (const section of this.sections) {\n      const indexOfCorrespondingLine = currentText.findIndex(line =>\n        (line.type === 'heading' && line.depth === 2) &&\n        this.ignoreCaseAndWhitespace(line.text) ===\n        this.ignoreCaseAndWhitespace(this.addSpaceForCamelCase(section))\n      );\n      if (indexOfCorrespondingLine === -1) {\n        return true;\n      }\n    }\n    // there should be only one name (= line that starts with # )\n    return !(currentText.filter(it => it.type === 'heading' && it.depth === 1).length === 1) ||\n      // there should be as many second headings as sections (= line that starts with # )\n      !(currentText.filter(it => it.type === 'heading' && it.depth === 2).length === this.sections.length);\n  }\n\n  private parsePatternInput(): void {\n    const lines = this.parseMarkdownText();\n    const patternNameIndex = lines.findIndex((it) => it.type === 'heading' && it.depth === 1);\n    this.patternName = patternNameIndex !== -1 ? lines[ patternNameIndex ][ 'text' ] : '';\n    this.patternLanguage.patternSchema.patternSectionSchemas.forEach((schema: PatternSectionSchema) => {\n      const sectionName = schema.name;\n      const sectionIndex = lines.findIndex((sec) => sec.type === 'heading' && sec.depth === 2 &&\n        this.ignoreCaseAndWhitespace(sec.text) === this.ignoreCaseAndWhitespace(this.addSpaceForCamelCase(sectionName)));\n      if (sectionIndex !== -1) {\n        const sectionContent = [];\n        for (let i = sectionIndex + 1; i < lines.length; i++) {\n          if (lines[ i ].type === 'heading') {\n            break;\n          }\n          if (lines[ i ][ 'text' ]) {\n            // if a list item was parsed before, add it to the text\n            sectionContent.push(i > 0 && CreatePatternComponent.isListItem(i, sectionIndex, lines) ? '* ' + lines[ i ][ 'text' ] : lines[ i ][ 'text' ]);\n          }\n        }\n        if (this.patternValuesFormGroup) {\n          if (this.patternValuesFormGroup.controls[ sectionName ]) {\n            this.patternValuesFormGroup.controls[ sectionName ].setValue(sectionContent.join('\\n'));\n          } else {\n            console.log('missing formcontrol:');\n            console.log(sectionName);\n          }\n        } else {\n          console.error('patternValuesFormGroup is undefined');\n        }\n      }\n    });\n  }\n\n  // init formgroup based on patternschema\n  private initFormGroup() {\n    this.patternValuesFormGroup = new FormGroup({});\n    if (this.patternLanguage && this.patternLanguage.patternSchema && this.patternLanguage.patternSchema.patternSectionSchemas) {\n      this.patternLanguage.patternSchema.patternSectionSchemas.forEach((schema: PatternSectionSchema) => {\n        this.patternValuesFormGroup.addControl(schema.name, new FormControl(''));\n      });\n    }\n  }\n\n  private initTextEditor(): void {\n    for (const section of this.sections) {\n      this.previousTextEditorValue = this.previousTextEditorValue.concat(\n        '\\n ## ' + section + '\\n' + this.getDefaultTextForSection(section));\n    }\n    this._textEditor.value = this.previousTextEditorValue;\n    this.onChangeMarkdownText();\n  }\n}\n","<!-- tab view if there are multiple renderer for the language available -->\n<mat-tab-group *ngIf=\"renderer && renderer.length > 1; else singleRenderer\">\n  <!-- create a new tab for each available renderer -->\n  <mat-tab label=\"{{r.label || 'Tab ' + (i+1)}}\" *ngFor=\"let r of renderer; let i = index\">\n    <mat-card>\n      <ng-template ppPatternContainer [plId]=\"patternLanguageId\" [pId]=\"patternId\" [index]=\"i\">\n      </ng-template>\n    </mat-card>\n  </mat-tab>\n</mat-tab-group>\n\n<!-- else, render everything in a single card -->\n<ng-template #singleRenderer>\n  <mat-card>\n    <ng-template ppPatternContainer [plId]=\"patternLanguageId\" [pId]=\"patternId\"></ng-template>\n  </mat-card>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ComponentRegistryService } from 'src/app/core/service/component-registry.service';\nimport { globals } from '../../globals';\n\n@Component({\n  selector: 'pp-pattern-container',\n  templateUrl: './pattern-container.component.html',\n  styleUrls: ['./pattern-container.component.scss']\n})\nexport class PatternContainerComponent implements OnInit {\n\n  patternLanguageId: string;\n  patternId: string;\n\n  // the list of registered renderer components for the language\n  renderer: Array<any>;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private compRegistry: ComponentRegistryService) {\n  }\n\n  ngOnInit() {\n    this.patternLanguageId = this.activatedRoute.snapshot.paramMap.get(globals.pathConstants.patternLanguageId);\n    this.renderer = this.compRegistry.getRenderingComponents(this.patternLanguageId);\n  }\n}\n","import { OnChanges, SimpleChanges, ChangeDetectorRef } from '@angular/core';\n/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { ComponentFactoryResolver, Directive, Input, OnInit, ViewContainerRef } from '@angular/core';\nimport { ComponentRegistryService } from '../../core/service/component-registry.service';\nimport { PatternRenderingComponentInterface } from '../../core/model/pattern-rendering-component.interface';\nimport { DefaultPatternRendererComponent } from '../../core/default-pattern-renderer/default-pattern-renderer.component';\n\n@Directive({\n  selector: '[ppPatternContainer]'\n})\nexport class PatternContainerDirective implements OnInit, OnChanges {\n\n  @Input() plId: string;\n  @Input() pId: string;\n\n  @Input() index?: number;\n\n  private ref: PatternRenderingComponentInterface;\n\n  constructor(public viewContainerRef: ViewContainerRef,\n              private componentFactoryResolver: ComponentFactoryResolver,\n              private compRegistry: ComponentRegistryService,\n              private cdr: ChangeDetectorRef) {\n  }\n\n  ngOnInit(): void {\n    this.createContent();\n  }\n\n  private createContent(): void {\n    const renderingComponent = this.compRegistry.getPLRenderingComponents(this.plId, this.index);\n\n    const componentFactory = renderingComponent ?\n      this.componentFactoryResolver.resolveComponentFactory(renderingComponent.pcomponent) :\n      this.componentFactoryResolver.resolveComponentFactory(DefaultPatternRendererComponent);\n\n    this.viewContainerRef.clear();\n    const componentRef = this.viewContainerRef.createComponent(componentFactory);\n    this.ref = (<PatternRenderingComponentInterface>componentRef.instance);\n    this.ref.pId = this.pId;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // changes of the langauge itself\n    if (changes['plId'] && JSON.stringify(changes['plId'].currentValue) !== JSON.stringify(changes['plId'].previousValue)) {\n      this.createContent();\n      // this.cdr.detectChanges();\n    }\n    // changes of the pattern\n    if (changes['pId']\n      && this.ref\n      && (JSON.stringify(changes['pId'].currentValue) !== JSON.stringify(changes['pId'].previousValue))) {\n      // this.ref.pId = this.pId;\n      this.cdr.detectChanges();\n    }\n  }\n}\n","<!--\n  ~ Copyright (c) 2018 University of Stuttgart.\n  ~\n  ~ See the NOTICE file(s) distributed with this work for additional\n  ~ information regarding copyright ownership.\n  ~\n  ~ This program and the accompanying materials are made available under the\n  ~ terms of the Eclipse Public License 2.0 which is available at\n  ~ http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n  ~ which is available at https://www.apache.org/licenses/LICENSE-2.0.\n  ~\n  ~ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n  -->\n\n<!-- tab view if there are multiple renderers for the language available -->\n<mat-tab-group *ngIf=\"renderer && renderer.length > 1; else oneOrNoRenderer\">\n  <!-- create a new tab for each available renderer -->\n  <mat-tab label=\"{{r.label || 'Tab ' + (i+1)}}\" *ngFor=\"let r of renderer; let i = index\">\n    <mat-card>\n      <ng-template ppPatternLanguageContainer [patternLanguageId]=\"plEncodedId\" [index]=\"i\"></ng-template>\n    </mat-card>\n  </mat-tab>\n</mat-tab-group>\n\n<!-- else, use default renderers -->\n<ng-template #oneOrNoRenderer>\n  <!--If there is only one renderer registered for this pl, use it: -->\n  <ng-template *ngIf=\"renderer\" ppPatternLanguageContainer [patternLanguageId]=\"plEncodedId\"></ng-template>\n\n  <!--If there is no renderer registered for this pl, take the default one -->\n  <ng-template *ngIf=\"!renderer\" #cardsView ppPatternLanguageContainer [patternLanguageId]=\"plEncodedId\">\n  </ng-template>\n</ng-template>\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ComponentRegistryService } from 'src/app/core/service/component-registry.service';\nimport { globals } from '../../globals';\n\n@Component({\n  selector: 'pp-pattern-language-container',\n  templateUrl: './pattern-language-container.component.html',\n  styleUrls: ['./pattern-language-container.component.scss']\n})\nexport class PatternLanguageContainerComponent implements OnInit {\n\n    // the id of the patterns language\n    plEncodedId: string;\n    // the list of registered renderer components for the language\n    renderer: Array<any>;\n\n    constructor(private activatedRoute: ActivatedRoute,\n                private compRegistry: ComponentRegistryService) {\n    }\n\n    ngOnInit() {\n      // Todo: We use encoded uris just for navigation. Now we can get the Uri from the patternlanguage entity. We have to add redux!\n      this.plEncodedId = this.activatedRoute.snapshot.params[globals.pathConstants.patternLanguageId];\n      this.renderer = this.compRegistry.getRenderingComponents(this.plEncodedId);\n    }\n}\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { ComponentFactoryResolver, Directive, Input, OnInit, ViewContainerRef } from '@angular/core';\nimport { ComponentRegistryService } from '../../core/service/component-registry.service';\nimport { UriConverter } from '../../core/util/uri-converter';\n\n@Directive({\n  selector: '[ppPatternLanguageContainer]'\n})\nexport class PatternLanguageContainerDirective implements OnInit {\n\n  @Input() patternLanguageId: string;\n  @Input() index?: number;\n  @Input() graphView: boolean;\n\n  selectedGraphView: boolean;\n\n  constructor(public viewContainerRef: ViewContainerRef,\n              private componentFactoryResolver: ComponentFactoryResolver,\n              private compRegistry: ComponentRegistryService) {\n  }\n\n  ngOnInit(): void {\n    const componentFactory = this.getRenderingComponent();\n    this.viewContainerRef.clear();\n    const componentRef = this.viewContainerRef.createComponent(componentFactory);\n  }\n\n  private getRenderingComponent() {\n    const renderingComponent = this.compRegistry.getPLRenderingComponents(UriConverter.doubleDecodeUri(this.patternLanguageId.toLowerCase()), this.index);\n    if (renderingComponent) {\n      return this.componentFactoryResolver.resolveComponentFactory(renderingComponent.plcomponent);\n    }\n    // no special renderer, use default renderer:\n    return this.componentFactoryResolver.resolveComponentFactory(this.compRegistry.getPLRenderingComponents('default').plcomponent);\n  }\n}\n","<ng-template #loading>Loading Data ...</ng-template>\n","import { Component, ElementRef, NgZone, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'pp-pattern-language-graph',\n  templateUrl: './pattern-language-graph.component.html',\n  styleUrls: ['./pattern-language-graph.component.scss']\n})\nexport class PatternLanguageGraphComponent implements OnInit {\n\n  @ViewChild('graphWrapper') graph: ElementRef;\n\n  constructor(\n    private zone: NgZone,\n    private router: Router) {\n  }\n\n  private async loadData(): Promise<void> {\n    // load patternpedia\n    return null;\n    //   return this.pos.loadUrisToStore([{value: 'https://purl.org/patternpedia'}])\n    //\n    //   // load language-base-files\n    //   // we first need a query to get all defined languages\n    //       .then(() => {\n    //           const langsQry = `SELECT ?lang\n    //   WHERE {\n    //     pp:LinkedOpenPatterns pp:containsPatternGraph ?lang .\n    //   }`;\n    //           return this.pos.exec(langsQry, ['https://purl.org/patternpedia']);\n    //       })\n    //       .then(langs => {\n    //           const uris = [];\n    //           for (const l of langs) {\n    //               uris.push({value: UriConverter.getFileName(l.lang.value)});\n    //           }\n    //\n    //           return this.pos.loadUrisToStore(uris);\n    //       })\n    //\n    //       // load view-base-files\n    //       // we need all defined languages as graph for the query to get all views\n    //       .then(() => {\n    //           const langsQry = `SELECT ?lang\n    //   WHERE {\n    //     pp:LinkedOpenPatterns pp:containsPatternGraph ?lang .\n    //   }`;\n    //           return this.pos.exec(langsQry, ['https://purl.org/patternpedia']);\n    //       })\n    //       .then(langs => {\n    //           const graphs = ['https://purl.org/patternpedia'];\n    //           for (const l of langs) {\n    //               graphs.push(UriConverter.getFileName(l.lang.value));\n    //           }\n    //\n    //           const viewsQry = `SELECT ?view\n    // WHERE {\n    //   pp:LinkedOpenPatterns pp:containsPatternGraph ?lang .\n    //   ?lang pp:referredByView ?view .\n    // }`;\n    //           return this.pos.exec(viewsQry, graphs);\n    //       })\n    //       .then(views => {\n    //           const uris = [];\n    //           for (const v of views) {\n    //               uris.push({value: UriConverter.getFileName(v.view.value)});\n    //           }\n    //\n    //           return this.pos.loadUrisToStore(uris);\n    //       });\n  }\n\n  ngOnInit() {\n    // load all neccessairy data first: patternpedia, all language-base-files, and all view-base-files\n\n    this.graph.nativeElement.addNode({\n      id: 4,\n      title: 'Hello',\n      type: 'red',\n      x: 0,\n      y: 0,\n    }, true);\n\n    // // get data\n    //     .then(() => {\n    //         return Promise.all([\n    //             // this.nodeLoader.loadContentFromStore(),\n    //             // this.linkLoader.loadContentFromStore()\n    //         ]);\n    //     })\n    //     // set data\n    //     .then(values => {\n    //         this.nodes = Array.from(values[0].values());\n    //         this.links = Array.from(values[1].values());\n    //\n    //         this.data = {\n    //             nodes: this.nodes,\n    //             links: this.links\n    //         };\n    //     });\n  }\n\n  // selectNode(languageId: string) {\n  //     console.log(`Selected: ${languageId}`);\n  //     // navigate to the language\n  //     this.zone.run(() => {\n  //         this.router.navigate(['/patternlanguages', languageId]);\n  //     });\n  // }\n\n}\n","import { GraphModule } from './../graph/graph.module';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PatternLanguageManagementRoutingModule } from './pattern-language-management-routing.module';\nimport { PatternLanguageManagementComponent } from './pattern-language-management/pattern-language-management.component';\nimport { CoreModule } from '../core/core.module';\nimport { PatternLanguageContainerComponent } from './pattern-language-container/pattern-language-container.component';\nimport { PatternLanguageContainerDirective } from './pattern-language-container/pattern-language-container.directive';\nimport { PatternContainerComponent } from './pattern-container/pattern-container.component';\nimport { PatternContainerDirective } from './pattern-container/pattern-container.directive';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { CreatePatternComponent } from './create-pattern/create-pattern.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ProcessOauthCallbackComponent } from '../core/component/process-oauth-callback/process-oauth-callback.component';\nimport { ToasterModule } from 'angular2-toaster';\nimport { PatternLanguageGraphComponent } from './pattern-language-graph/pattern-language-graph.component';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MatListModule } from '@angular/material/list';\nimport { MatRippleModule } from '@angular/material/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GraphDataService } from '../core/service/graph-data.service';\nimport { DesignModelService } from '../design-model-module/service/design-model.service';\nimport { globals } from '../globals';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n\n/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nexport const PL_ROUTES: Routes = [\n  {\n    path: '',\n    component: PatternLanguageManagementComponent\n  }, {\n    path: ':' + globals.pathConstants.patternLanguageId,\n    component: PatternLanguageContainerComponent,\n  }, {\n    path: ':' + globals.pathConstants.patternLanguageId + '/create-patterns',\n    component: CreatePatternComponent,\n  },\n  {\n    path: ':' + globals.pathConstants.patternLanguageId + '/:patternId',\n    component: PatternContainerComponent\n  }\n\n]\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatBadgeModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatCardModule,\n    MatDialogModule,\n    MatTabsModule,\n    MatInputModule,\n    MatChipsModule,\n    MatAutocompleteModule,\n    CoreModule,\n    MatGridListModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatCheckboxModule,\n    ToasterModule,\n    GraphModule,\n    DragDropModule,\n    MatListModule,\n    MatRippleModule,\n    RouterModule.forChild(PL_ROUTES),\n    // PatternLanguageManagementRoutingModule,\n\n  ],\n  declarations: [\n    PatternLanguageManagementComponent,\n    PatternLanguageContainerComponent,\n    PatternLanguageContainerDirective,\n    PatternContainerComponent,\n    PatternContainerDirective,\n    CreatePatternComponent,\n    ProcessOauthCallbackComponent,\n    PatternLanguageGraphComponent\n  ],\n  providers: [\n    { provide: GraphDataService, useClass: DesignModelService }\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class PatternLanguageManagementModule {\n}\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { PatternLanguageService } from '../../core/service/pattern-language.service';\nimport { Observable } from 'rxjs';\nimport PatternLanguageModel from '../../core/model/hal/pattern-language-model.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatternLanguageManagementResolverService implements Resolve<Array<PatternLanguageModel>> {\n\n  constructor(private patternLanguageService: PatternLanguageService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Array<PatternLanguageModel>> {\n    return this.patternLanguageService.getPatternLanguages();\n  }\n\n}\n","<!--\n  ~ Copyright (c) 2018 University of Stuttgart.\n  ~\n  ~ See the NOTICE file(s) distributed with this work for additional\n  ~ information regarding copyright ownership.\n  ~\n  ~ This program and the accompanying materials are made available under the\n  ~ terms of the Eclipse Public License 2.0 which is available at\n  ~ http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n  ~ which is available at https://www.apache.org/licenses/LICENSE-2.0.\n  ~\n  ~ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n  -->\n<pp-action-button-bar [addButtonText]=\"'Add'\" [goBackButton]=\"false\" [reloadButton]=\"true\"\n                      (addClicked)=\"goToPatternLanguageCreation()\"\n                      (reloadClicked)=\"reloadPatternRepo()\"></pp-action-button-bar>\n<div class=\"container\">\n  <mat-card class=\"landing-card\" *ngFor=\"let patternLanguage of patternLanguages\">\n    <mat-card-header>\n      <img *ngIf=\"patternLanguage?.logo && patternLanguage?.logo !== ''; else noImageAvatar\" mat-card-avatar\n           [src]=\"patternLanguage.logo\">\n      <ng-template #noImageAvatar><img mat-card-avatar [src]=\"'//via.placeholder.com/50x50'\"></ng-template>\n\n      <mat-card-title *ngIf=\"patternLanguage?.name && '' !== patternLanguage.name; else noPLName\"\n                      style=\"width: 10rem; word-break: break-word;\">\n        {{patternLanguage.name}}\n      </mat-card-title>\n      <ng-template #noPLName>\n        <mat-card-title style=\"width: 10rem\">\n          No Name Provided\n        </mat-card-title>\n      </ng-template>\n    </mat-card-header>\n    <img mat-card-image *ngIf=\"patternLanguage?.logo && patternLanguage?.logo !== ''; else noImage\"\n         [src]=\"patternLanguage.logo\">\n    <ng-template #noImage><img mat-card-image [src]=\"'//via.placeholder.com/200x300'\"></ng-template>\n    <mat-card-actions>\n      <div style=\"text-align: center\">\n        <button matBadge=\"{{patternLanguage?.patternCount}}\" mat-stroked-button color=\"primary\"\n                (click)=\"navigateToPL(patternLanguage.id)\"><i class=\"material-icons\">pageview</i>View\n        </button>\n      </div>\n    </mat-card-actions>\n  </mat-card>\n</div>\n\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { ChangeDetectorRef, Component, NgZone, OnInit } from '@angular/core';\nimport PatternLanguage from '../../core/model/hal/pattern-language.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ToasterService } from 'angular2-toaster';\nimport { PatternLanguageService } from '../../core/service/pattern-language.service';\nimport {\n  CreateEditComponentDialogType,\n  CreateEditPatternLanguageComponent\n} from '../../core/component/create-edit-pattern-language/create-edit-pattern-language.component';\nimport { DialogPatternLanguageResult } from '../data/DialogPatternLanguageResult.interface';\nimport { map } from 'rxjs/operators';\nimport PatternLanguageModel from '../../core/model/hal/pattern-language-model.model';\n\n@Component({\n  selector: 'pp-pattern-language-management',\n  templateUrl: './pattern-language-management.component.html',\n  styleUrls: ['./pattern-language-management.component.scss']\n})\n\n\nexport class PatternLanguageManagementComponent implements OnInit {\n\n    patternLanguages: Array<PatternLanguageModel>;\n\n    constructor(\n        private cdr: ChangeDetectorRef,\n        private router: Router,\n        private activatedRoute: ActivatedRoute,\n        private zone: NgZone,\n        private dialog: MatDialog,\n        private _cookieService: CookieService,\n        private _toasterService: ToasterService,\n        private patternLanguageService: PatternLanguageService) {\n    }\n\n    // function used to sort the patternlanguages (by name)\n    private static sortPatternLanguages(pl1: PatternLanguageModel, pl2: PatternLanguageModel): number {\n      if (pl1.name > pl2.name) {\n        return 1;\n      }\n      if (pl1.name < pl2.name) {\n        return -1;\n      }\n      return 0;\n    }\n\n    ngOnInit() {\n      this.patternLanguages = Array.from<PatternLanguageModel>(this.activatedRoute.snapshot.data.patternlanguages.values())\n        .sort(PatternLanguageManagementComponent.sortPatternLanguages);\n    }\n\n    // reload the current data from https://purl.org/patternpedia that contains all patternlangauges\n    async reloadPatternRepo() {\n      this.patternLanguageService.getPatternLanguages()\n        .pipe(\n          map(result => result.sort(PatternLanguageManagementComponent.sortPatternLanguages)))\n        .subscribe(result => {\n          this.patternLanguages = result;\n          this._toasterService.pop('success', 'Reloaded Pattern Languages');\n          this.cdr.detectChanges();\n          return result;\n        });\n      this.cdr.detectChanges();\n    }\n\n    navigateToPL(id: string): void {\n      this.zone.run(() => {\n        this.router.navigate([id], { relativeTo: this.activatedRoute });\n      });\n    }\n\n    goToPatternLanguageCreation(): void {\n      const dialogRef = this.dialog.open(CreateEditPatternLanguageComponent, { data: { componentDialogType: CreateEditComponentDialogType.PATTERN_LANGUAGE } });\n\n      // Save PatternLanguage when user presses save\n      (<CreateEditPatternLanguageComponent>dialogRef.componentInstance).saveClicked\n        .subscribe((result: DialogPatternLanguageResult) => {\n          const patternLanguage = <PatternLanguage>result.dialogResult;\n          this.patternLanguageService.savePatternLanguage(patternLanguage)\n            .subscribe(() => {\n              this.patternLanguageService.getPatternLanguages()\n                .pipe(\n                  map(patternLanguageModels => patternLanguageModels.sort(PatternLanguageManagementComponent.sortPatternLanguages)))\n                .subscribe(patternLanguageModels => {\n                  this.patternLanguages = patternLanguageModels;\n                });\n              this._toasterService.pop('success', 'Pattern Language created');\n            }, err => {\n              console.error(err);\n              this._toasterService.pop('error', 'Error occurred', JSON.stringify(err));\n            });\n        });\n    }\n}\n","<h1 mat-dialog-title>{{data.title}}</h1>\n<mat-dialog-content>\n  <p *ngIf=\"data.links?.length === 0 && !data.patternlanguages\">No links found.</p>\n  <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n    <!-- Leaf node -->\n    <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\n      <button mat-icon-button disabled></button>\n      <mat-checkbox class=\"checklist-leaf-node\" [checked]=\"checklistSelection.isSelected(node)\"\n                    (change)=\"todoLeafItemSelectionToggle(node)\"> {{node.item.name}}\n      </mat-checkbox>\n    </mat-tree-node>\n\n    <!-- expandable node -->\n    <mat-tree-node *matTreeNodeDef=\"let node; when: hasChild\" matTreeNodePadding>\n      <button mat-icon-button\n              [attr.aria-label]=\"'toggle ' + node.filename\"\n              (click)=\"loadChildren(node)\"\n              matTreeNodeToggle>\n        <mat-icon class=\"mat-icon-rtl-mirror\">\n          {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n        </mat-icon>\n      </button>\n      <mat-checkbox class=\"checklist-leaf-node\" [checked]=\"descendantsAllSelected(node)\"\n                    [indeterminate]=\"descendantsPartiallySelected(node)\"\n                    (change)=\"todoItemSelectionToggle(node)\"> {{node.item.name}}\n      </mat-checkbox>\n    </mat-tree-node>\n\n    <mat-tree-node *matTreeNodeDef=\"let node; when: isLoadMore\">\n      No patterns found for this language.\n    </mat-tree-node>\n  </mat-tree>\n</mat-dialog-content>\n<mat-dialog-actions>\n  <button mat-button [mat-dialog-close]=\"null\">Close</button>\n  <button mat-button [mat-dialog-close]=\"getPatterns()\">Save\n  </button>\n</mat-dialog-actions>\n","import { Component, Inject } from '@angular/core';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\nimport { BehaviorSubject, forkJoin, Observable } from 'rxjs';\nimport PatternLanguage from '../../core/model/hal/pattern-language.model';\nimport { PatternService } from '../../core/service/pattern.service';\nimport Pattern from '../../core/model/hal/pattern.model';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { PatternRelationDescriptorService } from '../../core/service/pattern-relation-descriptor.service';\nimport { HalLink } from '../../core/model/hal/hal-link.interface';\nimport { DirectedEdgeModel } from '../../core/model/hal/directed-edge.model';\nimport { UndirectedEdgeModel } from '../../core/model/hal/undirected-edge.model';\n\n\n// TODO the following model definitions should be moved in separate classes. As the PatternViewService using the definitions from this component.\n/** Nested node */\nexport class LoadmoreNode {\n  childrenChange = new BehaviorSubject<LoadmoreNode[]>([]);\n\n  get children(): LoadmoreNode[] {\n    return this.childrenChange.value;\n  }\n\n  constructor(public item: PatternLanguage | Pattern | LinksToOtherPattern,\n              public hasChildren = false,\n              public loadMoreParentItem: string | null = null) {\n  }\n}\n\n/** Flat node with expandable and level information */\nexport class LoazyLoadedFlatNode {\n  constructor(public item: Pattern | PatternLanguage | LinksToOtherPattern,\n              public level = 1,\n              public expandable = false,\n              public loadMoreParentItem: string | null = null) {\n  }\n}\n\nexport class LinksToOtherPattern {\n  name: string;\n  links?: HalLink[];\n  type: string;\n  edge?: DirectedEdgeModel | UndirectedEdgeModel;\n  id: string;\n  linkedPattern?: HalLink;\n\n  constructor(edge, isDirectedLink: boolean, patternId: string) {\n    let relatedPatternIsSource;\n\n    if (isDirectedLink) {\n      relatedPatternIsSource = edge.targetPatternId === patternId;\n      this.name = relatedPatternIsSource ? edge.sourcePatternName : edge.targetPatternName;\n      this.id = relatedPatternIsSource ? edge.sourcePatternId : edge.targetPatternId;\n      this.linkedPattern = relatedPatternIsSource ? edge._links.sourcePattern : edge._links.targetPattern;\n      this.type = 'directed';\n      this.edge = edge;\n    } else {\n      edge = <UndirectedEdgeModel>edge;\n      relatedPatternIsSource = edge.pattern2Id === patternId;\n      this.name = relatedPatternIsSource ? edge.pattern1Name : edge.pattern2Name;\n      this.id = relatedPatternIsSource ? edge.pattern1Id : edge.pattern2Id;\n      this.linkedPattern = relatedPatternIsSource ? edge._links.pattern[ 0 ] : edge._links.pattern[ 1 ];\n      this.type = 'undirected';\n      this.edge = edge;\n    }\n\n  }\n}\n\n\n@Component({\n  selector: 'pp-add-to-view',\n  templateUrl: './add-to-view.component.html',\n  styleUrls: ['./add-to-view.component.scss']\n})\nexport class AddToViewComponent {\n  nodeMap = new Map<string, LoazyLoadedFlatNode>();\n  treeControl: FlatTreeControl<LoazyLoadedFlatNode>;\n  treeFlattener: MatTreeFlattener<LoadmoreNode, LoazyLoadedFlatNode>;\n  // Flat tree data source\n  dataSource: MatTreeFlatDataSource<LoadmoreNode, LoazyLoadedFlatNode>;\n  LOAD_MORE = 'LOAD_MORE';\n  nodes: LoadmoreNode[];\n  isLinkModal = false;\n  patternId: string;\n\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: { patternlanguages?: PatternLanguage[], links?: LinksToOtherPattern[], title: string, patternId: string },\n              private patternService: PatternService, private patternRelationDescriptorService: PatternRelationDescriptorService) {\n    this.isLinkModal = !!data.patternlanguages;\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel,\n      this.isExpandable, this.getChildren);\n\n    this.treeControl = new FlatTreeControl<LoazyLoadedFlatNode>(this.getLevel, this.isExpandable);\n\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n    this.nodes = this.isLinkModal ? data.patternlanguages.map(it => new LoadmoreNode(it)) : data.links.map(it => new LoadmoreNode(it));\n    this.patternId = data.patternId ? data.patternId : null;\n    this.dataSource.data = this.nodes;\n\n  }\n\n\n  checklistSelection = new SelectionModel<LoazyLoadedFlatNode>(true /* multiple */);\n  getChildren = (node: LoadmoreNode): Observable<LoadmoreNode[]> => node.childrenChange;\n\n  transformer = (node: LoadmoreNode, level: number) => {\n    const existingNode = this.nodeMap.get(node.item.id);\n\n    if (existingNode) {\n      return existingNode;\n    }\n\n    const newNode = new LoazyLoadedFlatNode(node.item, level, node.hasChildren, node.loadMoreParentItem);\n    this.nodeMap.set(node.item.id, newNode);\n    return newNode;\n  };\n\n  getLevel = (node: LoazyLoadedFlatNode) => node.level;\n\n  isExpandable = (node: LoazyLoadedFlatNode) => node.level === 0;\n\n  hasChild = (_: number, _nodeData: LoazyLoadedFlatNode) => _nodeData.level === 0;\n\n\n  isLoadMore = (_: number, _nodeData: LoazyLoadedFlatNode) => _nodeData.item.id === this.LOAD_MORE; // ?\n\n  /** Load more nodes from data source */\n  loadMore(node: LoazyLoadedFlatNode) {\n\n    const treenode: LoadmoreNode = this.nodes.find(it => it.item.id === node.item.id);\n    if (treenode.children.length > 0) {\n      treenode.childrenChange.next(treenode.children);\n      return;\n    }\n    if (node.item[ 'uri' ]) {\n      this.getPatternsAndAddToTree(<PatternLanguage>node.item, treenode, node);\n\n    } else {\n      this.getRelatedPatternAndAddToTree(<LinksToOtherPattern>node.item, treenode, node);\n    }\n  }\n\n  loadChildren(node: LoazyLoadedFlatNode) {\n    this.loadMore(node);\n  }\n\n  todoLeafItemSelectionToggle(node: any) {\n    this.checklistSelection.toggle(node);\n    this.checkAllParentsSelection(node);\n  }\n\n  /* Checks all the parents when a leaf node is selected/unselected */\n  checkAllParentsSelection(node: LoazyLoadedFlatNode): void {\n    let parent: LoazyLoadedFlatNode | null = this.getParentNode(node);\n    while (parent) {\n      this.checkRootNodeSelection(parent);\n      parent = this.getParentNode(parent);\n    }\n  }\n\n\n  /** Whether part of the descendants are selected */\n  descendantsPartiallySelected(node: LoazyLoadedFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    return result && !this.descendantsAllSelected(node);\n  }\n\n  /** Whether all the descendants of the node are selected. */\n  descendantsAllSelected(node: LoazyLoadedFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const descAllSelected = descendants.every(child =>\n      this.checklistSelection.isSelected(child)\n    );\n    return descAllSelected && descendants.length > 0;\n  }\n\n  /** Check root node checked state and change it accordingly */\n  checkRootNodeSelection(node: LoazyLoadedFlatNode): void {\n    const nodeSelected = this.checklistSelection.isSelected(node);\n    const descendants = this.treeControl.getDescendants(node);\n    const descAllSelected = descendants.every(child =>\n      this.checklistSelection.isSelected(child)\n    );\n    if (nodeSelected && !descAllSelected) {\n      this.checklistSelection.deselect(node);\n    } else if (!nodeSelected && descAllSelected) {\n      this.checklistSelection.select(node);\n    }\n  }\n\n  /* Get the parent node of a node */\n  getParentNode(node: LoazyLoadedFlatNode): LoazyLoadedFlatNode | null {\n    const currentLevel = node.level;\n\n    if (currentLevel < 1) {\n      return null;\n    }\n\n    const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\n\n    for (let i = startIndex; i >= 0; i--) {\n      const currentNode = this.treeControl.dataNodes[ i ];\n\n      if (currentNode.level < currentLevel) {\n        return currentNode;\n      }\n    }\n    return null;\n  }\n\n\n  /** Toggle the to-do item selection. Select/deselect all the descendants node */\n  todoItemSelectionToggle(node: LoazyLoadedFlatNode): void {\n    this.checklistSelection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    this.checklistSelection.isSelected(node)\n      ? this.checklistSelection.select(...descendants)\n      : this.checklistSelection.deselect(...descendants);\n\n    // if a pattern language is selected that hasn't been loaded, load the children\n    if (this.checklistSelection.isSelected(node) && descendants.length === 0) {\n      this.loadMore(node);\n    }\n\n    // Force update for the parent\n    descendants.every(child =>\n      this.checklistSelection.isSelected(child)\n    );\n    this.checkAllParentsSelection(node);\n  }\n\n  getPatterns() {\n    return this.checklistSelection.selected.filter((node) => node.level === 1);\n  }\n\n  private updateTree(node, treenode, childnodes) {\n    treenode.childrenChange.next(childnodes);\n    this.dataSource.data = this.nodes;\n    const descendants = this.treeControl.getDescendants(node);\n    if (this.checklistSelection.isSelected(node)) {\n      this.checklistSelection.select(...descendants);\n    }\n  }\n\n  private getPatternsAndAddToTree(item: PatternLanguage, treenode, node) {\n    this.patternService.getPatternsByUrl(item._links.patterns.href).subscribe((patterns) => {\n      const dummy = {\n        id: this.LOAD_MORE,\n        name: '',\n        uri: '',\n        content: null,\n        renderedContent: null,\n        _links: null,\n        patternLanguageId: '',\n        patternLanguageName: ''\n      };\n      const childnodes = patterns.length > 0 ? patterns.map(it => new LoadmoreNode(it)) : [new LoadmoreNode(dummy)];\n\n      this.updateTree(node, treenode, childnodes);\n\n    });\n  }\n\n  private getRelatedPatternAndAddToTree(item: LinksToOtherPattern, treenode: LoadmoreNode, node: LoazyLoadedFlatNode) {\n    const edgesObservables = node.item[ 'links' ].map(link => item.type === 'directed' ?\n      this.patternRelationDescriptorService.getDirectedEdgeByUrl(link.href) :\n      this.patternRelationDescriptorService.getUndirectedEdgeByUrl(link.href));\n    // @ts-ignore\n    forkJoin(...edgesObservables).subscribe((edges) => {\n      const childnodes = edges.map((edge: DirectedEdgeModel | UndirectedEdgeModel) =>\n        new LoadmoreNode(new LinksToOtherPattern(edge, item.type === 'directed', this.patternId)));\n      this.updateTree(node, treenode, childnodes);\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PatternViewManagementComponent } from './pattern-view-management/pattern-view-management.component';\nimport { CoreModule } from '../core/core.module';\nimport { PatternViewRendererComponent } from './pattern-view-renderer/pattern-view-renderer.component';\nimport { AddToViewComponent } from './add-to-view/add-to-view.component';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GraphDataService } from '../core/service/graph-data.service';\nimport { PatternViewService } from '../core/service/pattern-view.service';\n\n\nconst PATTERN_VIEW_MANAGMENT_ROUTE: Routes = [\n  {\n    path: '',\n    component: PatternViewManagementComponent\n  },\n  {\n    path: ':patternViewUri',\n    component: PatternViewRendererComponent\n  },\n];\n\n\n@NgModule({\n  declarations: [\n    PatternViewManagementComponent,\n    PatternViewRendererComponent,\n    AddToViewComponent\n  ],\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MatBadgeModule,\n    CoreModule,\n    MatToolbarModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatTreeModule,\n    MatIconModule,\n    MatCheckboxModule,\n    RouterModule.forChild(PATTERN_VIEW_MANAGMENT_ROUTE),\n  ],\n  providers: [\n    { provide: GraphDataService, useClass: PatternViewService },\n  ],\n  entryComponents: [\n    AddToViewComponent\n  ]\n})\nexport class PatternViewManagementModule {\n}\n","<pp-action-button-bar [goBackButton]=\"false\" [addButtonText]=\"'Add View'\"\n                      (addClicked)=\"createView()\"></pp-action-button-bar>\n<div style=\"display: flex; flex-wrap: wrap; padding: 0.25em;\">\n  <mat-card class=\"card box\"\n            *ngFor=\"let entity of patternViewResponse?._embedded?.patternViews\"\n            (click)=\"navigate(entity)\"\n  >\n    <span>{{entity.name}}</span>\n  </mat-card>\n\n</div>\n","import { Component, NgZone, OnInit } from '@angular/core';\nimport { PatternViewService } from '../../core/service/pattern-view.service';\nimport { PatternContainer } from '../../core/model/hal/pattern-container.model';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n  CreateEditComponentDialogType,\n  CreateEditPatternLanguageComponent\n} from '../../core/component/create-edit-pattern-language/create-edit-pattern-language.component';\nimport { DialogPatternLanguageResult } from '../../pattern-language-management/data/DialogPatternLanguageResult.interface';\nimport { PatternLanguageService } from '../../core/service/pattern-language.service';\nimport PatternLanguage from '../../core/model/hal/pattern-language.model';\nimport { switchMap, tap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { PatternContainerResponse } from '../../core/model/hal/pattern-container-response.interface';\nimport { ToasterService } from 'angular2-toaster';\nimport { UriConverter } from '../../core/util/uri-converter';\nimport UriEntity from '../../core/model/hal/uri-entity.model';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'pp-solution-language-management',\n  templateUrl: './pattern-view-management.component.html',\n  styleUrls: ['./pattern-view-management.component.scss']\n})\nexport class PatternViewManagementComponent implements OnInit {\n  public patternViewResponse;\n  private patternLanguages: PatternLanguage[];\n\n  constructor(private patternViewService: PatternViewService, private dialog: MatDialog, private patternLanguageService: PatternLanguageService,\n              private toastService: ToasterService, private activatedRoute: ActivatedRoute, private router: Router, private zone: NgZone) {\n  }\n\n  ngOnInit() {\n\n    this.getData().subscribe();\n\n  }\n\n  private getData(): Observable<PatternContainerResponse> {\n    return this.patternViewService.getPatternViews().pipe(tap((views) => {\n      this.patternViewResponse = views;\n    }));\n\n\n  }\n\n  navigate(view: UriEntity): void {\n    this.zone.run(() => {\n      this.router.navigate([UriConverter.doubleEncodeUri(view.uri)], { relativeTo: this.activatedRoute });\n    });\n  }\n\n  createView() {\n    const dialogRef = this.dialog.open(CreateEditPatternLanguageComponent, { data: { componentDialogType: CreateEditComponentDialogType.PATTERN_VIEW } });\n    let view;\n    // Save PatternLanguage when user presses save\n    (<CreateEditPatternLanguageComponent>dialogRef.componentInstance)\n      .saveClicked\n      .pipe(\n        tap((result: DialogPatternLanguageResult) => {\n          view = <PatternContainer>result.dialogResult;\n        }),\n        switchMap(() => this.patternViewService.savePatternView(this.patternViewResponse._links.patternViews.href, view)),\n        switchMap(() => this.getData())\n      )\n      .subscribe(res => {\n        if (res) {\n          this.toastService.pop('success', 'Created View');\n        }\n      });\n  }\n\n}\n","<pp-action-button-bar [addButtonText]=\"'Add patterns'\" [secondAddButton]=\"true\"\n                      [secondAddButtonText]=\"'Create new Link'\" [displayText]=\"displayText\"\n                      (addClicked)=\"addPatternToView()\" (add2Clicked)=\"addLink()\" [firstAddButton]=\"!graphVisible\">\n  <pp-toggle-renderer [graphVisible]=\"graphVisible\" (toggledRenderer)=\"changeRenderer($event)\"></pp-toggle-renderer>\n  <button class=\"action-button-with-margin\" (click)=\"reloadGraph()\" *ngIf=\"graphVisible\"\n          color=\"accent\" mat-raised-button>\n    <i class=\"material-icons\">autorenew</i> Reformat\n  </button>\n</pp-action-button-bar>\n\n<div class=\"container\" *ngIf=\"!isLoading && !graphVisible\">\n\n  <mat-card class=\"pattern-card\" *ngFor=\"let pattern of this.patterns\">\n    <mat-card-header>\n      <mat-card-title>{{pattern?.name}}</mat-card-title>\n      <mat-card-subtitle>{{pattern.patternLanguageName}}\n\n\n      </mat-card-subtitle>\n\n    </mat-card-header>\n\n    <mat-card-content class=\"card-content-style\">\n\n      <div class=\"badge-container\" (click)=\"showIngoingEdges(pattern._links.ingoingDirectedEdges)\">\n        <button mat-button class=\"edge-button\">\n          <mat-icon> trending_flat\n          </mat-icon>\n          <span class=\"badge-span\" matBadgeOverlap=\"false\"\n                [matBadge]=\"getLinkCount(pattern._links.ingoingDirectedEdges)\"\n          >\n                    </span>\n        </button>\n      </div>\n\n      <div class=\"badge-container\" (click)=\"showOutgoingEdges(pattern._links.outgoingDirectedEdges)\">\n        <button mat-button class=\"edge-button\">\n          <mat-icon class=\"flip\"> trending_flat\n          </mat-icon>\n          <span class=\"badge-span\" matBadgeOverlap=\"false\"\n                [matBadge]=\"getLinkCount(pattern._links.outgoingDirectedEdges)\"\n          >\n                </span>\n        </button>\n      </div>\n      <div class=\"badge-container\" (click)=\"showUndirectedEdges(pattern._links.undirectedEdges)\">\n        <button mat-button class=\"edge-button\">\n          <mat-icon>compare_arrows</mat-icon>\n          <span class=\"badge-span\" [matBadge]=\"getLinkCount(pattern._links.undirectedEdges)\"\n                matBadgeOverlap=\"false\"\n          >\n                </span>\n        </button>\n      </div>\n    </mat-card-content>\n    <mat-card-actions\n    >\n      <button mat-button (click)=\"addLinks(pattern)\">Add Links (incl. Pattern)\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n\n<pp-graph-display *ngIf=\"!isLoading && graphVisible\"\n                  [data]=\"{\n                patterns: this.patterns, edges: this.patternLinks,\n                patternLanguage: null, patternContainer: this.patternViewResponse,\n                patternLanguages: this.patternLanguages\n            }\"\n                  (addedEdge)=\"addedEdgeInGraphView($event)\" [showPatternLanguageName]=\"true\"></pp-graph-display>\n\n\n","import { AfterViewInit, ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { AddToViewComponent, LinksToOtherPattern, LoazyLoadedFlatNode } from '../add-to-view/add-to-view.component';\nimport { PatternLanguageService } from '../../core/service/pattern-language.service';\nimport { EMPTY, forkJoin, Observable } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\nimport { ToasterService } from 'angular2-toaster';\nimport { PatternViewService } from '../../core/service/pattern-view.service';\nimport Pattern from '../../core/model/hal/pattern.model';\nimport { PatternContainer } from '../../core/model/hal/pattern-container.model';\nimport { UriConverter } from '../../core/util/uri-converter';\nimport { ActivatedRoute } from '@angular/router';\nimport { PatternService } from '../../core/service/pattern.service';\nimport { CreatePatternRelationComponent } from '../../core/component/create-pattern-relation/create-pattern-relation.component';\nimport { DirectedEdgeModel } from '../../core/model/hal/directed-edge.model';\nimport { HalLink } from '../../core/model/hal/hal-link.interface';\nimport { AddDirectedEdgeToViewRequest } from '../../core/model/hal/add-directed-edge-to-view-request';\nimport { AddUndirectedEdgeToViewRequest } from '../../core/model/hal/add-undirected-edge-to-view-request';\nimport { UndirectedEdgeModel } from '../../core/model/hal/undirected-edge.model';\nimport PatternLanguageModel from '../../core/model/hal/pattern-language-model.model';\nimport { Embedded } from '../../core/model/hal/embedded';\nimport { UndirectedEdesResponse } from '../../core/model/hal/undirected-edes-response.interface';\nimport { DirectedEdesResponse } from '../../core/model/hal/directed-edes-response.interface';\nimport { GraphDisplayComponent } from '../../core/component/graph-display/graph-display.component';\nimport { DeletePatternRelationComponent } from '../../core/component/delete-pattern-relation/delete-pattern-relation.component';\nimport { PatternRelationDescriptorService } from '../../core/service/pattern-relation-descriptor.service';\n\n@Component({\n  selector: 'pp-pattern-view-renderer',\n  templateUrl: './pattern-view-renderer.component.html',\n  styleUrls: ['./pattern-view-renderer.component.scss']\n})\nexport class PatternViewRendererComponent implements OnInit, AfterViewInit {\n\n  patternViewService: PatternViewService;\n  patternViewResponse: PatternContainer;\n  patterns: Array<Pattern> = [];\n  displayText: string;\n  isLoading = true;\n  graphVisible = false;\n  patternLinks: Array<DirectedEdgeModel | UndirectedEdgeModel> = [];\n  @ViewChild(GraphDisplayComponent, { static: false }) graphDisplayComponent: GraphDisplayComponent;\n  private patternLanguages: Array<PatternLanguageModel>;\n  private patternViewUri: string;\n  private directedPatternRelations: DirectedEdgeModel[];\n  private undirectedPatternRelations: UndirectedEdgeModel[];\n\n  constructor(private matDialog: MatDialog, private patternLanguageService: PatternLanguageService, patternViewService: PatternViewService,\n              private patternService: PatternService, private toasterService: ToasterService, private cdr: ChangeDetectorRef,\n              private activatedRoute: ActivatedRoute, private patternRLDescriptorService: PatternRelationDescriptorService) {\n\n    this.patternViewService = patternViewService;\n  }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit(): void {\n    this.patternViewUri = UriConverter.doubleDecodeUri(this.activatedRoute.snapshot.paramMap.get('patternViewUri'));\n\n    this.getData().pipe(\n      switchMap(() => {\n        return this.getLinks();\n      })\n    ).subscribe(\n      () => {\n        this.isLoading = false;\n        this.displayText = this.patternViewResponse.name;\n      },\n      (error => this.toasterService.pop('error', 'Could not load data')));\n  }\n\n  addPatternToView() {\n    const dialogRef = this.matDialog.open(AddToViewComponent, {\n      data: { patternlanguages: this.patternLanguages, title: 'Add patterns to View' }\n    });\n    dialogRef.afterClosed().pipe(\n      switchMap((res: LoazyLoadedFlatNode[]) => res ?\n        this.patternViewService.addPatterns(this.patternViewResponse._links.patterns.href, this.mapDialogResultToPatterns(res))\n        : EMPTY),\n      switchMap(result => result ? this.getCurrentPatternViewAndPatterns() : EMPTY)).subscribe((res) => {\n      if (res) {\n        this.toasterService.pop('success', 'Data added');\n        this.cdr.detectChanges();\n      }\n    });\n  }\n\n  addLinks(pattern: Pattern) {\n    const dialogRef = this.matDialog.open(AddToViewComponent,\n      { data: { links: this.mapPatternLinksToTreeNode(pattern), title: 'Add linked Patterns', patternId: pattern.id } });\n    this.subscribeToLinkDialogResult(dialogRef);\n  }\n\n  addLink() {\n    const dialogRef = this.matDialog.open(CreatePatternRelationComponent, { data: { patterns: this.patterns, patternview: this.patternViewResponse } });\n    dialogRef.afterClosed().pipe(\n      switchMap((edge) => {\n        return edge ? this.createLink(edge) : EMPTY;\n      })).subscribe((res) => {\n      if (res) {\n        this.toasterService.pop('success', 'Relation added');\n      }\n    });\n  }\n\n  detectChanges() {\n    this.cdr.detectChanges();\n    console.log('detected');\n  }\n\n  getLinkCount(directedEdges: HalLink[] | HalLink) {\n    if (!directedEdges) {\n      return 0;\n    }\n    return Array.isArray(directedEdges) ? directedEdges.length : 1;\n  }\n\n  showUndirectedEdges(undirectedEdges: HalLink[]) {\n    if (undirectedEdges) {\n      const dialogRef = this.matDialog.open(DeletePatternRelationComponent, {\n        data: { edges: undirectedEdges, type: 'undirected' },\n        width: '600px',\n        panelClass: 'delete-relation-dialog'\n      });\n      dialogRef.afterClosed().subscribe(() => {\n        // reload patterns since ng for pattern loop doesnt get updated else\n        this.getData().subscribe(\n          () => {\n            this.getLinks();\n          }\n        );\n      });\n    }\n  }\n\n  showIngoingEdges(ingoingEdges: HalLink[]) {\n    if (ingoingEdges) {\n      const dialogRef = this.matDialog.open(DeletePatternRelationComponent, {\n        data: { edges: ingoingEdges, type: 'ingoing' },\n        width: '600px',\n        panelClass: 'delete-relation-dialog'\n      });\n      dialogRef.afterClosed().subscribe(() => {\n        // reload patterns since ng for pattern loop doesnt get updated else\n        this.getData().subscribe(\n          () => {\n            this.getLinks();\n          }\n        );\n      });\n    }\n  }\n\n  showOutgoingEdges(outgoingEdges: HalLink[]) {\n    if (outgoingEdges) {\n      const dialogRef = this.matDialog.open(DeletePatternRelationComponent, {\n        data: { edges: outgoingEdges, type: 'outgoing' },\n        width: '600px',\n        panelClass: 'delete-relation-dialog'\n      });\n      dialogRef.afterClosed().subscribe(() => {\n        // reload patterns since ng for pattern loop doesnt get updated else\n        this.getData().subscribe(\n          () => {\n            this.getLinks();\n          }\n        );\n      });\n    }\n  }\n\n  changeRenderer(isGraphVisible: any) {\n    this.graphVisible = isGraphVisible;\n  }\n\n  addedEdgeInGraphView(edge: any) {\n    if (edge) {\n      this.createLink(edge).subscribe(() => {\n        this.toasterService.pop('success', 'Link added');\n        this.cdr.detectChanges();\n      });\n    }\n  }\n\n  reloadGraph() {\n    this.graphDisplayComponent.reformatGraph();\n  }\n\n  private getDirectedEdges(): Observable<Embedded<DirectedEdesResponse>> {\n    if (!this.patternViewResponse) {\n      return EMPTY;\n    }\n    return this.patternViewService.getDirectedEdges(this.patternViewResponse).pipe(\n      tap((edges) => {\n        this.directedPatternRelations = edges._embedded ? edges._embedded.directedEdgeModels : [];\n      }));\n  }\n\n  private getUndirectedEdges(): Observable<Embedded<UndirectedEdesResponse>> {\n    if (!this.patternViewResponse) {\n      return EMPTY;\n    }\n    return this.patternViewService.getUndirectedEdges(this.patternViewResponse).pipe(\n      tap((edges) => {\n        this.undirectedPatternRelations = edges._embedded ? edges._embedded.undirectedEdgeModels : [];\n      }));\n  }\n\n  private createLink(edge): Observable<any> {\n    const url = edge instanceof DirectedEdgeModel ? this.patternViewResponse._links.directedEdges.href :\n      this.patternViewResponse._links.undirectedEdges.href;\n    if (!edge || !url) {\n      return EMPTY;\n    }\n    return this.patternViewService.createLink(url, edge instanceof DirectedEdgeModel ?\n      new AddDirectedEdgeToViewRequest(<DirectedEdgeModel>edge) :\n      new AddUndirectedEdgeToViewRequest(<UndirectedEdgeModel>edge)\n    ).pipe(\n      tap((res) => res ? this.getEdgeByUrl(edge, res) : EMPTY));\n  }\n\n  private getEdgeByUrl(edge: DirectedEdgeModel | UndirectedEdgeModel, res: any): void {\n    const getURL = res.url + '/' + res.body.id;\n    this.patternRLDescriptorService.getEdgeByUrl(getURL, edge)\n      .subscribe(\n        edgeResult => {\n          edge instanceof DirectedEdgeModel ? this.addDirectedEdgeToPattern(edgeResult as DirectedEdgeModel)\n            : this.addUndirectedEdgeToPattern(edgeResult as UndirectedEdgeModel);\n          this.patternLinks.push(edgeResult);\n        }\n      );\n  }\n\n  private addUndirectedEdgeToPattern(edge: UndirectedEdgeModel): void {\n    const pattern1 = this.patterns.find(x => x.id === edge.pattern1Id);\n    if (!pattern1._links.undirectedEdges) {\n      pattern1._links.undirectedEdges = edge._links.self;\n    } else if (!Array.isArray(pattern1._links.undirectedEdges)) {\n      pattern1._links.undirectedEdges = [pattern1._links.undirectedEdges, edge._links.self];\n    } else {\n      pattern1._links.undirectedEdges.push(edge._links.self);\n    }\n\n    const pattern2 = this.patterns.find(x => x.id === edge.pattern2Id);\n    if (!pattern2._links.undirectedEdges) {\n      pattern2._links.undirectedEdges = edge._links.self;\n      return;\n    } else if (!Array.isArray(pattern2._links.undirectedEdges)) {\n      pattern2._links.undirectedEdges = <HalLink[]>[pattern2._links.undirectedEdges, edge._links.self];\n    } else {\n      pattern2._links.undirectedEdges.push(edge._links.self);\n    }\n  }\n\n  private addDirectedEdgeToPattern(edge: DirectedEdgeModel): void {\n    const srcPattern = this.patterns.find(x => x.id === edge.sourcePatternId);\n    if (!srcPattern._links.outgoingDirectedEdges) {\n      srcPattern._links.outgoingDirectedEdges = edge._links.self;\n    } else if (!Array.isArray(srcPattern._links.outgoingDirectedEdges)) {\n      srcPattern._links.outgoingDirectedEdges = [srcPattern._links.outgoingDirectedEdges, edge._links.self];\n    } else {\n      srcPattern._links.outgoingDirectedEdges.push(edge._links.self);\n    }\n\n    const targetPattern = this.patterns.find(x => x.id === edge.targetPatternId);\n    if (!targetPattern._links.ingoingDirectedEdges) {\n      targetPattern._links.ingoingDirectedEdges = edge._links.self;\n      return;\n    } else if (!Array.isArray(targetPattern._links.ingoingDirectedEdges)) {\n      targetPattern._links.ingoingDirectedEdges = [targetPattern._links.ingoingDirectedEdges, edge._links.self];\n    } else {\n      targetPattern._links.ingoingDirectedEdges.push(edge._links.self);\n    }\n  }\n\n  private getPatternLanguages(): Observable<Array<PatternLanguageModel>> {\n    return this.patternLanguageService.getPatternLanguages()\n      .pipe(\n        tap(patternlanguages => this.patternLanguages = patternlanguages)\n      );\n  }\n\n  private getCurrentPatternViewAndPatterns(): Observable<Pattern[]> {\n    return this.patternViewService.getPatternContainerByUri(this.patternViewUri).pipe(\n      tap(patternContainerResponse => {\n        this.patternViewResponse = patternContainerResponse;\n      }),\n      switchMap((patternContainerResponse: PatternContainer) => this.patternService.getPatternsByUrl(patternContainerResponse._links.patterns.href)),\n      tap(patterns => {\n        this.patterns = patterns;\n      }));\n  }\n\n  private getData(): Observable<any> {\n    const $getPatternLanguages = this.getPatternLanguages();\n    const $getCurrentPatternView = this.getCurrentPatternViewAndPatterns();\n    return forkJoin([$getPatternLanguages, $getCurrentPatternView]); // , $getDirectedEdges]);\n  }\n\n  private getLinks(): Observable<any> {\n    const $getUndirectedEdges = this.getUndirectedEdges();\n    const $getDirectedEdges = this.getDirectedEdges();\n    return forkJoin([$getUndirectedEdges, $getDirectedEdges]).pipe(tap(() => {\n      this.patternLinks = [];\n      this.patternLinks.push(...this.directedPatternRelations);\n      this.patternLinks.push(...this.undirectedPatternRelations);\n    }));\n  }\n\n  private mapDialogResultToPatterns(res: LoazyLoadedFlatNode[]): Pattern[] {\n    if (!res) {\n      return [];\n    }\n    const patternsToAdd = res.map((patternNode) => <Pattern>{\n      content: null,\n      id: patternNode.item.id,\n      name: patternNode.item.name,\n      _links: null\n    });\n    const patternIdsOfView = this.patterns.map(it => it.id);\n    // only add patterns that are not already in the view:\n    return patternsToAdd.filter(pattern => !patternIdsOfView.includes(pattern.id));\n  }\n\n  private subscribeToLinkDialogResult(dialogRef: MatDialogRef<AddToViewComponent, any>) {\n    let nodesToAdd;\n    dialogRef.afterClosed().pipe(\n      tap(res => {\n        nodesToAdd = res;\n        console.log(res);\n      }),\n      switchMap((res) => {\n        return forkJoin([this.patternViewService.addPatterns(this.patternViewResponse._links.patterns.href, this.mapDialogResultToPatterns(res)),\n          this.patternViewService.addLinks(this.patternViewResponse, res && Array.isArray(res) ? res.map(it => it.item) : [])]);\n      }),\n      switchMap(result => result ? this.getCurrentPatternViewAndPatterns() : EMPTY)\n    ).subscribe((res) => {\n      if (res) {\n        this.toasterService.pop('success', 'Data added');\n        this.cdr.detectChanges();\n      }\n    });\n  }\n\n  private mapPatternLinksToTreeNode(pattern: Pattern): LinksToOtherPattern[] {\n    const types: LinksToOtherPattern[] = [];\n    const possibleEdgeTypes = [\n      { link: pattern._links.ingoingDirectedEdgesFromPatternLanguage, type: 'directed', displayName: 'Ingoing directed edges' },\n      { link: pattern._links.outgoingDirectedEdgesFromPatternLanguage, type: 'directed', displayName: 'Outgoing directed edges' },\n      { link: pattern._links.undirectedEdgesFromPatternLanguage, type: 'undirected', displayName: 'Undirected edges' }\n    ];\n    possibleEdgeTypes.forEach((edgeType: { link: HalLink | HalLink[], displayName: string, type: string }, index) => {\n      if (edgeType.link) {\n        types.push({\n          name: edgeType.displayName, links: Array.isArray(edgeType.link) ? edgeType.link : [edgeType.link], id: index.toString(),\n          type: edgeType.type\n        });\n      }\n    });\n    return types;\n  }\n}\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\n// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  repositoryUrl: 'http://localhost:8080',\n  authorizeUrl: 'http://localhost:8081/oauth/authorize?',\n  tokenUrl: 'http://localhost:8081/oauth/token',\n  tokenRevokeUrl: 'http://localhost:8081/oauth/revoke_token',\n  signinUrl: 'http://localhost:8081/user/create',\n  userInfoUrl: 'http://localhost:8081/user_info',\n  clientIdPrivate: 'pattern-pedia-private',\n  clientSecret: 'pattern-pedia-secret',\n  clientIdPublic: 'pattern-pedia-public',\n  clientIdPKCE: 'pattern-pedia-pkce',\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport * as jQuery from './libs/jquery-1.3.2.js';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}