{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/administration.component.html","webpack:///./src/app/administration.component.scss","webpack:///./src/app/administration.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/component/md-editor/md-editor.component.html","webpack:///./src/app/core/component/md-editor/md-editor.component.scss","webpack:///./src/app/core/component/md-editor/md-editor.component.ts","webpack:///./src/app/core/component/navigate-back/navigate-back.component.html","webpack:///./src/app/core/component/navigate-back/navigate-back.component.scss","webpack:///./src/app/core/component/navigate-back/navigate-back.component.ts","webpack:///./src/app/core/component/process-oauth-callback/process-oauth-callback.component.html","webpack:///./src/app/core/component/process-oauth-callback/process-oauth-callback.component.scss","webpack:///./src/app/core/component/process-oauth-callback/process-oauth-callback.component.ts","webpack:///./src/app/core/component/type-templates/dcmitype/image/image.component.html","webpack:///./src/app/core/component/type-templates/dcmitype/image/image.component.scss","webpack:///./src/app/core/component/type-templates/dcmitype/image/image.component.ts","webpack:///./src/app/core/component/type-templates/divider/divider.component.html","webpack:///./src/app/core/component/type-templates/divider/divider.component.scss","webpack:///./src/app/core/component/type-templates/divider/divider.component.ts","webpack:///./src/app/core/component/type-templates/interfaces/DataRenderingComponent.interface.ts","webpack:///./src/app/core/component/type-templates/patternproperty.directive.ts","webpack:///./src/app/core/component/type-templates/xsd/date/date.component.html","webpack:///./src/app/core/component/type-templates/xsd/date/date.component.scss","webpack:///./src/app/core/component/type-templates/xsd/date/date.component.ts","webpack:///./src/app/core/component/type-templates/xsd/integer/integer.component.html","webpack:///./src/app/core/component/type-templates/xsd/integer/integer.component.scss","webpack:///./src/app/core/component/type-templates/xsd/integer/integer.component.ts","webpack:///./src/app/core/component/type-templates/xsd/string/string.component.html","webpack:///./src/app/core/component/type-templates/xsd/string/string.component.scss","webpack:///./src/app/core/component/type-templates/xsd/string/string.component.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/default-pattern-renderer/default-pattern-renderer.component.html","webpack:///./src/app/core/default-pattern-renderer/default-pattern-renderer.component.scss","webpack:///./src/app/core/default-pattern-renderer/default-pattern-renderer.component.ts","webpack:///./src/app/core/default-pl-renderer/default-pl-renderer.component.html","webpack:///./src/app/core/default-pl-renderer/default-pl-renderer.component.scss","webpack:///./src/app/core/default-pl-renderer/default-pl-renderer.component.ts","webpack:///./src/app/core/directives/emit-event-on-keyup.directive.ts","webpack:///./src/app/core/model/PatternInstance.interface.ts","webpack:///./src/app/core/model/PatternLanguageSectionRestriction.model.ts","webpack:///./src/app/core/model/loader.ts","webpack:///./src/app/core/model/pattern-language-patterns.model.ts","webpack:///./src/app/core/model/pattern-language.model.ts","webpack:///./src/app/core/model/pattern-pedia.model.ts","webpack:///./src/app/core/model/pattern.model.ts","webpack:///./src/app/core/model/writer.ts","webpack:///./src/app/core/service/component-registry.service.ts","webpack:///./src/app/core/service/github-persistence.service.ts","webpack:///./src/app/core/service/loader/default-pattern-loader.service.ts","webpack:///./src/app/core/service/loader/default-pl-loader.service.ts","webpack:///./src/app/core/service/loader/pattern-language-loader/linked-open-patterns-loader.service.ts","webpack:///./src/app/core/service/loader/pattern-language-loader/loader-registry.service.ts","webpack:///./src/app/core/service/loader/pattern-language-loader/pl-restriction-loader.service.ts","webpack:///./src/app/core/service/pattern-ontology.service.ts","webpack:///./src/app/core/service/validation.service.ts","webpack:///./src/app/core/util/iri-converter.ts","webpack:///./src/app/extensions/extensions.module.ts","webpack:///./src/app/extensions/pattern-language/cloud-computing-patterns/cloud-computing-patterns.module.ts","webpack:///./src/app/extensions/pattern-language/cloud-computing-patterns/component/cloud-computing-pattern/cloud-computing-pattern.component.html","webpack:///./src/app/extensions/pattern-language/cloud-computing-patterns/component/cloud-computing-pattern/cloud-computing-pattern.component.scss","webpack:///./src/app/extensions/pattern-language/cloud-computing-patterns/component/cloud-computing-pattern/cloud-computing-pattern.component.ts","webpack:///./src/app/extensions/pattern-language/cloud-computing-patterns/component/cloud-computing-patterns/cloud-computing-patterns.component.html","webpack:///./src/app/extensions/pattern-language/cloud-computing-patterns/component/cloud-computing-patterns/cloud-computing-patterns.component.scss","webpack:///./src/app/extensions/pattern-language/cloud-computing-patterns/component/cloud-computing-patterns/cloud-computing-patterns.component.ts","webpack:///./src/app/extensions/pattern-language/cloud-computing-patterns/loader/cloud-computing-patterns-loader.service.ts","webpack:///./src/app/extensions/pattern-language/cloud-computing-patterns/model/cloud-computing-pattern.ts","webpack:///./src/app/extensions/pattern-language/cloud-computing-patterns/writer/cloud-computing-patterns-writer.service.ts","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/component/directives/draggable.directive.ts","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/component/directives/zoomable.directive.ts","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/component/enterprise-integration-pattern/enterprise-integration-pattern.component.html","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/component/enterprise-integration-pattern/enterprise-integration-pattern.component.scss","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/component/enterprise-integration-pattern/enterprise-integration-pattern.component.ts","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/component/enterprise-integration-patterns/enterprise-integration-patterns.component.html","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/component/enterprise-integration-patterns/enterprise-integration-patterns.component.scss","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/component/enterprise-integration-patterns/enterprise-integration-patterns.component.ts","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/component/graph/graph.component.html","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/component/graph/graph.component.scss","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/component/graph/graph.component.ts","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/component/link-infobox/link-infobox.component.html","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/component/link-infobox/link-infobox.component.scss","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/component/link-infobox/link-infobox.component.ts","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/component/link-visual/link-visual.component.html","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/component/link-visual/link-visual.component.scss","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/component/link-visual/link-visual.component.ts","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/component/node-infobox/node-infobox.component.html","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/component/node-infobox/node-infobox.component.scss","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/component/node-infobox/node-infobox.component.ts","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/component/node-visual/node-visual.component.html","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/component/node-visual/node-visual.component.scss","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/component/node-visual/node-visual.component.ts","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/enterprise-integration-patterns.module.ts","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/loader/enterprise-integration-pattern-incoming-link-loader.service.ts","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/loader/enterprise-integration-pattern-loader.service.ts","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/loader/enterprise-integration-pattern-outgoing-link-loader.service.ts","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/loader/enterprise-integration-patterns-group-loader.service.ts","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/loader/enterprise-integration-patterns-link-info-loader.service.ts","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/loader/enterprise-integration-patterns-link-loader.service.ts","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/loader/enterprise-integration-patterns-loader.service.ts","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/model/enterprise-integration-pattern.ts","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/model/index.ts","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/model/link.ts","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/model/network-graph.ts","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/model/node-info.ts","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/model/node.ts","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/service/d3.service.ts","webpack:///./src/app/extensions/pattern-language/enterprise-integration-patterns/service/enterprise-integration-patterns-data.service.ts","webpack:///./src/app/extensions/pattern-language/internet-of-things-patterns/component/internet-of-things-pattern/internet-of-things-pattern.component.html","webpack:///./src/app/extensions/pattern-language/internet-of-things-patterns/component/internet-of-things-pattern/internet-of-things-pattern.component.scss","webpack:///./src/app/extensions/pattern-language/internet-of-things-patterns/component/internet-of-things-pattern/internet-of-things-pattern.component.ts","webpack:///./src/app/extensions/pattern-language/internet-of-things-patterns/component/internet-of-things-patterns/internet-of-things-patterns.component.html","webpack:///./src/app/extensions/pattern-language/internet-of-things-patterns/component/internet-of-things-patterns/internet-of-things-patterns.component.scss","webpack:///./src/app/extensions/pattern-language/internet-of-things-patterns/component/internet-of-things-patterns/internet-of-things-patterns.component.ts","webpack:///./src/app/extensions/pattern-language/internet-of-things-patterns/internet-of-things-patterns.module.ts","webpack:///./src/app/extensions/pattern-language/internet-of-things-patterns/loader/internet-of-things-patterns-loader.service.ts","webpack:///./src/app/extensions/pattern-language/internet-of-things-patterns/model/internet-of-things-pattern.ts","webpack:///./src/app/filter/component/filter-view/filter-view.component.html","webpack:///./src/app/filter/component/filter-view/filter-view.component.scss","webpack:///./src/app/filter/component/filter-view/filter-view.component.ts","webpack:///./src/app/filter/loader/filter-loader.service.ts","webpack:///./src/app/filter/model/filter.ts","webpack:///./src/app/filter/service/filter-factory.service.ts","webpack:///./src/app/globals.ts","webpack:///./src/app/landing-page.component.html","webpack:///./src/app/landing-page.component.scss","webpack:///./src/app/landing-page.component.ts","webpack:///./src/app/page-not-found.component.html","webpack:///./src/app/page-not-found.component.scss","webpack:///./src/app/page-not-found.component.ts","webpack:///./src/app/pattern-language-management/create-edit-pattern-language/create-edit-pattern-language.component.html","webpack:///./src/app/pattern-language-management/create-edit-pattern-language/create-edit-pattern-language.component.scss","webpack:///./src/app/pattern-language-management/create-edit-pattern-language/create-edit-pattern-language.component.ts","webpack:///./src/app/pattern-language-management/create-pattern/create-pattern.component.html","webpack:///./src/app/pattern-language-management/create-pattern/create-pattern.component.scss","webpack:///./src/app/pattern-language-management/create-pattern/create-pattern.component.ts","webpack:///./src/app/pattern-language-management/pattern-container/pattern-container.component.html","webpack:///./src/app/pattern-language-management/pattern-container/pattern-container.component.scss","webpack:///./src/app/pattern-language-management/pattern-container/pattern-container.component.ts","webpack:///./src/app/pattern-language-management/pattern-container/pattern-container.directive.ts","webpack:///./src/app/pattern-language-management/pattern-language-container/pattern-language-container.component.html","webpack:///./src/app/pattern-language-management/pattern-language-container/pattern-language-container.component.scss","webpack:///./src/app/pattern-language-management/pattern-language-container/pattern-language-container.component.ts","webpack:///./src/app/pattern-language-management/pattern-language-container/pattern-language-container.directive.ts","webpack:///./src/app/pattern-language-management/pattern-language-management-routing.module.ts","webpack:///./src/app/pattern-language-management/pattern-language-management.module.ts","webpack:///./src/app/pattern-language-management/pattern-language-management/pattern-language-management-resolver.service.ts","webpack:///./src/app/pattern-language-management/pattern-language-management/pattern-language-management.component.html","webpack:///./src/app/pattern-language-management/pattern-language-management/pattern-language-management.component.scss","webpack:///./src/app/pattern-language-management/pattern-language-management/pattern-language-management.component.ts","webpack:///./src/app/solution-language-management/solution-language-management-routing.module.ts","webpack:///./src/app/solution-language-management/solution-language-management.module.ts","webpack:///./src/app/solution-language-management/solution-language-management/solution-language-management.component.html","webpack:///./src/app/solution-language-management/solution-language-management/solution-language-management.component.scss","webpack:///./src/app/solution-language-management/solution-language-management/solution-language-management.component.ts","webpack:///./src/app/test/test.component.html","webpack:///./src/app/test/test.component.scss","webpack:///./src/app/test/test.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///fs (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--\\n  ~ Copyright (c) 2018 University of Stuttgart.\\n  ~\\n  ~ See the NOTICE file(s) distributed with this work for additional\\n  ~ information regarding copyright ownership.\\n  ~\\n  ~ This program and the accompanying materials are made available under the\\n  ~ terms of the Eclipse Public License 2.0 which is available at\\n  ~ http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\\n  ~ which is available at https://www.apache.org/licenses/LICENSE-2.0.\\n  ~\\n  ~ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\\n  -->\\n\\n<p>\\n  administration works!\\n</p>\\n\"","module.exports = \"/*!\\n * Copyright (c) 2018 University of Stuttgart.\\n *\\n * See the NOTICE file(s) distributed with this work for additional\\n * information regarding copyright ownership.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\\n */\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9QYXR0ZXJuUGVkaWEvcGF0dGVybi1wZWRpYS9zcmMvYXBwL2FkbWluaXN0cmF0aW9uLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hZG1pbmlzdHJhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7O0VDWUUiLCJmaWxlIjoic3JjL2FwcC9hZG1pbmlzdHJhdGlvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQ29weXJpZ2h0IChjKSAyMDE4IFVuaXZlcnNpdHkgb2YgU3R1dHRnYXJ0LlxuICpcbiAqIFNlZSB0aGUgTk9USUNFIGZpbGUocykgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWxcbiAqIGluZm9ybWF0aW9uIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMgYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZVxuICogdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgMi4wIHdoaWNoIGlzIGF2YWlsYWJsZSBhdFxuICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtMi4wLCBvciB0aGUgQXBhY2hlIFNvZnR3YXJlIExpY2Vuc2UgMi4wXG4gKiB3aGljaCBpcyBhdmFpbGFibGUgYXQgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMC5cbiAqXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogRVBMLTIuMCBPUiBBcGFjaGUtMi4wXG4gKi9cblxuIiwiLyohXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTggVW5pdmVyc2l0eSBvZiBTdHV0dGdhcnQuXG4gKlxuICogU2VlIHRoZSBOT1RJQ0UgZmlsZShzKSBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbFxuICogaW5mb3JtYXRpb24gcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuXG4gKlxuICogVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscyBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlXG4gKiB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSAyLjAgd2hpY2ggaXMgYXZhaWxhYmxlIGF0XG4gKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC0yLjAsIG9yIHRoZSBBcGFjaGUgU29mdHdhcmUgTGljZW5zZSAyLjBcbiAqIHdoaWNoIGlzIGF2YWlsYWJsZSBhdCBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wLlxuICpcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBFUEwtMi4wIE9SIEFwYWNoZS0yLjBcbiAqL1xuIl19 */\"","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pp-administration',\n  templateUrl: './administration.component.html',\n  styleUrls: ['./administration.component.scss']\n})\nexport class AdministrationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PageNotFoundComponent } from './page-not-found.component';\nimport { AdministrationComponent } from './administration.component';\nimport { TestComponent } from './test/test.component';\nimport { ProcessOauthCallbackComponent } from './core/component/process-oauth-callback/process-oauth-callback.component';\nimport { ToasterModule } from 'angular2-toaster';\n\nconst routes: Routes = [\n  {\n    path: 'oauth-callback',\n    component: ProcessOauthCallbackComponent\n  }, {\n        path: '',\n        redirectTo: 'patternlanguages',\n        pathMatch: 'full'\n    },\n    {\n        path: 'administration',\n        component: AdministrationComponent\n    },\n    {\n        path: 'test',\n        component: TestComponent\n    },\n    {\n        path: '**',\n        component: PageNotFoundComponent\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: false}), ToasterModule.forRoot()],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","module.exports = \"<!--\\n  ~ Copyright (c) 2018 University of Stuttgart.\\n  ~\\n  ~ See the NOTICE file(s) distributed with this work for additional\\n  ~ information regarding copyright ownership.\\n  ~\\n  ~ This program and the accompanying materials are made available under the\\n  ~ terms of the Eclipse Public License 2.0 which is available at\\n  ~ http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\\n  ~ which is available at https://www.apache.org/licenses/LICENSE-2.0.\\n  ~\\n  ~ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\\n  -->\\n\\n<mat-toolbar color=\\\"primary\\\">\\n    <mat-icon>library_books</mat-icon>\\n    <span style=\\\"margin-left: 1rem\\\">PatternPedia</span>\\n</mat-toolbar>\\n<nav mat-tab-nav-bar>\\n    <a mat-tab-link\\n       [routerLink]=\\\"'/patternlanguages'\\\"\\n       routerLinkActive #rla1=\\\"routerLinkActive\\\"\\n       [active]=\\\"rla1.isActive\\\">\\n        Pattern Languages\\n    </a>\\n    <a mat-tab-link\\n       [routerLink]=\\\"'/solutionlanguages'\\\"\\n       routerLinkActive #rla2=\\\"routerLinkActive\\\"\\n       [active]=\\\"rla2.isActive\\\">\\n        Solution Languages\\n    </a>\\n    <a mat-tab-link\\n       [routerLink]=\\\"'/administration'\\\"\\n       routerLinkActive #rla3=\\\"routerLinkActive\\\"\\n       [active]=\\\"rla3.isActive\\\">\\n        Administration\\n    </a>\\n</nav>\\n\\n<router-outlet></router-outlet>\\n<toaster-container></toaster-container>\\n\"","module.exports = \"/*!\\n * Copyright (c) 2018 University of Stuttgart.\\n *\\n * See the NOTICE file(s) distributed with this work for additional\\n * information regarding copyright ownership.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\\n */\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9QYXR0ZXJuUGVkaWEvcGF0dGVybi1wZWRpYS9zcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7RUNZRSIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQ29weXJpZ2h0IChjKSAyMDE4IFVuaXZlcnNpdHkgb2YgU3R1dHRnYXJ0LlxuICpcbiAqIFNlZSB0aGUgTk9USUNFIGZpbGUocykgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWxcbiAqIGluZm9ybWF0aW9uIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMgYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZVxuICogdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgMi4wIHdoaWNoIGlzIGF2YWlsYWJsZSBhdFxuICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtMi4wLCBvciB0aGUgQXBhY2hlIFNvZnR3YXJlIExpY2Vuc2UgMi4wXG4gKiB3aGljaCBpcyBhdmFpbGFibGUgYXQgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMC5cbiAqXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogRVBMLTIuMCBPUiBBcGFjaGUtMi4wXG4gKi9cblxuIiwiLyohXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTggVW5pdmVyc2l0eSBvZiBTdHV0dGdhcnQuXG4gKlxuICogU2VlIHRoZSBOT1RJQ0UgZmlsZShzKSBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbFxuICogaW5mb3JtYXRpb24gcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuXG4gKlxuICogVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscyBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlXG4gKiB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSAyLjAgd2hpY2ggaXMgYXZhaWxhYmxlIGF0XG4gKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC0yLjAsIG9yIHRoZSBBcGFjaGUgU29mdHdhcmUgTGljZW5zZSAyLjBcbiAqIHdoaWNoIGlzIGF2YWlsYWJsZSBhdCBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wLlxuICpcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBFUEwtMi4wIE9SIEFwYWNoZS0yLjBcbiAqL1xuIl19 */\"","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'pp-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n    constructor() {\n    }\n\n\n}\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PatternLanguageManagementModule } from './pattern-language-management/pattern-language-management.module';\nimport { CoreModule } from './core/core.module';\nimport { PageNotFoundComponent } from './page-not-found.component';\nimport { LandingPageComponent } from './landing-page.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { ExtensionsModule } from './extensions/extensions.module';\nimport { AdministrationComponent } from './administration.component';\nimport { MatButtonModule, MatCardModule, MatIconModule, MatTabsModule, MatToolbarModule } from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SolutionLanguageManagementModule } from './solution-language-management/solution-language-management.module';\nimport { NgxMdModule } from 'ngx-md';\nimport { CovalentTextEditorModule } from '@covalent/text-editor';\nimport { TestComponent } from './test/test.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ToasterModule } from 'angular2-toaster';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        PageNotFoundComponent,\n        LandingPageComponent,\n        AdministrationComponent,\n      TestComponent\n    ],\n    imports: [\n        BrowserModule,\n        // NOTE: BrowserAnimationsModule issue https://github.com/angular/angular/issues/20290\n        BrowserAnimationsModule,\n        PatternLanguageManagementModule,\n        SolutionLanguageManagementModule,\n        MatToolbarModule,\n        MatIconModule,\n        MatCardModule,\n        MatButtonModule,\n        MatIconModule,\n        MatTabsModule,\n        NgxMdModule,\n        CovalentTextEditorModule,\n        CoreModule,\n        HttpClientModule,\n        AppRoutingModule,\n      ExtensionsModule,\n      FlexLayoutModule, ToasterModule.forRoot()\n    ],\n  providers: [CookieService],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n\n","module.exports = \"<div style=\\\"display: flex; justify-content: space-between; align-items: baseline\\\">\\n  <h1 mat-dialog-title>Edit {{data.label? \\\"'\\\" + data.label + \\\"'\\\" : ''}}</h1>\\n    <button mat-flat-button (click)=\\\"close()\\\" tabindex=\\\"-1\\\">\\n        <i class=\\\"material-icons\\\">close</i>\\n    </button>\\n</div>\\n<div mat-dialog-content>\\n    <td-text-editor #mdEditor [value]=\\\"data.content\\\"></td-text-editor>\\n</div>\\n<div mat-dialog-actions>\\n    <button mat-raised-button color=\\\"warn\\\"\\n            (click)=\\\"revert()\\\" matTooltip=\\\"Revert Changes\\\">\\n        <i class=\\\"material-icons\\\">restore</i> Revert\\n    </button>\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"saveChanges()\\\"><i\\n            class=\\\"material-icons\\\">save</i> Save\\n    </button>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvY29tcG9uZW50L21kLWVkaXRvci9tZC1lZGl0b3IuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, Inject, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { TdTextEditorComponent } from '@covalent/text-editor';\n\nexport class DialogData {\n    field: string;\n    label?: string;\n    content: string;\n}\n\n@Component({\n    selector: 'pp-md-editor',\n    templateUrl: './md-editor.component.html',\n    styleUrls: ['./md-editor.component.scss']\n})\nexport class MdEditorComponent {\n\n    @ViewChild('mdEditor') private _textEditor: TdTextEditorComponent;\n    private intialContent: string;\n\n    constructor(public dialogRef: MatDialogRef<MdEditorComponent>,\n                @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n        if (!data.label) {\n            data.label = data.field;\n        }\n        this.intialContent = data.content;\n        // We revert changes and close modal at click on backdrop\n        this.dialogRef.backdropClick().subscribe(() => {\n            this.dialogRef.close({field: this.data.field, content: this.intialContent});\n        });\n        // We revert changes and close modal at hitting ESC\n        this.dialogRef.keydownEvents().subscribe(event => {\n            if (event.code === 'Escape') {\n                this.dialogRef.close({field: this.data.field, content: this.intialContent});\n            }\n        });\n    }\n\n    close(): void {\n        this.dialogRef.close({field: this.data.field, content: this.intialContent});\n    }\n\n    saveChanges(): void {\n        this.dialogRef.close({field: this.data.field, content: this._textEditor.value});\n    }\n\n    revert(): void {\n        this._textEditor.value = this.intialContent;\n    }\n\n}\n","module.exports = \"<button style=\\\"margin-bottom: 20px\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"navigateBack()\\\"><i\\n  class=\\\"material-icons\\\">keyboard_backspace</i></button>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvY29tcG9uZW50L25hdmlnYXRlLWJhY2svbmF2aWdhdGUtYmFjay5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, NgZone, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'pp-navigate-back',\n  templateUrl: './navigate-back.component.html',\n  styleUrls: ['./navigate-back.component.scss']\n})\nexport class NavigateBackComponent implements OnInit {\n\n  constructor( private zone: NgZone, private activatedRoute: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  navigateBack(): void {\n    this.zone.run(() => {\n      this.router.navigate(['..'], {relativeTo: this.activatedRoute});\n    });\n  }\n\n}\n","module.exports = \"<div  fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\"><span>Processing Authorization... </span><mat-progress-spinner mode=\\\"indeterminate\\\" ></mat-progress-spinner></div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvY29tcG9uZW50L3Byb2Nlc3Mtb2F1dGgtY2FsbGJhY2svcHJvY2Vzcy1vYXV0aC1jYWxsYmFjay5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { switchMap } from 'rxjs/internal/operators';\n\n@Component({\n  selector: 'pp-process-oauth-callback',\n  templateUrl: './process-oauth-callback.component.html',\n  styleUrls: ['./process-oauth-callback.component.scss']\n})\nexport class ProcessOauthCallbackComponent implements OnInit {\n\n  constructor(private _httpClient: HttpClient, private _route: ActivatedRoute, private _cookieService: CookieService, private _router: Router) {\n    this._route.params.subscribe( params => console.log(params) );\n\n  }\n\n  ngOnInit() {\n    this._route.queryParams.pipe(\n      switchMap((params) => {\n        return this._httpClient.get('https://eqjjnlkv6a.execute-api.eu-central-1.amazonaws.com/default/authenticate/' + params['code'], {responseType: 'text'});\n      })).subscribe(\n      (res) => {\n        const response = res.replace('\"', '');\n        // github sends the access_token in url param style (access_token=...&...), so let's use this info to decode the token:\n        const urlResponse = new URLSearchParams(response);\n        if (urlResponse.get('access_token')) {\n          this._cookieService.set('patternpedia_github_token', urlResponse.get('access_token'));\n        }\n\n        this._router.navigate(['..'], {relativeTo: this._route});\n      });\n  }\n\n}\n","module.exports = \"<img [src]=\\\"data.replace('<', '').replace('>', '')\\\">\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvY29tcG9uZW50L3R5cGUtdGVtcGxhdGVzL2RjbWl0eXBlL2ltYWdlL2ltYWdlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { DataRenderingComponent } from '../../interfaces/DataRenderingComponent.interface';\n\n@Component({\n  selector: 'pp-image',\n  templateUrl: './image.component.html',\n  styleUrls: ['./image.component.scss']\n})\nexport class ImageComponent extends DataRenderingComponent implements OnInit {\n  data: any;\n  title = '';\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<p style=\\\"margin: 1em\\\"></p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvY29tcG9uZW50L3R5cGUtdGVtcGxhdGVzL2RpdmlkZXIvZGl2aWRlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pp-divider',\n  templateUrl: './divider.component.html',\n  styleUrls: ['./divider.component.scss']\n})\nexport class DividerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { EventEmitter } from '@angular/core';\n\nexport class DataRenderingComponent {\n  data: any;\n\n  title: string;\n\n  changeContent: EventEmitter<string>;\n  isEditingEnabled = false;\n\n  constructor() {\n  }\n}\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[ppPatternproperty]'\n})\nexport class PatternpropertyDirective {\n\n  constructor(public viewContainerRef: ViewContainerRef) { }\n\n}\n","module.exports = \"<mat-card>\\n  <p><b>{{title}}</b></p>\\n  <div style=\\\"display: flex; align-items: center;\\\" (mouseenter)=\\\"showActionButtons = true\\\"\\n       (mouseleave)=\\\"showActionButtons = false\\\">\\n    <mat-form-field><input matInput [formControl]=\\\"date\\\" [matDatepicker]=\\\"picker\\\" >\\n      <mat-datepicker-toggle *ngIf=\\\"isEditingEnabled\\\" matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #picker></mat-datepicker></mat-form-field>\\n    <ngx-md [data]=\\\"data\\\" hidden></ngx-md>\\n    <button *ngIf=\\\"showActionButtons\\\" mat-stroked-button\\n            style=\\\"margin-left: 5px\\\" color=\\\"primary\\\"\\n            (click)=\\\"openEditor()\\\" matTooltip=\\\"Edit\\\"><i class=\\\"material-icons\\\">mode_edit</i></button>\\n  </div>\\n</mat-card>\\n\"","module.exports = \".mat-card {\\n  min-height: unset; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9QYXR0ZXJuUGVkaWEvcGF0dGVybi1wZWRpYS9zcmMvYXBwL2NvcmUvY29tcG9uZW50L3R5cGUtdGVtcGxhdGVzL3hzZC9kYXRlL2RhdGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBaUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2NvcmUvY29tcG9uZW50L3R5cGUtdGVtcGxhdGVzL3hzZC9kYXRlL2RhdGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWNhcmQge1xuICBtaW4taGVpZ2h0OiB1bnNldDtcbn1cbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { DialogData, MdEditorComponent } from '../../../md-editor/md-editor.component';\nimport { MatDialog } from '@angular/material';\nimport { FormControl } from '@angular/forms';\nimport { DataRenderingComponent } from '../../interfaces/DataRenderingComponent.interface';\n\n@Component({\n  selector: 'pp-date',\n  templateUrl: './date.component.html',\n  styleUrls: ['./date.component.scss']\n})\nexport class DateComponent extends DataRenderingComponent implements OnInit {\n\n  data: any;\n  date = new FormControl(new Date());\n\n  title = '';\n  showActionButtons = false;\n\n  constructor(private dialog: MatDialog) {\n    super();\n  }\n\n  ngOnInit() {\n  }\n\n  openEditor(): void {\n    const dialogRef = this.dialog.open(MdEditorComponent,\n      {data: {content: this.data}});\n    dialogRef.afterClosed().subscribe(async (result: DialogData) => {\n    });\n  }\n}\n","module.exports = \"<mat-card>\\n  <p><b>{{title}}</b></p>\\n  <div style=\\\"display: flex; align-items: center;\\\" (mouseenter)=\\\"showActionButtons = true\\\"\\n       (mouseleave)=\\\"showActionButtons = false\\\">\\n    <mat-form-field><input matInput type=\\\"number\\\" readonly [value]=\\\"data\\\"></mat-form-field>\\n    <ngx-md [data]=\\\"data\\\" hidden></ngx-md>\\n    <button *ngIf=\\\"showActionButtons && isEditingEnabled\\\" mat-stroked-button\\n            style=\\\"margin-left: 5px\\\" color=\\\"primary\\\"\\n            (click)=\\\"openEditor()\\\" matTooltip=\\\"Edit\\\"><i class=\\\"material-icons\\\">mode_edit</i></button>\\n  </div>\\n</mat-card>\\n\\n\"","module.exports = \".mat-card {\\n  min-height: unset; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9QYXR0ZXJuUGVkaWEvcGF0dGVybi1wZWRpYS9zcmMvYXBwL2NvcmUvY29tcG9uZW50L3R5cGUtdGVtcGxhdGVzL3hzZC9pbnRlZ2VyL2ludGVnZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBaUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2NvcmUvY29tcG9uZW50L3R5cGUtdGVtcGxhdGVzL3hzZC9pbnRlZ2VyL2ludGVnZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWNhcmQge1xuICBtaW4taGVpZ2h0OiB1bnNldDtcbn1cbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { DataRenderingComponent } from '../../interfaces/DataRenderingComponent.interface';\nimport { DialogData, MdEditorComponent } from '../../../md-editor/md-editor.component';\nimport { MatDialog } from '@angular/material';\n\n@Component({\n  selector: 'pp-integer',\n  templateUrl: './integer.component.html',\n  styleUrls: ['./integer.component.scss']\n})\nexport class IntegerComponent extends DataRenderingComponent implements OnInit {\n\n  data: any;\n\n  title = '';\n\n  showActionButtons = false;\n\n  constructor(private dialog: MatDialog) {\n    super();\n  }\n\n  ngOnInit() {\n  }\n\n  openEditor(): void {\n    const dialogRef = this.dialog.open(MdEditorComponent,\n      {data: {content: this.data}});\n    dialogRef.afterClosed().subscribe(async (result: DialogData) => {\n    });\n  }\n}\n","module.exports = \"<mat-card>\\n  <p><b>{{title}}</b></p>\\n  <div style=\\\"display: flex; align-items: center;\\\" (mouseenter)=\\\"showActionButtons = true\\\"\\n       (mouseleave)=\\\"showActionButtons = false\\\">\\n    <ngx-md [data]=\\\"data\\\"></ngx-md>\\n    <button *ngIf=\\\"showActionButtons && isEditingEnabled\\\" mat-stroked-button\\n            style=\\\"margin-left: 5px\\\" color=\\\"primary\\\"\\n            (click)=\\\"openEditor()\\\" matTooltip=\\\"Edit\\\"><i class=\\\"material-icons\\\">mode_edit</i></button>\\n  </div>\\n</mat-card>\\n\\n\\n\"","module.exports = \".mat-card {\\n  min-height: unset; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9QYXR0ZXJuUGVkaWEvcGF0dGVybi1wZWRpYS9zcmMvYXBwL2NvcmUvY29tcG9uZW50L3R5cGUtdGVtcGxhdGVzL3hzZC9zdHJpbmcvc3RyaW5nLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQWlCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jb3JlL2NvbXBvbmVudC90eXBlLXRlbXBsYXRlcy94c2Qvc3RyaW5nL3N0cmluZy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtY2FyZCB7XG4gIG1pbi1oZWlnaHQ6IHVuc2V0O1xufVxuIl19 */\"","///<reference path=\"../../interfaces/DataRenderingComponent.interface.ts\"/>\nimport { Component, EventEmitter, OnInit } from '@angular/core';\nimport { DataRenderingComponent } from '../../interfaces/DataRenderingComponent.interface';\nimport { DialogData, MdEditorComponent } from '../../../md-editor/md-editor.component';\nimport { MatDialog } from '@angular/material';\n\n@Component({\n  selector: 'pp-string',\n  templateUrl: './string.component.html',\n  styleUrls: ['./string.component.scss']\n})\nexport class StringComponent extends DataRenderingComponent implements OnInit {\n  data: any;\n\n  title = '';\n\n  showActionButtons = false;\n\n  constructor(private dialog: MatDialog) {\n    super();\n    this.changeContent = new EventEmitter<string>();\n  }\n\n  ngOnInit() {\n  }\n\n  openEditor(): void {\n    const dialogRef = this.dialog.open(MdEditorComponent,\n      {data: {content: this.data}});\n    dialogRef.afterClosed().subscribe(async (result: DialogData) => {\n      console.log(result);\n      this.changeContent.emit(result.content);\n    });\n  }\n\n}\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PatternOntologyService } from './service/pattern-ontology.service';\nimport { LoaderRegistryService } from './service/loader/pattern-language-loader/loader-registry.service';\nimport { DefaultPlRendererComponent } from './default-pl-renderer/default-pl-renderer.component';\nimport { DefaultPatternRendererComponent } from './default-pattern-renderer/default-pattern-renderer.component';\nimport { ComponentRegistryService } from './service/component-registry.service';\nimport { LinkedOpenPatternsLoader } from './service/loader/pattern-language-loader/linked-open-patterns-loader.service';\nimport { PrettyJsonModule } from 'angular2-prettyjson';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatNativeDateModule,\n  MatProgressSpinnerModule,\n  MatTooltipModule\n} from '@angular/material';\nimport { TextFieldModule } from '@angular/cdk/text-field';\nimport { MdEditorComponent } from './component/md-editor/md-editor.component';\nimport { CovalentTextEditorModule } from '@covalent/text-editor';\nimport { EmitEventOnKeyupDirective } from './directives/emit-event-on-keyup.directive';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { NavigateBackComponent } from './component/navigate-back/navigate-back.component';\nimport { IntegerComponent } from './component/type-templates/xsd/integer/integer.component';\nimport { StringComponent } from './component/type-templates/xsd/string/string.component';\nimport { PatternpropertyDirective } from './component/type-templates/patternproperty.directive';\nimport { ImageComponent } from './component/type-templates/dcmitype/image/image.component';\nimport { DateComponent } from './component/type-templates/xsd/date/date.component';\nimport { DividerComponent } from './component/type-templates/divider/divider.component';\nimport { NgxMdModule } from 'ngx-md';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PrettyJsonModule,\n        MatButtonModule,\n        TextFieldModule,\n      CovalentTextEditorModule,\n      MatCardModule,\n      FlexLayoutModule,\n      MatProgressSpinnerModule,\n      MatListModule,\n      MatDatepickerModule, MatInputModule,\n      ReactiveFormsModule,\n      MatTooltipModule,\n      MatDialogModule,\n      MatIconModule,\n      NgxMdModule.forRoot(), MatNativeDateModule\n    ],\n  exports: [CovalentTextEditorModule, EmitEventOnKeyupDirective, MatProgressSpinnerModule, NavigateBackComponent],\n    providers: [\n        PatternOntologyService,\n        LinkedOpenPatternsLoader\n    ],\n    declarations: [\n        DefaultPlRendererComponent,\n        DefaultPatternRendererComponent,\n      MdEditorComponent,\n      EmitEventOnKeyupDirective,\n      NavigateBackComponent,\n      IntegerComponent,\n      StringComponent,\n      PatternpropertyDirective,\n      ImageComponent,\n      DateComponent,\n      DividerComponent\n    ],\n    entryComponents: [\n        DefaultPlRendererComponent,\n        DefaultPatternRendererComponent,\n      MdEditorComponent,\n      IntegerComponent,\n      StringComponent,\n      ImageComponent,\n      DateComponent,\n      DividerComponent\n    ]\n})\nexport class CoreModule {\n    constructor(private lr: LoaderRegistryService,\n                private pos: PatternOntologyService,\n                private cr: ComponentRegistryService) {\n        this.cr.registerComponent('default', {plcomponent: DefaultPlRendererComponent, pcomponent: DefaultPatternRendererComponent});\n    }\n}\n","module.exports = \"<pp-navigate-back></pp-navigate-back>\\n<mat-progress-spinner mode=\\\"indeterminate\\\" *ngIf=\\\"isLoadingPattern || isLoadingSection\\\"></mat-progress-spinner>\\n<h2>{{patternName? patternName : ''}}</h2>\\n<div>\\n  <ng-template ppPatternproperty></ng-template>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvZGVmYXVsdC1wYXR0ZXJuLXJlbmRlcmVyL2RlZmF1bHQtcGF0dGVybi1yZW5kZXJlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { ChangeDetectorRef, Component, ComponentFactoryResolver, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { DefaultPatternLoaderService } from '../service/loader/default-pattern-loader.service';\nimport { DefaultPlLoaderService } from '../service/loader/default-pl-loader.service';\nimport { PatternOntologyService } from '../service/pattern-ontology.service';\nimport { ToasterService } from 'angular2-toaster';\nimport { SectionResponse } from '../service/data/SectionResponse.interface';\nimport { PlRestrictionLoaderService } from '../service/loader/pattern-language-loader/pl-restriction-loader.service';\nimport { PatternpropertyDirective } from '../component/type-templates/patternproperty.directive';\nimport { PatternLanguageSectionRestriction } from '../model/PatternLanguageSectionRestriction.model';\nimport PatternPedia from '../model/pattern-pedia.model';\nimport { IriConverter } from '../util/iri-converter';\nimport { DividerComponent } from '../component/type-templates/divider/divider.component';\nimport { StringComponent } from '../component/type-templates/xsd/string/string.component';\nimport { IntegerComponent } from '../component/type-templates/xsd/integer/integer.component';\nimport { DateComponent } from '../component/type-templates/xsd/date/date.component';\nimport { ImageComponent } from '../component/type-templates/dcmitype/image/image.component';\nimport { DataRenderingComponent } from '../component/type-templates/interfaces/DataRenderingComponent.interface';\nimport { PatternInstance } from '../model/PatternInstance.interface';\nimport { PatternLanguagePatterns } from '../model/pattern-language-patterns.model';\nimport { GithubPersistenceService } from '../service/github-persistence.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'pp-default-pattern-renderer',\n  templateUrl: './default-pattern-renderer.component.html',\n  styleUrls: ['./default-pattern-renderer.component.scss']\n})\nexport class DefaultPatternRendererComponent implements OnInit {\n  private sectionRestritions: Map<string, PatternLanguageSectionRestriction[]>;\n  private patterns: Map<string, any>;\n  private pattern: PatternInstance;\n\n  constructor(private patternLoaderService: DefaultPatternLoaderService,\n              private sectionLoader: PlRestrictionLoaderService, private plLoader: DefaultPlLoaderService, private activatedRoute: ActivatedRoute,\n              private pos: PatternOntologyService, private toasterService: ToasterService, private cdr: ChangeDetectorRef,\n              private componentFactoryResolver: ComponentFactoryResolver,\n              private githubPersistenceService: GithubPersistenceService,\n              private cookieService: CookieService) {\n  }\n\n  @ViewChild(PatternpropertyDirective) ppPatternproperty: PatternpropertyDirective;\n  plIri: string;\n  patternIri: string;\n  patternName: string;\n  patternProperties: Map<string, string[]>;\n  sections: SectionResponse[];\n  isLoadingPattern = true;\n  isLoadingSection = true;\n  isEditingEnabled = false;\n\n\n  standardPrefixes = new PatternPedia().defaultPrefixes;\n  xsdPrefix = this.standardPrefixes.get('xsd').replace('<', '').replace('>', '');\n  dcmiPrefix = 'https://purl.org/dc/dcmitype/';\n\n\n  mappings = [\n    {prefix: this.xsdPrefix + 'string', value: StringComponent},\n    {prefix: this.xsdPrefix + 'integer', value: IntegerComponent},\n    {prefix: this.xsdPrefix + 'positiveInteger', value: IntegerComponent},\n    {prefix: this.xsdPrefix + 'nonPositiveInteger', value: IntegerComponent},\n    {prefix: this.xsdPrefix + 'nonNegativeInteger', value: IntegerComponent},\n    {prefix: this.xsdPrefix + 'negativeInteger', value: IntegerComponent},\n    {prefix: this.xsdPrefix + 'date', value: DateComponent},\n    {prefix: this.dcmiPrefix + 'Image', value: ImageComponent},\n  ];\n  defaultComponentForType = new Map(this.mappings.map(x => [x.prefix, x.value] as [string, any]));\n\n\n  ngOnInit() {\n\n    this.plIri = IriConverter.convertIdToIri(this.activatedRoute.snapshot.paramMap.get('plid'));\n    this.patternIri = IriConverter.convertIdToIri(this.activatedRoute.snapshot.paramMap.get('pid'));\n    this.isEditingEnabled = !!this.cookieService.get('patternpedia_github_token');\n\n    this.loadInfos().then(() => {\n      const viewContainerRef = this.ppPatternproperty.viewContainerRef;\n      viewContainerRef.clear();\n\n      const componentDividerFactory = this.componentFactoryResolver.resolveComponentFactory(DividerComponent);\n      this.sections.forEach((sec: SectionResponse) => {\n        this.createSectionComponent(sec.section.value, viewContainerRef, componentDividerFactory);\n      });\n    });\n\n\n  }\n\n\n  private async loadInfos(): Promise<any> {\n\n\n    await this.pos.loadUrisToStore([{token: null, value: this.plIri}]);\n\n    // load patternlanguage and patternlanguage-Patterns file\n    const imports = await this.pos.getOWLImports(this.plIri);\n    const importedPatternIris = imports.map(i => i.import);\n    await  this.pos.loadUrisToStore(importedPatternIris);\n\n\n    //  load all the data from patternlanguage\n    this.plLoader.supportedIRI = this.plIri;\n    this.patterns = await this.plLoader.loadContentFromStore();\n    this.pattern = this.patterns.get(this.patternIri);\n    this.patternProperties = this.pattern.sectionProperties;\n    this.patternName = this.patternProperties.get(IriConverter.getFileName(this.plIri) + '#hasName')[0];\n    this.isLoadingPattern = false;\n\n    // load section restrictions to be able to get the type for a section\n    this.sectionLoader.supportedIRI = this.plIri;\n    this.sectionRestritions = await this.sectionLoader.loadContentFromStore();\n\n    // get section in order\n    this.sections = await this.plLoader.getPLSections(this.plIri);\n    this.isLoadingSection = false;\n\n\n    if (!this.patternProperties) {\n      Promise.reject(null);\n\n    } else {\n      Promise.resolve(null);\n    }\n  }\n\n  private createSectionComponent(section: string, viewContainerRef: any, componentDividerFactory) {\n    const properties = this.patternProperties.get(section);\n    const sectionRestrictions = this.sectionRestritions.get(section);\n    if (section.indexOf('#has') !== -1) {\n      const sectionTitle = section.split('#has')[1].replace(/([A-Z])/g, ' $1').trim();\n\n      const type = (sectionRestrictions && !!sectionRestrictions[0] && sectionRestrictions[0].type) ? sectionRestrictions[0].type : this.xsdPrefix + 'string';\n      const component = this.defaultComponentForType.get(type) ? this.defaultComponentForType.get(type) : StringComponent;\n\n      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(component);\n      const componentRef = viewContainerRef.createComponent(componentFactory);\n      const instance = (<DataRenderingComponent>componentRef.instance);\n      instance.data = properties.join('\\n');\n      instance.title = sectionTitle;\n      instance.isEditingEnabled = this.isEditingEnabled;\n      instance.changeContent.subscribe((data) => {\n        this.patternProperties.set(section, [data]);\n        this.pattern.sectionProperties = this.patternProperties;\n        this.patterns.set(this.patternIri, this.pattern);\n        instance.data = data;\n        this.savePatterns();\n      });\n\n      viewContainerRef.createComponent(componentDividerFactory); // create divider\n    }\n  }\n\n  private savePatterns() {\n    const patternList = Array.from(this.patterns.values()).map(it => it.toPattern(this.plIri));\n    this.githubPersistenceService.updatePLPatterns(new PatternLanguagePatterns(IriConverter.getPatternListIriForPLIri(this.plIri),\n      this.plIri, patternList)).subscribe(() => this.toasterService.pop('success', 'updated patterns'),\n      (error) => this.toasterService.pop('error', 'could not update patterns' + error.message));\n  }\n}\n","module.exports = \"<pp-navigate-back></pp-navigate-back>\\n<h2>Pattern Language: {{plName}}</h2>\\n<div class=\\\"container\\\">\\n  <mat-progress-spinner mode=\\\"indeterminate\\\" *ngIf=\\\"isLoading\\\"></mat-progress-spinner>\\n  <mat-card class=\\\"landing-card \\\" *ngFor=\\\"let pattern of patterns\\\">\\n    <mat-card-header>\\n      <mat-card-title>\\n        <b>{{getNameForPattern(pattern)}}</b>\\n\\n      </mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content class=\\\"fixed-height-card-content\\\">\\n      <div *ngFor=\\\"let patternSection of getKeys(pattern.sectionProperties)\\\">\\n        <p><b>{{getSectionName(patternSection)}}</b>: {{pattern.sectionProperties.get(patternSection)}}</p>\\n      </div>\\n    </mat-card-content>\\n    <mat-card-actions>\\n      <div style=\\\"text-align: center\\\">\\n        <button mat-stroked-button color=\\\"primary\\\" (click)=\\\"navigate(pattern)\\\"><i class=\\\"material-icons\\\">pageview</i>View\\n        </button>\\n      </div>\\n    </mat-card-actions>\\n  </mat-card>\\n<mat-card class=\\\"landing-card center-content add-card\\\" (click)=\\\"goToPatternCreation()\\\">\\n  <i class=\\\"material-icons\\\">add_box</i>\\n</mat-card>\\n</div>\\n\\n\"","module.exports = \"mat-card-content.fixed-height-card-content {\\n  height: 12em;\\n  overflow: hidden; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9QYXR0ZXJuUGVkaWEvcGF0dGVybi1wZWRpYS9zcmMvYXBwL2NvcmUvZGVmYXVsdC1wbC1yZW5kZXJlci9kZWZhdWx0LXBsLXJlbmRlcmVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtFQUNaLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvY29yZS9kZWZhdWx0LXBsLXJlbmRlcmVyL2RlZmF1bHQtcGwtcmVuZGVyZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtY2FyZC1jb250ZW50LmZpeGVkLWhlaWdodC1jYXJkLWNvbnRlbnQge1xuICBoZWlnaHQ6IDEyZW07XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG4iXX0= */\"","import { ChangeDetectorRef, Component, NgZone, OnInit } from '@angular/core';\nimport { DefaultPlLoaderService } from '../service/loader/default-pl-loader.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IriConverter } from '../util/iri-converter';\nimport { PatternOntologyService } from '../service/pattern-ontology.service';\nimport { PatternInstance } from '../model/PatternInstance.interface';\n\n@Component({\n    selector: 'pp-default-pl-renderer',\n    templateUrl: './default-pl-renderer.component.html',\n    styleUrls: ['./default-pl-renderer.component.scss']\n})\nexport class DefaultPlRendererComponent implements OnInit {\n\n  patterns: PatternInstance[] = [];\n  plIri: string;\n  plName: string;\n  isLoading = true;\n\n  constructor(private loader: DefaultPlLoaderService,\n                private activatedRoute: ActivatedRoute,\n                private cdr: ChangeDetectorRef,\n                private zone: NgZone,\n                private router: Router,\n                private pos: PatternOntologyService) {\n    }\n\n    ngOnInit() {\n      this.loader.supportedIRI = IriConverter.convertIdToIri(this.activatedRoute.snapshot.paramMap.get('plid'));\n      this.plIri = IriConverter.convertIdToIri(this.activatedRoute.snapshot.paramMap.get('plid'));\n      this.plName = IriConverter.extractIndividualNameFromIri(this.plIri);\n\n      this.loadData().then(() => {\n        this.isLoading = false;\n        this.cdr.detectChanges();\n      });\n    }\n\n  getKeys(map) {\n    return Array.from(map.keys());\n  }\n\n  navigate(pattern: PatternInstance): void {\n    this.zone.run(() => {\n      this.router.navigate([IriConverter.convertIriToId(pattern.uri)], {relativeTo: this.activatedRoute});\n    });\n  }\n\n  goToPatternCreation() {\n    this.zone.run(() => {\n      this.router.navigate(['create-pattern'], {relativeTo: this.activatedRoute});\n    });\n  }\n\n  getNameForPattern(pattern: PatternInstance) {\n    return IriConverter.extractIndividualNameFromIri(pattern.uri);\n  }\n\n  getSectionName(patternSection: string) {\n    return IriConverter.getSectionName(patternSection);\n  }\n\n  async loadData() {\n    await this.pos.loadUrisToStore([{value: this.plIri, token: null}]);\n    const importedPatternIris = await this.loader.getOWLImports(this.plIri);\n    await this.pos.loadUrisToStore(importedPatternIris.map(i => i.import));\n    this.patterns = Array.from((await this.loader.loadContentFromStore()).values());\n  }\n}\n","import { Directive, EventEmitter, HostListener, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/internal/operators';\n\n@Directive({\n  selector: '[ppEmitOnChange]'\n})\nexport class EmitEventOnKeyupDirective implements OnInit, OnDestroy {\n\n  constructor() {\n  }\n  @Output('onKeyup') keyUpEventEmitter = new EventEmitter<any>();\n\n  private clicks = new Subject();\n\n  ngOnInit(): void {\n    // delay trigggering click events and don't trigger it if nothing changed\n    this.clicks.pipe(\n      debounceTime(1000),\n      distinctUntilChanged()\n    ).subscribe((e) => {\n      this.keyUpEventEmitter.emit(e);\n    });\n  }\n\n\n  @HostListener('window:keyup', ['$event'])\n  keyEvent(event: KeyboardEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.clicks.next(event);\n  }\n\n  ngOnDestroy(): void {\n    this.clicks.unsubscribe();\n  }\n\n}\n","import Pattern from './pattern.model';\nimport { IriConverter } from '../util/iri-converter';\n\n/* This class models how a pattern can be reconstructed from the SPARQL queries. */\nexport class PatternInstance {\n  uri: string;\n  type: string;\n  sectionProperties: Map<string, string[]>;\n\n  constructor(uri: string = null, sectionProperties: Map<string, string[]> = null, type: string = null) {\n    this.uri = uri;\n    this.sectionProperties = sectionProperties;\n    this.type = type;\n  }\n\n\n  addProperty(property: string, value: string): PatternInstance {\n    this.sectionProperties.set(property, this.sectionProperties.has(property) ? this.sectionProperties.get(property).concat(value) : [value]);\n    return this;\n  }\n\n  toPattern(plIri: string): Pattern {\n    const nameKey = IriConverter.getFileName(plIri) + '#hasName';\n    return new Pattern(this.uri, this.sectionProperties.get(nameKey).join(''), this.sectionProperties, plIri);\n  }\n\n\n}\n","export class PatternLanguageSectionRestriction {\n\n  name: string;\n  restrictionType: string; // some, only, min, max, exactly\n  type?: string;\n  cardinality?: number;\n\n  constructor(name: string, restrictionType: string, type: string, cardinality: number) {\n    this.name = name;\n    this.type = type;\n    this.restrictionType = restrictionType;\n    this.cardinality = cardinality;\n  }\n}\n\n// sums up all restrictions that apply to a section\nexport class SectionRestrictionsResult {\n  minCardinality: number;\n  maxCardinality?: number;\n  type: string;\n}\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { SparqlExecutor } from './sparql.executor';\n\nabstract class Loader<T> {\n    // How does a loader work?\n    //      The loader knows the IRI of the content\n    //      The loader knows the proper SELECT statement\n    //      The loader has corresponding logic to convert the selected triples to an array of the correct type\n\n    _supportedIRI: string;\n    executor: SparqlExecutor;\n\n    protected constructor(supportedIRI: string, executor: SparqlExecutor) {\n        this._supportedIRI = supportedIRI;\n        this.executor = executor;\n    }\n\n    set supportedIRI(iri: string) {\n        this._supportedIRI = iri;\n    }\n\n    get supportedIRI(): string {\n        return this._supportedIRI;\n    }\n\n    /**\n     * Orchestrates Loading and Conversion\n     */\n    loadContentFromStore(): Promise<Map<string, T>> {\n        return this.selectContentFromStore()\n          .then(\n            triples => this.mapTriples(triples)\n            );\n    }\n\n    abstract selectContentFromStore(): Promise<any>;\n\n    abstract mapTriples(triples: any): Promise<Map<string, T>>;\n}\n\nexport default Loader;\n","import Pattern from './pattern.model';\nimport { PatternPedia } from './pattern-pedia.model';\nimport { globals } from '../../globals';\n\n\nexport class PatternLanguagePatterns {\n\n  iri: string;\n  plIri: string;\n  patterns: Pattern[];\n\n\n  constructor(iri: string, plIri: string, patterns: Pattern[]) {\n    this.iri = iri;\n    this.plIri = plIri;\n    this.patterns = patterns;\n  }\n\n  toTurtle(): string {\n    const ary = new PatternPedia().getPrefixesToTurtle(this.iri, this.plIri);\n\n\n    ary.push('\\n');\n    ary.push(`<${this.iri}> rdf:type owl:Ontology ;`);\n    ary.push(`owl:imports <${globals.urlPatternRepoOntology}>, <${this.plIri}> .`);\n    ary.push('\\n');\n\n\n    this.patterns.forEach((pat: Pattern) => {\n      ary.push(pat.toTurtle());\n    });\n\n    return ary.join('\\n');\n\n  }\n}\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { IriConverter } from '../util/iri-converter';\nimport { PatternLanguageSectionRestriction } from './PatternLanguageSectionRestriction.model';\nimport PatternPedia from './pattern-pedia.model';\nimport { CustomPrefix } from '../../pattern-language-management/data/CustomPrefix.interface';\nimport { TurtleFileModelInterface } from './TurtleFileModel.interface';\n\nclass PatternLanguage implements TurtleFileModelInterface {\n  private patternpediaBaseURI = 'https://purl.org/patternpedia';\n    private _id: string;\n    name: string;\n    logos: Array<string>;\n    iri: string;\n    patternIRIs: Array<string>;\n  sections: string[];\n  restrictions: PatternLanguageSectionRestriction[];\n  prefixes: CustomPrefix[];\n\n\n  set id(iri: string) {\n        this._id = IriConverter.convertIriToId(iri);\n    }\n\n    get id(): string {\n        return this._id;\n    }\n\n  public constructor(iri: string = null, name: string = null, logos: Array<string> = null, patternIRIs: Array<string> = null, sections: string[] = null,\n                     restrictions: PatternLanguageSectionRestriction[] = null, prefixes: CustomPrefix[] = null) {\n        this.name = name;\n        this.logos = logos || [];\n        this.patternIRIs = patternIRIs || [];\n        this.iri = iri;\n        this.id = iri;\n    this.sections = sections;\n    this.restrictions = restrictions;\n    this.prefixes = prefixes;\n  }\n\n  getPrefixes(): Array<string> {\n    const ary: Array<string> = [];\n    const standardPrefixes = new PatternPedia().defaultPrefixes;\n    ary.push(\n      `@prefix : <${this.patternpediaBaseURI + '/patternlanguages/' + this.name}#> .`,\n      `@base <${this.patternpediaBaseURI + '/patternlanguages/' + this.name}> .`\n    );\n    standardPrefixes.forEach((value: boolean, key: string) => {\n      ary.push(\n        `@prefix ${key}: ${value} .`,\n      );\n    });\n    if (!this.prefixes) {\n      return ary;\n    }\n\n    this.prefixes.forEach((value: CustomPrefix) => {\n      if (value.checked && (value.prefixname !== 'xsd')) { // xsd is already contained in standard prefixes\n        ary.push(\n          `@prefix ${value.prefixname}: ${this.addAngleBracketsIfNeeded(value.uri)} .`,\n        );\n      }\n    });\n    return ary;\n  }\n\n  getSectionIdentifier(section: string): string {\n    return section.startsWith('https://purl.org') ? '<' + section + '>' : ':has' + section.replace(/\\s/g, '');\n  }\n\n  toTurtle(): string {\n    const ary = this.getPrefixes();\n    ary.push('\\n');\n    ary.push(`<${IriConverter.getFileName(this.iri)}> rdf:type owl:Ontology ;`);\n    ary.push(`owl:imports <${this.patternpediaBaseURI}> , <${IriConverter.getPatternListIriForPLIri(this.iri)}>.`);\n    ary.push('\\n');\n    ary.push('# #################################################################');\n    ary.push('# #');\n    ary.push('# #    Sections / Data Properties');\n    ary.push('# #');\n    ary.push('# #################################################################');\n    this.sections.forEach((section, index) => {\n      ary.push('\\n');\n      ary.push(`### ${section}`);\n      ary.push(`${this.getSectionIdentifier(section)} rdf:type pp:DatatypePropertyListItem  ;`);\n      ary.push(`pp:hasListIndex \"${index}\"^^xsd:integer .`);\n    });\n\n    if (this.restrictions && this.restrictions.length > 0) {\n\n      ary.push('\\n');\n      ary.push('# #################################################################');\n      ary.push('# #');\n      ary.push('# #    Restrictions / Classes');\n      ary.push('# #');\n      ary.push('# #################################################################');\n\n      ary.push(`### ${this.iri}`);\n      ary.push(`:${this.name}Individual rdf:type owl:Class ; `);\n      ary.push(` rdfs:subClassOf pp:Pattern ,`);\n\n      this.restrictions.forEach((restriction, index) => {\n        ary.push(`${'\\t'.repeat(3)}[ rdf:type owl:Restriction ;`);\n        ary.push(`${'\\t'.repeat(3)} owl:onProperty ${this.addPrefixCharacterOrAngleBrackets(restriction.name)} ; `);\n        if (restriction.restrictionType === 'min' || restriction.restrictionType === 'max') {\n          ary.push(`${'\\t'.repeat(3)} ${restriction.restrictionType === 'min' ? 'owl:minCardinality' : 'owl:maxCardinality'} \"${restriction.cardinality}\"^^xsd:nonNegativeInteger;`);\n          ary.push(`${'\\t'.repeat(3)} owl:onDataRange ${this.addAngleBracketsIfNeeded(restriction.type)}`);\n        } else if (restriction.restrictionType === 'exactly') {\n          ary.push(`${'\\t'.repeat(3)} owl:qualifiedCardinality\"${restriction.cardinality}\"^^xsd:nonNegativeInteger;`);\n          ary.push(`${'\\t'.repeat(3)} owl:onDataRange ${this.addAngleBracketsIfNeeded(restriction.type)}`);\n        } else if (restriction.restrictionType === 'some') {\n          ary.push(`${'\\t'.repeat(3)} owl:someValuesFrom ${this.addAngleBracketsIfNeeded(restriction.type)}`);\n        } else if (restriction.restrictionType === 'only') {\n          ary.push(`${'\\t'.repeat(3)} owl:allValuesFrom ${this.addAngleBracketsIfNeeded(restriction.type)}`);\n        }\n        ary.push(`${'\\t'.repeat(4)}] ${index === (this.restrictions.length - 1) ? '.' : ','}`);\n        ary.push(`\\n`);\n      });\n    }\n\n    ary.push(`###  ${this.iri}`);\n    ary.push(`:${this.name} rdf:type owl:NamedIndividual ,`);\n    ary.push('pp:PatternLanguage ;');\n    if (this.logos.length > 0) {\n      ary.push(`pp:hasLogo \"${this.logos[0]}\"^^xsd:anyURI ;`);\n    }\n    ary.push(`pp:hasName \"${this.name}\"^^xsd:string .`);\n\n    ary.push('#################################################################');\n    ary.push('# Individuals');\n    ary.push('##############################################################');\n\n    this.patternIRIs.forEach((patternIri, index) => {\n      ary.push(`:${this.name} pp:containsPattern :${IriConverter.extractIndividualNameFromIri(patternIri)} .`);\n    });\n\n    return ary.join('\\n');\n  }\n\n  getIsLinkedOpenPatternLanguageStatement(): string {\n    return this.iri.indexOf('#') > -1 ? `<${this.patternpediaBaseURI}#LinkedOpenPatterns> <${this.patternpediaBaseURI}#containsPatternGraph> <${this.iri}> .`\n      : `<${this.patternpediaBaseURI}#LinkedOpenPatterns> <${this.patternpediaBaseURI}#containsPatternGraph> <${this.iri}#${this.name}> .`;\n  }\n\n  private addAngleBracketsIfNeeded(type: string | undefined) {\n    if (IriConverter.isIri(type)) { // if we have a uri\n      return '<' + type + '>';\n    }\n    return type;\n  }\n\n  // if the object of the sentence is an URI this can be a prefix abbrevation or a complete URI that requires <>\n  private addPrefixCharacterOrAngleBrackets(name: string) {\n\n    if (IriConverter.isIri(name)) { // if we have a uri\n      return '<' + name + '>';\n    }\n    if (name.indexOf(':') < 0) {\n      return this.getSectionIdentifier(name);\n    }\n    return name;\n  }\n\n}\n\nexport default PatternLanguage;\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { IriConverter } from '../util/iri-converter';\nimport { globals } from '../../globals';\n\nexport class PatternPedia {\n  private _id: string;\n  iri: string;\n  name: string;\n  logo: string;\n\n\n  defaultPrefixes = new Map();\n\n\n  set id(iri: string) {\n    this._id = IriConverter.convertIriToId(iri);\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  getPrefixesToTurtle(iri: string, defaultPrefixBegin?: string): string[] {\n    const ary: Array<string> = [];\n    ary.push(\n      `@prefix : <${IriConverter.getFileName(defaultPrefixBegin ? defaultPrefixBegin : iri)}#> .`,\n      `@prefix pp: <${globals.urlPatternRepoOntology}#> .`,\n      `@prefix owl: <http://www.w3.org/2002/07/owl#> .`,\n      `@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .`,\n      `@prefix xml: <http://www.w3.org/XML/1998/namespace> .`,\n      `@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .`,\n      `@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .`,\n      `@base <${IriConverter.getFileName(iri)}> .`\n    );\n    return ary;\n  }\n\n\n  public constructor(iri: string = null, name: string = null, logo: string = null) {\n    this.name = name;\n    this.logo = logo;\n    this.iri = iri;\n    this.id = iri;\n    this.defaultPrefixes.set('owl', '<http://www.w3.org/2002/07/owl#>');\n    this.defaultPrefixes.set('pp', `<${globals.urlPatternRepoOntology}#>`);\n    this.defaultPrefixes.set('xml', `<http://www.w3.org/2001/XMLSchema#>`);\n    this.defaultPrefixes.set('rdf', `<http://www.w3.org/1999/02/22-rdf-syntax-ns#>`);\n    this.defaultPrefixes.set('rdfs', '<http://www.w3.org/2000/01/rdf-schema#>');\n    this.defaultPrefixes.set('xsd', '<http://www.w3.org/2001/XMLSchema#>');\n\n\n  }\n}\nexport default PatternPedia;\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { IriConverter } from '../util/iri-converter';\nimport { globals } from '../../globals';\n\nclass Pattern {\n  protected _id: string;\n  iri: string;\n  name: string;\n  patternLanguageIri: string;\n\n  sectionsProperties: Map<string, string[]>;\n  patternpediaBaseURI = globals.urlPatternRepoOntology;\n\n  set id(iri: string) {\n    this._id = IriConverter.convertIriToId(iri);\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  constructor(iri: string = null, name: string = null, sectionProperties: Map<string, string[]> = null, patternLanguageIri: string = null) {\n    this.name = name;\n    this.iri = iri;\n    this.id = iri;\n    this.sectionsProperties = sectionProperties;\n    this.patternLanguageIri = patternLanguageIri;\n  }\n\n\n  getSectionIdentifier(section: string): string {\n    return ':has' + section.replace(/\\s/g, '');\n  }\n\n  toTurtle(): string {\n    const ary = [];\n    ary.push(`###  ${this.iri}`);\n    ary.push(`:${IriConverter.removeWhitespace(this.name)} rdf:type owl:NamedIndividual ,`);\n    ary.push(`<${IriConverter.getFileName(this.patternLanguageIri)}/${IriConverter.extractIndividualNameFromIri(this.patternLanguageIri)}Individual> ;`);\n    const sections = Array.from(this.sectionsProperties.keys()).filter(it => it !== 'http://www.w3.org/2002/07/owl#imports' &&\n      it !== (IriConverter.getFileName(this.patternLanguageIri) + '#hasName')); // ignore owl:imports and the name, because we can use this.name instead\n    ary.push(`<${IriConverter.getFileName(this.patternLanguageIri)}#hasName> \"${this.name}\" ${sections.length > 0 ? ';' : '.'}`);\n\n    if (sections) {\n      sections.forEach((key, sectionindex) => {\n        const statements: string[] = this.sectionsProperties.get(key);\n        if (statements) {\n          statements.forEach((val, indexStatements) => {\n            ary.push(`${this.getPropertyIri(key)} ${this.sectionsProperties.get(key)[indexStatements].startsWith('<') ? '' : '\"'}${this.sectionsProperties.get(key)[indexStatements]}${this.sectionsProperties.get(key)[indexStatements].startsWith('<') ? '' : '\"'} ${(sectionindex === sections.length - 1) && (indexStatements === statements.length - 1) ? '.' : ';'}`);\n          });\n        }\n\n      });\n    }\n    ary.push('');\n    return ary.join('\\n');\n  }\n\n  private getPropertyIri(key: string) {\n\n    return IriConverter.isIri(key) ? '<' + key + '>' : '<' + IriConverter.getFileName(this.patternLanguageIri) + '#has' + key + '>';\n\n  }\n}\nexport default Pattern;\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { SparqlExecutor } from './sparql.executor';\n\nabstract class Writer<T> {\n    _supportedIRI: string;\n    executor: SparqlExecutor;\n\n    protected constructor(supportedIRI: string, executor: SparqlExecutor) {\n        this._supportedIRI = supportedIRI;\n        this.executor = executor;\n    }\n\n    set supportedIRI(iri: string) {\n        this._supportedIRI = iri;\n    }\n\n    get supportedIRI(): string {\n        return this._supportedIRI;\n\n    }\n\n    abstract writePatternToStore(pattern: T): Promise<void>;\n}\n\nexport default Writer;\n","import { Injectable } from '@angular/core';\nimport RenderingComponent from '../model/rendering-component';\n\n@Injectable({\n    providedIn: 'root'\n})\n/**\n * Service for registering and retreiving rendering components of pattern languages and patterns.\n */\nexport class ComponentRegistryService {\n\n    // dictionary mapping IRI to list of renderer components\n    private dictionary = new Map<string, Array<RenderingComponent>>();\n\n    constructor() {\n    }\n\n    /**\n     * Returns the rendering component at the given index.\n     * \n     * @param id the iri of the registered renderer components\n     * @param index (optional) the index of the renderer within the list\n     * @returns the rendering component at the given index or null, if there is no registered component\n     */\n    getPLRenderingComponents(id: string, index: number = 0): RenderingComponent {\n        let componentList = this.dictionary.get(id);\n        return componentList? componentList[index] : null;\n    }\n\n    /**\n     * Returns all rendering components that have been registered to the given iri.\n     * \n     * @param id the iri of the registered renderer components\n     * @returns a list containing all rendering components or null, if there are no registered renderer\n     */\n    getRenderingComponents(id: string): Array<RenderingComponent> {\n        return this.dictionary.get(id);\n    }\n\n    /**\n     * Registers the given components for the given iri.\n     * \n     * @param id the iri which the components will be registered for\n     * @param components the components to be registered (higher priority first!)\n     */\n    registerComponent(id: string, component: RenderingComponent): void {\n\n        let componentList = this.dictionary.get(id);\n        if (!componentList) {\n            this.dictionary.set(id, [component])\n        } else {\n            componentList.push(component);\n            // sort list DESCENDING according to priority (higher prio first)\n            componentList.sort((a, b) => b.priority - a.priority);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { forkJoin, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport PatternLanguage from '../model/pattern-language.model';\nimport { switchMap } from 'rxjs/internal/operators';\nimport { GithubUploadRequestInfo } from './data/GithubUploadRequestInfo.interface';\nimport { CookieService } from 'ngx-cookie-service';\nimport { GithubFileResponse } from './data/GithubFileResponse.interface';\nimport { IriConverter } from '../util/iri-converter';\nimport { PatternLanguagePatterns } from '../model/pattern-language-patterns.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GithubPersistenceService {\n\n  githubBaseUrl = 'https://api.github.com/repos/PatternPedia/patternpediacontent/contents';\n  githubPatternPediaUrl = this.githubBaseUrl + '/patternpedia.ttl';\n\n  constructor(private httpClient: HttpClient, private cookieService: CookieService) {\n  }\n\n\n  uploadPatternLanguage(patternlanguage: PatternLanguage): Observable<any> {\n        return this.httpClient.put(this.getGithubPathForPatternLanguage(patternlanguage), {\n            message: `upload the new patternlanguage ${patternlanguage.name} that was created with the UI`,\n            'content': btoa(patternlanguage.toTurtle())\n          }\n          , {\n            headers: {\n              'Content-Type': 'application/x-turtle',\n              'Authorization': `token ${this.cookieService.get('patternpedia_github_token')}`\n            }\n          });\n  }\n\n  getHeaders(): HttpHeaders {\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/x-turtle');\n    headers.append('Authorization', this.cookieService.get('patternpedia_github_token'));\n    return headers;\n  }\n\n  getGithubPathForPatternLanguage(patternLanguage: PatternLanguage): string {\n    return `${this.githubBaseUrl}/patternlanguages/${patternLanguage.name}/${patternLanguage.name}.ttl`;\n  }\n\n  addPatternLanguageToPatternPedia(patternlanguage: PatternLanguage, existingPatternlanguages: PatternLanguage[]): Observable<any> {\n    existingPatternlanguages.push(patternlanguage);\n    const containsPatternGraphStatements = existingPatternlanguages.map((pl: PatternLanguage) => {\n      return pl.getIsLinkedOpenPatternLanguageStatement();\n    });\n\n    return this.getRequestInfosToAddToPatternPedia().pipe(\n      switchMap((res: GithubUploadRequestInfo) => {\n        return this.httpClient.put(this.githubPatternPediaUrl, {\n            message: `upload the new patternlanguage ${patternlanguage.name} that was created with the UI to patternpedia`,\n\n            content: btoa(res.content + containsPatternGraphStatements.join('\\n')),\n            sha: res.fileInfo.sha\n          }\n          , {\n            headers: {\n              'Content-Type': 'application/x-turtle',\n              'Authorization': `token ${this.cookieService.get('patternpedia_github_token')}`\n            }\n          });\n      }));\n  }\n\n  getRequestInfosToAddToPatternPedia(): Observable<GithubUploadRequestInfo> {\n    return forkJoin(this.httpClient.get('assets/patternpedia-without-containsPatternGraph.ttl',\n      {responseType: 'text'}), this.getFile(this.githubPatternPediaUrl)).pipe(\n      map(res => <GithubUploadRequestInfo> {content: res[0], fileInfo: res[1]}));\n  }\n\n\n  getFile(iri: string): Observable<GithubFileResponse> {\n    return this.httpClient.get(iri, {\n      headers: {\n        'Authorization': `token ${this.cookieService.get('patternpedia_github_token')}`\n      }\n    }).pipe(map(res => <GithubFileResponse> res));\n  }\n\n\n  updatePL(patternLanguage: PatternLanguage): Observable<any> {\n    const githubUrlPL = this.getGithubPathForPatternLanguage(patternLanguage);\n    return this.getFile(githubUrlPL).pipe(\n      switchMap((res: GithubFileResponse) => {\n        return this.httpClient.put(githubUrlPL, {\n            message: 'update patternlanguage ' + patternLanguage.name,\n            content: btoa(patternLanguage.toTurtle()),\n            sha: res.sha\n          }\n          , {\n            headers: {\n              'Content-Type': 'application/x-turtle',\n              'Authorization': `token ${this.cookieService.get('patternpedia_github_token')}`\n            }\n          });\n      }));\n  }\n\n  updatePLPatterns(patternLanguagePatterns: PatternLanguagePatterns): Observable<any> {\n    const githubUrlPLPatterns = this.getGithubPathForPatternLanguagePatterns(patternLanguagePatterns);\n    return this.getFile(githubUrlPLPatterns).pipe(\n      switchMap((res: GithubFileResponse) => {\n          return this.httpClient.put(githubUrlPLPatterns, {\n              message: 'update patterns of' + IriConverter.extractIndividualNameFromIri(patternLanguagePatterns.plIri),\n              content: btoa(patternLanguagePatterns.toTurtle()),\n              sha: res.sha\n            }\n            , {\n              headers: {\n                'Content-Type': 'application/x-turtle',\n                'Authorization': `token ${this.cookieService.get('patternpedia_github_token')}`\n              }\n            });\n        }\n      ));\n  }\n\n  uploadPLPatterns(patternLanguagePatterns: PatternLanguagePatterns): Observable<any> {\n    const githubUrlPLPatterns = this.getGithubPathForPatternLanguagePatterns(patternLanguagePatterns);\n    return this.httpClient.put(githubUrlPLPatterns, {\n        message: 'initialize patternslist (currently empty)  of' + IriConverter.extractIndividualNameFromIri(patternLanguagePatterns.plIri),\n        content: btoa(patternLanguagePatterns.toTurtle())\n      }\n      , {\n        headers: {\n          'Content-Type': 'application/x-turtle',\n          'Authorization': `token ${this.cookieService.get('patternpedia_github_token')}`\n        }\n      });\n  }\n\n\n  private getGithubPathForPatternLanguagePatterns(patternLanguagePatterns: PatternLanguagePatterns): string {\n    return `${this.githubBaseUrl}/patternlanguages/${IriConverter.extractIndividualNameFromIri(patternLanguagePatterns.plIri)}/${IriConverter.extractIndividualNameFromIri(patternLanguagePatterns.iri)}.ttl`;\n  }\n}\n","import Loader from '../../model/loader';\nimport { Injectable } from '@angular/core';\nimport { PatternOntologyService } from '../pattern-ontology.service';\nimport { PatternProperty } from '../data/PatternProperty.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DefaultPatternLoaderService extends Loader<any> {\n  patternIri = '';\n\n  constructor(private pos: PatternOntologyService) {\n    super(null, pos);\n  }\n\n  selectContentFromStore(): Promise<PatternProperty[]> {\n    return this.pos.getPatternProperties(this.supportedIRI, this.patternIri);\n  }\n\n  mapTriples(sectionProperties: PatternProperty[]): Promise<Map<string, any>> {\n    const secMap = new Map<string, string[]>();\n    for (let i = 0; i < sectionProperties.length; i++) {\n      const newValue = sectionProperties[i];\n      secMap.set(newValue.property.value, secMap.has(newValue.property.value) ?\n        secMap.get(newValue.property.value).concat(newValue.predicate.value) : [newValue.predicate.value]);\n    }\n    return Promise.resolve(secMap);\n  }\n\n}\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { PatternOntologyService } from '../pattern-ontology.service';\nimport Loader from '../../model/loader';\nimport { Logo } from '../data/Logo.interface';\nimport { Import } from '../data/Import.interface';\nimport { IriConverter } from '../../util/iri-converter';\nimport { PatternInstance } from '../../model/PatternInstance.interface';\nimport { SectionResponse } from '../data/SectionResponse.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DefaultPlLoaderService extends Loader<any> {\n\n  constructor(private pos: PatternOntologyService) {\n        super(null, pos);\n    }\n\n  async selectContentFromStore(): Promise<any> {\n    const qry = `SELECT DISTINCT ?type ?pattern ?predicate ?property\n                 WHERE {\n                    <${this.supportedIRI}> pp:containsPattern ?pattern .\n                    ?pattern ?predicate ?property .\n                    ?pattern rdf:type ?type .\n                    FILTER (?type != owl:NamedIndividual && ?predicate != rdf:type)\n                    }\n                 ORDER BY ?pattern`;\n    const graphs = [IriConverter.getFileName(this.supportedIRI)];\n    graphs.push(IriConverter.getPatternListIriForPLIri(this.supportedIRI));\n    return this.executor.exec(qry, graphs);\n  }\n\n\n  getOWLImports(supportedIri: string): Promise<Import[]> {\n    return this.pos.getOWLImports(supportedIri);\n  }\n\n  getPLSections(supportedIri: string): Promise<SectionResponse[]> {\n    return this.pos.getPLSections(supportedIri);\n  }\n\n  getPLLogo(supportedIri: string): Promise<Logo[]> {\n    return this.pos.getPLLogo(supportedIri);\n  }\n\n  mapTriples(triples: any): Promise<Map<string, PatternInstance>> {\n    const patterns = new Map<string, PatternInstance>();\n        for (const row of triples) {\n          if (!patterns.get(row.pattern.value)) {\n            patterns.set(row.pattern.value,\n              new PatternInstance(row.pattern.value, new Map<string, string[]>().set(row.predicate.value, [row.property.value]), row.type.value));\n          } else { // if we already saw this pattern, add the infomation of the triple to it\n            const pattern = patterns.get(row.pattern.value).addProperty(row.predicate.value, row.property.value);\n            patterns.set(row.pattern.value, pattern);\n          }\n\n        }\n        return Promise.resolve(patterns);\n    }\n\n}\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport PatternLanguage from '../../../model/pattern-language.model';\nimport { Injectable } from '@angular/core';\nimport Loader from '../../../model/loader';\nimport { PatternOntologyService } from '../../pattern-ontology.service';\nimport { IriConverter } from '../../../util/iri-converter';\n\n@Injectable()\nexport class LinkedOpenPatternsLoader extends Loader<PatternLanguage> {\n\n  constructor(private pos: PatternOntologyService) {\n        super('https://purl.org/patternpedia#LinkedOpenPatterns', pos);\n    }\n\n  async selectContentFromStore(): Promise<any> {\n    console.log('supportedIRI: ');\n    console.log(this.supportedIRI);\n    const qryPatternGraphs = `SELECT DISTINCT ?patterngraph\n                                      WHERE {\n                                          <${this.supportedIRI}> <https://purl.org/patternpedia#containsPatternGraph> ?patterngraph\n                                      }`;\n      const patternGraphs = await this.executor.exec(qryPatternGraphs, [IriConverter.getFileName(this.supportedIRI)]);\n      const qry = `SELECT ?patterngraph ?type ?name ?logo ?pattern\n                                         WHERE {\n                                             <${this.supportedIRI}> <https://purl.org/patternpedia#containsPatternGraph> ?patterngraph .\n                                            ?patterngraph a ?type .\n                                            optional {?patterngraph <https://purl.org/patternpedia#containsPattern> ?pattern .}\n                                            ?patterngraph <https://purl.org/patternpedia#hasName> ?name .\n                                            ?patterngraph <https://purl.org/patternpedia#hasLogo> ?logo .\n                                            FILTER (?type != owl:NamedIndividual)\n                                          }\n                                ORDER BY ?patterngraph`;\n      const graphs = [IriConverter.getFileName(this.supportedIRI)];\n\n      for (const entry of patternGraphs) {\n        graphs.push(IriConverter.getFileName(entry.patterngraph.value));\n      }\n      return this.executor.exec(qry, graphs);\n    }\n\n    mapTriples(triples: any): Promise<Map<string, PatternLanguage>> {\n        const result = new Map<string, PatternLanguage>();\n        // we first iterate the triples and generate an intermediate format to create afterwards pattern objects\n      const rawPatternGraphs = {};\n\n      for (const row of triples) {\n            if (!rawPatternGraphs[row.patterngraph.value]) {\n                rawPatternGraphs[row.patterngraph.value] = {patterngraph: row.patterngraph.value};\n            }\n            if (!rawPatternGraphs[row.patterngraph.value]['type']) {\n                rawPatternGraphs[row.patterngraph.value]['type'] = row.type.value;\n            }\n            if (!rawPatternGraphs[row.patterngraph.value]['name']) {\n                rawPatternGraphs[row.patterngraph.value]['name'] = row.name.value;\n            }\n            // Todo incorporate to allow more than one logo\n            if (!rawPatternGraphs[row.patterngraph.value]['logo']) {\n                rawPatternGraphs[row.patterngraph.value]['logo'] = row.logo.value;\n            }\n          if (!rawPatternGraphs[row.patterngraph.value]['patterns']) {\n            rawPatternGraphs[row.patterngraph.value]['patterns'] = row.pattern ? [row.pattern.value] : [];\n          } else if (row.pattern) {\n            rawPatternGraphs[row.patterngraph.value]['patterns'].push(row.pattern.value);\n            }\n        }\n\n      for (const key of Object.keys(rawPatternGraphs)) {\n            result.set(\n                key,\n                new PatternLanguage(\n                    rawPatternGraphs[key].patterngraph,\n                    rawPatternGraphs[key].name,\n                    [rawPatternGraphs[key].logo],\n                    rawPatternGraphs[key].patterns\n                )\n            );\n        }\n        return Promise.resolve(result);\n    }\n}\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport Loader from '../../../model/loader';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoaderRegistryService {\n\n    private dictionary = new Map<string, Loader<any>>();\n\n    constructor() {\n    }\n\n    getContentLoader<T>(contentIRI): Loader<T> {\n        console.log(this.dictionary.entries());\n        return this.dictionary.get(contentIRI);\n    }\n\n    registerContentLoader(loader: Loader<any>): void {\n        this.dictionary.set(loader.supportedIRI, loader);\n    }\n\n    removeContentLoader(loader: Loader<any>): void {\n        this.dictionary.delete(loader.supportedIRI);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { PatternOntologyService } from '../../pattern-ontology.service';\nimport Loader from '../../../model/loader';\nimport { PatternLanguageSectionRestriction, SectionRestrictionsResult } from '../../../model/PatternLanguageSectionRestriction.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlRestrictionLoaderService extends Loader<any> {\n\n  constructor(private pos: PatternOntologyService) {\n    super(null, pos);\n  }\n\n  selectContentFromStore(): Promise<any> {\n    return this.pos.getRestrictionsOfPL(this.supportedIRI);\n  }\n\n\n  mapTriples(triples: any): Promise<Map<string, PatternLanguageSectionRestriction[]>> {\n    const map = new Map<string, PatternLanguageSectionRestriction[]>();\n    for (const restriction of triples) {\n      const property = restriction.property.value;\n      if (!map.get(property)) {\n        map.set(property, []);\n      }\n      const restrictionsArray = map.get(property) ? map.get(property) : [];\n      restrictionsArray.push(this.mapRestrictionResponseToJSObject(restriction));\n      map.set(property, restrictionsArray);\n    }\n\n    return Promise.resolve(map);\n  }\n\n  mapRestrictionResponseToJSObject(restriction): PatternLanguageSectionRestriction {\n    const sectionRestriction = new PatternLanguageSectionRestriction(restriction.property.value, null,\n      null, null);\n    if (restriction.allValuesdataRange) {\n      sectionRestriction.restrictionType = 'only';\n      sectionRestriction.type = restriction.allValuesdataRange.value;\n    } else if (restriction.someValuesdataRange) {\n      sectionRestriction.restrictionType = 'some';\n      sectionRestriction.type = restriction.someValuesdataRange.value;\n    }\n    if (restriction.dataRange && restriction.dataRange.value) {\n        sectionRestriction.type = restriction.dataRange.value;\n    }\n    if (restriction.exactCardinality) {\n      sectionRestriction.restrictionType = 'exactly';\n      sectionRestriction.cardinality = +restriction.exactCardinality.value;\n    } else if (restriction.minCardinality) {\n      sectionRestriction.restrictionType = 'min';\n      sectionRestriction.cardinality = +restriction.minCardinality.value;\n    } else if (restriction.maxCardinality) {\n      sectionRestriction.restrictionType = 'max';\n      sectionRestriction.cardinality = +restriction.maxCardinality.value;\n    }\n    if (!sectionRestriction.type) {\n      console.log('missiong type for');\n      console.log(restriction);\n    }\n\n\n    return sectionRestriction;\n  }\n\n  // sum up all the restrictions in the array in one restriction object\n  getRestrictionsForSection(section: string, restrictions: PatternLanguageSectionRestriction[]): SectionRestrictionsResult {\n    const restrictionWithTypeIndex = restrictions.findIndex((rest: PatternLanguageSectionRestriction) => {\n      return !!rest.type;\n    });\n\n    if (restrictionWithTypeIndex === -1 || !restrictions[restrictionWithTypeIndex]) {\n      console.log('no restrictions for ' + section);\n      return null;\n    }\n    const sectionType = restrictionWithTypeIndex !== -1 ? restrictions[restrictionWithTypeIndex].type : '';\n    const exactlyRestrictionIndex = restrictions.findIndex((rest: PatternLanguageSectionRestriction) => {\n      return rest.restrictionType === 'exactly';\n    });\n    if (exactlyRestrictionIndex !== -1) {\n      return <SectionRestrictionsResult>{\n        type: sectionType, maxCardinality: restrictions[exactlyRestrictionIndex].cardinality,\n        minCardinality: restrictions[exactlyRestrictionIndex].cardinality\n      };\n    }\n\n    const minRestrictionIndex = restrictions.findIndex((rest: PatternLanguageSectionRestriction) => {\n      return rest.restrictionType === 'min';\n    });\n    let minCardinality = 0;\n    if (minRestrictionIndex !== -1) {\n      minCardinality = restrictions[minRestrictionIndex].cardinality;\n    } else if (restrictions[restrictionWithTypeIndex].restrictionType === 'some') {\n      minCardinality = 1;\n    }\n    const maxRestrictionIndex = restrictions.findIndex((rest: PatternLanguageSectionRestriction) => {\n      return rest.restrictionType === 'max';\n    });\n\n    return {\n      type: sectionType,\n      minCardinality: minCardinality,\n      maxCardinality: maxRestrictionIndex !== -1 ? restrictions[maxRestrictionIndex].cardinality : null\n    };\n\n  }\n\n\n}\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { forkJoin, from, Observable, of, throwError } from 'rxjs';\nimport { flatMap, map } from 'rxjs/operators';\nimport PatternLanguage from '../model/pattern-language.model';\nimport { SparqlExecutor } from '../model/sparql.executor';\nimport { IriConverter } from '../util/iri-converter';\nimport { PatternGraphContainedInPP } from './data/PatternGraphContainedInPP.interface';\nimport { Logo } from './data/Logo.interface';\nimport { Import } from './data/Import.interface';\nimport { QueriedData } from './data/QueriedData.interface';\nimport { SectionResponse } from './data/SectionResponse.interface';\nimport { CookieService } from 'ngx-cookie-service';\nimport { GithubPersistenceService } from './github-persistence.service';\nimport { GithubFileResponse } from './data/GithubFileResponse.interface';\nimport { RestrictionResponse } from './data/RestrictionResponse.interface';\nimport { PatternProperty } from './data/PatternProperty.interface';\n\n@Injectable()\nexport class PatternOntologyService implements SparqlExecutor {\n  private _store;\n\n  constructor(private http: HttpClient, private cookieService: CookieService, private githubPersistenceService: GithubPersistenceService) {\n    this.createNewStore()\n      .then(() => console.log('Created new Store'));\n  }\n\n  /**\n   * Registers default namespaces to given store.\n   * @param store\n   */\n  registerDefaultNameSpaces(store: any): void {\n    store.registerDefaultNamespace('owl', 'http://www.w3.org/2002/07/owl#');\n    store.registerDefaultNamespace('rdf', 'http://www.w3.org/1999/02/22-rdf-syntax-ns#');\n    store.registerDefaultNamespace('rdfs', 'http://www.w3.org/2000/01/rdf-schema#');\n    store.registerDefaultNamespace('xsd', 'http://www.w3.org/2001/XMLSchema#');\n    store.registerDefaultNamespace('pp', 'https://purl.org/patternpedia#');\n  }\n\n  /**\n   * Returns the default store.\n   * @returns {any}\n   */\n  get store() {\n    return this._store;\n  }\n\n  /**\n   * Creates a new store with registered default namespaces.\n   */\n  async createNewStore(): Promise<any> {\n    console.log('Creating new store');\n    return new Promise((resolve, reject) => {\n      rdfstore.create((err, store) => {\n        if (!err) {\n          this.registerDefaultNameSpaces(store);\n          this._store = store;\n          resolve(store);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  }\n\n  /**\n   * Loads the file located at the given IRI via http.\n   * @param {string} iri\n   * @returns {Observable<string>}\n   */\n  loadRawOntology(iri: string): Observable<string> {\n    console.log('Fetching raw data from:', iri);\n    return this.http.get(iri, {responseType: 'text'});\n  }\n\n  /**\n   * Loads the ontology at the given URL to the give store if it is not yet present. The default store is used if no store is given.\n   * All imported ontologies are checked and are also loaded recursively with this function.\n   * @param url URL of the ontology file\n   * @param iri IRI of the represented entity in ontology file\n   * @param store\n   */\n  loadOntologyWithImportsToStore(url: string, iri: string, store: any = null): Promise<any> {\n    // 1. check if ontology is not yet loaded\n    // 2. load ontology to store\n    // 3. load owl:imports triple {?s owl:imports ?o}\n    // 4. for each loaded import-triple call loadOntologyWithImportsToStore\n    if (!store) {\n      console.log('Using default store');\n      store = this.store;\n    }\n    return this.ontologyAlreadyLoaded(iri, store)\n      .then(alreadyLoaded => {\n        return !alreadyLoaded.loaded ? this.loadOntologyToStore(url, iri, store) : Promise.resolve(null);\n      })\n      .then(result => result ? this.loadImportTriple(store) : Promise.resolve(result))\n      .then(importTriple => {\n        const triples = importTriple as Array<any>;\n        if (importTriple && triples.length > 0) {\n          const promises = [];\n          for (const it of importTriple as Array<any>) {\n            promises.push(this.loadOntologyWithImportsToStore(it.o.value, store));\n          }\n          return Promise.all(promises);\n        } else {\n          return Promise.resolve(null);\n        }\n      });\n  }\n\n  /**\n   * Checks if an ontology is already loaded by checking 'ASK { <${iri}> a owl:Ontology }'.\n   * @param {string} iri\n   * @param store\n   * @returns {Observable<{iri: string; loaded: boolean}>}\n   */\n  ontologyAlreadyLoaded(iri: string, store: any = null): Promise<{ iri: string, loaded: boolean }> {\n    if (!store) {\n      console.log('Using default store');\n      store = this.store;\n    }\n    return this.ask(`ASK { <${iri}> a owl:Ontology }`, store)\n      .then(\n        result => {\n          return {iri: iri, loaded: result};\n        }\n      );\n  }\n\n  /**\n   * Loads triples that suffice { ?s owl:imports ?o } from the store\n   * @param store\n   * @returns {Observable<Array<any>>}\n   */\n  loadImportTriple(store): Promise<Array<any>> {\n    return this.exec('SELECT ?s ?o WHERE { ?s owl:imports ?o }', store);\n  }\n\n  /**\n   * Loads an turtle ontology located at the given IRI and stores it to the given store.\n   * If no store is given the default store is used.\n   * @param {string} url URL of the file to be loaded\n   * @param {string} graphIri IRI of graph to store triples to\n   * @param store\n   * @returns {Observable<number>}\n   */\n  loadOntologyToStore(url: string, graphIri: string, store: any = null): Observable<any> {\n    console.log('Loading ontology:', url, 'for entity ', graphIri, ' from ', url);\n    if (!store) {\n      console.log('Using default store');\n      store = this.store;\n    }\n    return this.loadRawOntology(url).pipe(\n      flatMap(rawText => {\n        return Observable.create(observer => {\n            store.load('text/turtle', rawText, graphIri, (loadErr, loadResult) => {\n              if (!loadErr) {\n                console.log('Loading of ', url, 'succeeded: ', loadResult);\n                observer.next(loadResult);\n                observer.complete();\n              } else {\n                console.error(loadErr);\n                observer.error(loadErr);\n              }\n            });\n          }\n        );\n      })\n    );\n  }\n\n  /**\n   * This function loads the patterngraph of the given Uris\n   */\n  loadPatternGraphsByUri(uri?: string[]): Observable<any> {\n    if (!uri) {\n      return of(null);\n    }\n    const observables = uri.map((iri) => {\n      if (this.cookieService.get('patternpedia_github_token')) {\n        const githubUrl = this.githubPersistenceService.githubBaseUrl;\n        let url = iri;\n        if (iri === 'https://purl.org/patternpedia') {\n          url = githubUrl + '/patternpedia.ttl';\n        }\n        return this.githubPersistenceService.getFile(url).pipe(\n          map((fileResponse: GithubFileResponse) => {\n            return atob(fileResponse.content);\n          }));\n      }\n      return this.http.get(iri, {responseType: 'text'});\n    });\n\n    return forkJoin(observables);\n  }\n\n  /**\n   * This function loads ontologies locally hosted for development\n   */\n  loadLocallyHostedOntosRaw(): Observable<any> {\n    const observables = [\n      this.http.get('assets/patternpedia.ttl', {responseType: 'text'}),\n      // this.http.get('assets/cloudcomputingpatterns/cloudcomputingpatterns.ttl', {responseType: 'text'}),\n      // this.http.get('assets/cloudcomputingpatterns/elasticinfrastructure.ttl', {responseType: 'text'}),\n      // this.http.get('assets/cloudcomputingpatterns/elasticloadbalancer.ttl', {responseType: 'text'}),\n      this.http.get('assets/cloudcomputingpatterns/Cloud Computing Patterns.ttl', {responseType: 'text'}),\n      this.http.get('assets/cloudcomputingpatterns/Cloud Computing Patterns-links.ttl', {responseType: 'text'}),\n      this.http.get('assets/cloudcomputingpatterns/Cloud Computing Patterns-nodes.ttl', {responseType: 'text'}),\n      this.http.get('assets/internetofthingspatterns/internetofthingspatterns.ttl', {responseType: 'text'}),\n      this.http.get('assets/internetofthingspatterns/deviceshadow.ttl', {responseType: 'text'}),\n      this.http.get('assets/internetofthingspatterns/devicegateway.ttl', {responseType: 'text'}),\n      this.http.get('assets/enterpriseintegrationpatterns/Enterprise Integration Patterns.ttl', {responseType: 'text'}),\n      this.http.get('assets/enterpriseintegrationpatterns/Enterprise Integration Patterns-nodes.ttl', {responseType: 'text'}),\n      this.http.get('assets/enterpriseintegrationpatterns/Enterprise Integration Patterns-links.ttl', {responseType: 'text'})\n    ];\n    return forkJoin(observables);\n  }\n\n  async loadLocallyHostedOntos() {\n    console.log('LOADING Ontologies...');\n    const loadResult = await this.loadLocallyHostedOntosRaw().toPromise();\n    console.log('LOADED Ontologies!');\n    const store = this.store;\n    this.registerDefaultNameSpaces(store);\n    console.log('LOADING https://purl.org/patternpedia to store');\n    console.log('Result: ', await this.loadToStore('text/turtle',\n      loadResult[0], 'https://purl.org/patternpedia'));\n\n    // loading the enterprise integration patterns turtle file\n    console.log('LOADING https://purl.org/patternpedia/cloudcomputingpatterns');\n    console.log('Result: ', await this.loadToStore('text/turtle',\n      loadResult[1], 'https://purl.org/patternpedia/cloudcomputingpatterns'));\n    // loading the nodes\n    console.log('LOADING NODES OF https://purl.org/patternpedia/cloudcomputingpatterns');\n    console.log('Result: ', await this.loadToStore('text/turtle',\n      loadResult[2], 'https://purl.org/patternpedia/cloudcomputingpatterns'));\n    // loading the links\n    console.log('LOADING EDGES OF https://purl.org/patternpedia/cloudcomputingpatterns');\n    console.log('Result: ', await this.loadToStore('text/turtle',\n      loadResult[3], 'https://purl.org/patternpedia/cloudcomputingpatterns'));\n\n    console.log('LOADING https://purl.org/patternpedia/internetofthingspatterns/ to store');\n    console.log('Result: ', await this.loadToStore('text/turtle',\n      loadResult[4], 'https://purl.org/patternpedia/internetofthingspatterns'));\n    console.log('LOADING https://purl.org/patternpedia/internetofthingspatterns/deviceshadow to store');\n    console.log('Result: ', await this.loadToStore('text/turtle',\n      loadResult[5], 'https://purl.org/patternpedia/internetofthingspatterns/devicegateway'));\n    console.log('Result: ', await this.loadToStore('text/turtle',\n      loadResult[6], 'https://purl.org/patternpedia/internetofthingspatterns/devicegateway'));\n\n    // loading the enterprise integration patterns turtle file\n    console.log('LOADING https://purl.org/patternpedia/enterpriseintegrationpatterns');\n    console.log('Result: ', await this.loadToStore('text/turtle',\n      loadResult[7], 'https://purl.org/patternpedia/enterpriseintegrationpatterns'));\n    // loading the nodes\n    console.log('LOADING NODES OF https://purl.org/patternpedia/enterpriseintegrationpatterns');\n    console.log('Result: ', await this.loadToStore('text/turtle',\n      loadResult[8], 'https://purl.org/patternpedia/enterpriseintegrationpatterns'));\n    // loading the links\n    console.log('LOADING EDGES OF https://purl.org/patternpedia/enterpriseintegrationpatterns');\n    console.log('Result: ', await this.loadToStore('text/turtle',\n      loadResult[9], 'https://purl.org/patternpedia/enterpriseintegrationpatterns'));\n  }\n\n\n  async loadLinkedOpenPatternGraphs() {\n    const githubUrl = this.githubPersistenceService.githubBaseUrl;\n    let patternpediaResult = await this.http.get(githubUrl + '/patternpedia.ttl').toPromise();\n    const loadedResult = atob((<GithubFileResponse>patternpediaResult).content);\n    console.log('Result: ', await this.loadToStore('text/turtle',\n      loadedResult, 'https://purl.org/patternpedia'));\n    const store = this.store;\n    this.registerDefaultNameSpaces(store);\n    console.log('LOADING Ontologies...');\n    const patternGraphList: PatternGraphContainedInPP[] = await this.getPatternGraphsOfLinkedOpenPatterns();\n    console.log(`These are the patternlanguages that we have to load dynamically:`);\n    console.log(patternGraphList);\n    await this.loadUrisToStore(patternGraphList.map(it => it.patterngraph));\n  }\n\n  async loadUrisToStore(patternGraphList: QueriedData[]) {\n    console.log(`Load imported graphs to the store:`);\n    console.log(patternGraphList);\n    const loadResult = await this.loadPatternGraphsByUri(IriConverter.extractDataValue(patternGraphList)).toPromise();\n    if (!loadResult) {\n      return;\n    }\n    for (let i = 0; i < loadResult.length; i++) {\n      console.log('Result: ', await\n        this.loadToStore('text/turtle', loadResult[i], IriConverter.getFileName(patternGraphList[i].value)));\n\n    }\n    console.log('LOADED Uri Dependencies!');\n  }\n\n  loadToStore(mediaType: string, data: string, graphIri: string): Promise<number> {\n    return new Promise((resolve, reject) => {\n      this.store.load(mediaType, data, graphIri, (err, result) => {\n        if (!err) {\n          resolve(result);\n        } else {\n          console.log('error while loading ' + graphIri);\n          reject(err);\n        }\n      });\n    });\n  }\n\n  /**\n   * Selects triples that suffice { <${ppInstanceIRI}> pp:containsPatternLanguage ?patternlanguage } and converts them into\n   * PatternLanguage objects.\n   * @param {string} ppInstanceIRI\n   * @returns {Observable<Array<PatternLanguage>>}\n   */\n  getPatternLanguages(ppInstanceIRI: string): Observable<Array<PatternLanguage>> {\n    return Observable.create(observer => {\n      this.store.execute(`SELECT ?patternlanguage WHERE { <${ppInstanceIRI}> pp:containsPatternLanguage ?patternlanguage }`,\n        (execErr, sparqlResult) => {\n          if (!execErr) {\n            console.log('Found following pattern languages:', sparqlResult);\n            const observables = [];\n            for (const entry of sparqlResult) {\n              observables.push(from(this.exec(`SELECT * WHERE { <${entry.patternlanguage.value}> ?p ?o }`, [ppInstanceIRI]))\n                .pipe(\n                  map(loadPLDetailsResult => {\n                    console.log('--->', loadPLDetailsResult);\n                    const pl = new PatternLanguage(entry.patternlanguage.value, null, []);\n                    for (const propEntry of loadPLDetailsResult) {\n                      if ('https://purl.org/patternpedia#hasLogo' === propEntry.p.value) {\n                        pl.logos.push(propEntry.o.value);\n                      } else if ('https://purl.org/patternpedia#hasName' === propEntry.p.value) {\n                        pl.name = propEntry.o.value;\n                      }\n                    }\n                    return pl;\n                  })\n                ));\n            }\n            forkJoin(observables)\n              .subscribe(aryResult => observer.next(aryResult), error1 => observer.error(error1));\n          } else {\n            console.error(execErr);\n            observer.error(execErr);\n          }\n        });\n    });\n  }\n\n  /**\n   * Load patterns of given pattern language\n   * @param patternLanguageIRI\n   * @param store\n   */\n  getPatternsOfPatternLanguage(patternLanguageIRI: string, store: any = null): Observable<any> {\n    if (!store) {\n      console.log('Using default store');\n      store = this.store;\n    }\n    return from(this.exec(\n      `SELECT DISTINCT ?type ?pattern ?predicate ?property\n                 WHERE {\n                    <${patternLanguageIRI}> pp:containsPattern ?pattern .\n                    ?pattern ?predicate ?property .\n                    ?pattern a ?type .\n                    FILTER (?type != owl:NamedIndividual && ?predicate != rdf:type)\n                    }\n                 ORDER BY ?pattern`\n      , store))\n      .pipe(\n        map(result => {\n            if (result && result.length > 0) {\n              const patterns = {};\n              for (const row of result) {\n                // row.pattern.value = PatternIndividual IRI\n                if (!patterns[row.pattern.value]) {\n                  patterns[row.pattern.value] = {iri: row.pattern.value, type: row.type.value};\n                }\n                if (!patterns[row.pattern.value][row.predicate.value]) {\n                  patterns[row.pattern.value][row.predicate.value] = {\n                    name: row.predicate.value,\n                    value: row.property.value,\n                    type: row.property.type\n                  };\n                } else if (!patterns[row.pattern.value][row.predicate.value].isArray()) {\n                  const temp = patterns[row.pattern.value][row.predicate.value];\n                  patterns[row.pattern.value][row.predicate.value] = [temp,\n                    {\n                      name: row.predicate.value,\n                      value: row.property.value,\n                      type: row.property.type\n                    }];\n                } else if (patterns[row.pattern.value][row.predicate.value].isArray()) {\n                  patterns[row.pattern.value][row.predicate.value].push({\n                    name: row.predicate.value,\n                    value: row.property.value,\n                    type: row.property.type\n                  });\n                }\n              }\n              return patterns;\n            } else {\n              return {};\n            }\n          }\n        )\n      );\n  }\n\n\n  /**\n   * Executes the given query on the given store. If no store is given the default store is used.\n   * @param {string} qry\n   * @param {Array<string>} graphs\n   * @param store\n   * @returns {Promise<Array<any>> | Promise<boolean>}\n   */\n  async exec(qry: string, graphs: Array<string>): Promise<Array<any>> {\n    if (!this.store) {\n      await this.createNewStore();\n    }\n    return new Promise<Array<any>>((resolve, reject) => {\n      this.store.execute(qry, graphs, [], (execErr, execResult) => {\n        if (!execErr) {\n          resolve(execResult);\n        } else {\n          reject(execErr);\n        }\n      });\n    });\n  }\n\n  /**\n   * Execute an ask query on the give store. If no store is given the default store is used.\n   * @param askStatement\n   * @param {Array<string>} graphs\n   * @param store\n   * @returns {Promise<boolean>}\n   */\n  async ask(askStatement: string, graphs: Array<string>): Promise<boolean> {\n    if (!this.store) {\n      await this.createNewStore();\n    }\n    return new Promise<boolean>((resolve, reject) => {\n      this.store.execute(askStatement, graphs, (execErr, execResult) => {\n        if (!execErr) {\n          resolve(execResult);\n        } else {\n          reject(execErr);\n        }\n      });\n    });\n  }\n\n  getOntologyAsTurtle(): Observable<string> {\n    return Observable.create(observer => {\n      this.store.graph((err, result) => {\n        if (!err) {\n          observer.next(result.toNT());\n          observer.complete();\n        } else {\n          observer.error(err);\n        }\n      });\n    });\n  }\n\n  /**\n   * Insert given pattern language to store given store. If no store is given the default store is used.\n   * @param pl Pattern language to insert\n   * @param store Store the new pattern language is inserted to\n   */\n  insertNewPatternLanguageIndividual(pl: PatternLanguage, store: any = null): Observable<boolean> {\n    // TODO: Add triple that connect pattern language individual with a PatternPedia Instance\n    // (plId pp:containsPatternLanguage NewPatternLanguageIndividualIRI)\n    if (!store) {\n      console.log('Use default store');\n      store = this.store;\n    }\n    pl = !pl ? new PatternLanguage(\n      'https://purl.org/patternpedia#InternetOfThingsPatterns',\n      'Internet of Things Patterns',\n      new Array<string>('http://placekitten.com/150/151')\n    ) : pl;\n\n    // prepare logo query part\n    let logoQry = '';\n    for (const logo of pl.logos) {\n      logoQry += '<' + pl.iri + '> pp:hasLogo \"' + logo + '\"^^xsd:anyURI . ';\n    }\n    logoQry += ' }';\n    let qry = `INSERT DATA { <${pl.iri}> rdf:type owl:NamedIndividual . \\\n                                   <${pl.iri}> rdf:type pp:PatternLanguage . \\\n                                   <${pl.iri}> pp:hasName \"${pl.name}\"^^xsd:string . `;\n    qry += logoQry;\n    console.log('Executing Query:', qry);\n    return Observable.create(observer => {\n      this.store.execute(qry, (err, result) => {\n        if (!err) {\n          observer.next(result);\n          observer.complete();\n        } else {\n          throwError(err);\n        }\n      });\n    });\n  }\n\n\n  async getPatternGraphsOfLinkedOpenPatterns(): Promise<PatternGraphContainedInPP[]> {\n    // Function taken from Loader\n    // TODO: move functionality to avoid duplicate code\n    const supportedIRI = 'https://purl.org/patternpedia#LinkedOpenPatterns';\n    const qryPatternGraphs = `SELECT DISTINCT ?patterngraph\n                                      WHERE {\n                                          <${supportedIRI}> <https://purl.org/patternpedia#containsPatternGraph> ?patterngraph\n                                      }`;\n    const patternGraphs = await this.exec(qryPatternGraphs, [IriConverter.getFileName(supportedIRI)]);\n\n    return this.exec(qryPatternGraphs, [IriConverter.getFileName(supportedIRI)]);\n  }\n\n  async getRestrictionsOfPL(graphIri: string): Promise<RestrictionResponse[]> {\n    const qryPatternGraphs = `SELECT DISTINCT  ?property ?exactCardinality ?minCardinality \n        ?maxCardinality ?dataRange ?allValuesdataRange ?someValuesdataRange \n        WHERE {\n            {\n              ?patternLanguageIndividual a owl:Class . \n              ?patternLanguageIndividual rdfs:subClassOf ?restrictionClass .\n              ?restrictionClass a owl:Restriction . \n              ?restrictionClass owl:onProperty ?property .\n              ?property a owl:DatatypeProperty .\n              optional { ?restrictionClass owl:allValuesFrom ?allValuesdataRange .} \n              optional { ?restrictionClass owl:onDataRange   ?dataRange .}\n              optional { ?restrictionClass owl:someValuesFrom ?someValuesdataRange .}\n              optional { ?restrictionClass owl:qualifiedCardinality ?exactCardinality . } \n              optional { ?restrictionClass owl:minCardinality  ?minCardinality . }  \n              optional { ?restrictionClass owl:maxCardinality  ?maxCardinality . }\n            }\n            UNION\n              {\n              \n              ?patternLanguageIndividual a owl:Class . \n              ?patternLanguageIndividual rdfs:subClassOf ?restrictionClass .\n              ?restrictionClass a owl:Restriction . \n              ?restrictionClass owl:onProperty ?property .\n              ?property a pp:DatatypePropertyListItem .\n              optional { ?restrictionClass owl:allValuesFrom ?allValuesdataRange .} \n              optional { ?restrictionClass owl:onDataRange   ?dataRange .}\n              optional { ?restrictionClass owl:someValuesFrom ?someValuesdataRange .}\n              optional { ?restrictionClass owl:qualifiedCardinality ?exactCardinality . } \n              optional { ?restrictionClass owl:minCardinality  ?minCardinality . }  \n              optional { ?restrictionClass owl:maxCardinality  ?maxCardinality . }\n              }\n        }`;\n\n    return this.exec(qryPatternGraphs, [IriConverter.getFileName(graphIri)]);\n  }\n\n  async getPLLogo(graphIri: string): Promise<Logo[]> {\n    const qryPatternGraphs = `SELECT ?logo\n        WHERE {\n            ?pl rdf:type owl:NamedIndividual .\n            ?pl <https://purl.org/patternpedia#hasLogo> ?logo .\n        }`;\n\n    return this.exec(qryPatternGraphs, [IriConverter.getFileName(graphIri)]);\n  }\n\n  async getOWLImports(graphIri: string): Promise<Import[]> {\n    const qryPatternGraphs = `SELECT ?import\n        WHERE {\n            ?pl rdf:type owl:Ontology .\n            ?pl  owl:imports ?import .\n        }`;\n    return this.exec(qryPatternGraphs, [IriConverter.getFileName(graphIri)]);\n  }\n\n\n  async getPatternProperties(graphIri: string, patternIri: string): Promise<PatternProperty[]> {\n    const qryPatternGraph = `SELECT DISTINCT ?pattern ?property ?predicate WHERE {\n            { <${patternIri}> a owl:NamedIndividual . \n              <${patternIri}> ?property ?predicate\n                FILTER(?property != rdf:type)\n            }\n        } `;\n    return this.exec(qryPatternGraph, [IriConverter.getFileName(graphIri)]);\n  }\n\n  async allTriples(graphIri: string): Promise<any[]> {\n    const qryPatternGraph = `SELECT * WHERE {\n            ?subject ?predicate ?object .\n        } `;\n    return this.exec(qryPatternGraph, [IriConverter.getFileName(graphIri)]);\n  }\n\n  async getDataPropertyList(graphIri: string): Promise<any[]> {\n    // get position: count the nodes between the start of the list (:DatatypePropertyList) and the current list element\n    const qryPatternGraph = `SELECT (count(?innerNodes)-1 as ?position) ?element where { \n      :DatatypePropertyList :list/rdf:rest* ?innerNodes . \n  \t  ?innerNodes rdf:rest* ?node .\n      ?node rdf:first ?element .\n    }\n    group by ?node ?dataProperty ?element\n    order by ?position`;\n    return this.exec(qryPatternGraph, [IriConverter.getFileName(graphIri)]);\n  }\n\n  getPLSections(graphIri: string): Promise<SectionResponse[]> {\n    const qryPatternGraph = `SELECT ?section ?index\n    WHERE {\n    {\n     ?section a owl:DatatypeProperty .\n    }\n    UNION\n      {\n    ?section a pp:DatatypePropertyListItem .\n    optional{ ?section pp:hasListIndex  ?index .}\n    }\n    }\n    ORDER BY ?index`;\n    return this.exec(qryPatternGraph, [IriConverter.getFileName(graphIri)]);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AbstractControl, ValidatorFn } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidationService {\n\n\n  constructor() {\n  }\n\n\n  static getMessageForError(section, keyError, errorValue): string {\n    if (keyError === 'required') {\n      return section + ': This value is required';\n    }\n    if (keyError === 'xsdImage') {\n\n      return section + ': Please follow this pattern: ![](http://) and enter a valid url in the round brackets';\n    }\n    if (keyError === 'xsdInteger') {\n      return section + ': Please enter an integer.';\n    }\n\n    if( keyError === 'xsdAnyURI') {\n\n      return section + ': Please enter a valid URL/URL.';\n    }\n    if (keyError === 'minlength') {\n      return section + ': Please enter only ' + errorValue['requiredLength'] + ' entries';\n    }\n    if (keyError === 'maxlength') {\n      return section + ': Please enter max. ' + errorValue['requiredLength'] + ' entries';\n    }\n  }\n\n\n\n  // checks if value is an array of strings matching the markdown image pattern (e.g. [![test](http://placekitten.com/200/300), ![](http://any.valid.url.com)]\n  static xsdImage(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\n      if (control.value !== undefined) {\n        if (!this.allValuesMatchRegex(control.value, /!\\[.*\\]\\(http:\\/\\/([a-zA-Z.0-9]+[\\/]*)+\\)/g)) {\n          return {'xsdImage': true};\n        }\n      }\n      return null;\n    };\n  }\n\n  // checks if value is an array of strings matching the markdown image pattern (e.g. [![test](http://placekitten.com/200/300), ![](http://any.valid.url.com)]\n  static xsdInteger(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\n      if (control.value !== undefined) {\n        let arrayOfImageValues = control.value;\n        if (!(arrayOfImageValues instanceof Array)) {\n          arrayOfImageValues = [arrayOfImageValues];\n        }\n        for (const item of arrayOfImageValues) {\n          if (isNaN(+item)) {\n            return {'xsdInteger': true};\n          }\n        }\n      }\n      return null;\n    };\n  }\n\n  // checks if value is an array of strings matching the markdown url pattern (e.g. [[test](http://placekitten.com/200/300), [](http://any.valid.url.com)]\n  static xsdAnyURI(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\n      if (control.value !== undefined) {\n        if (!this.allValuesMatchRegex(control.value, /\\[.*\\]\\(http:\\/\\/([a-zA-Z.0-9]+[\\/]*)+\\)/g)) {\n          return {'xsdAnyURI': true};\n        }\n      }\n      return null;\n    };\n  }\n\n  static startsWithValidPrefix(allowedPrefixes: string[]): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\n      if (control.value !== undefined) {\n        if (control.value.indexOf(':') === -1) {\n          return {'startsWithValidPrefix': true};\n        }\n        const prefix = control.value.trim().substring(0, control.value.indexOf(':'));\n        if (allowedPrefixes.findIndex(it => it === prefix) === -1) {\n          return {'startsWithValidPrefix': true};\n        }\n      }\n      return null;\n    };\n  }\n\n\n  private static allValuesMatchRegex(array: any, regex) {\n    let arrayOfImageValues = array;\n    if (!(arrayOfImageValues instanceof Array)) {\n      arrayOfImageValues = [arrayOfImageValues];\n    }\n    for (const item of arrayOfImageValues) {\n      if (!item) {\n        continue;\n      }\n      if (!item.match(regex).length <= item.trim().length) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { QueriedData } from '../service/data/QueriedData.interface';\n\nexport class IriConverter {\n    static convertIriToId(iri: string): string {\n        return encodeURIComponent(encodeURIComponent(iri));\n    }\n\n    static convertIdToIri(id: string): string {\n        return decodeURIComponent(decodeURIComponent(id));\n    }\n\n  static getFileName(iri: string): string {\n        return iri.split('#')[0];\n    }\n\n  static extractIndividualNameFromIri(iri: string): string {\n    return iri.includes('#') ? iri.split('#')[1] :\n      iri.split('/')[iri.split('/').length - 1];\n  }\n\n  static getURL(patternlanguageIri: string) {\n    if (patternlanguageIri.indexOf('patternlanguages') !== -1) {\n      return patternlanguageIri;\n\n    }\n    return this.getFileName(patternlanguageIri);\n  }\n\n  static removeWhitespace(text: string): string {\n    return text.replace(/\\s/g, '');\n  }\n\n\n  static extractDataValue(pl: QueriedData[]): string[] {\n    return pl.map((graph: QueriedData) => {\n      return this.getURL(graph.value);\n    });\n  }\n\n  static getSectionName(patternSection: string) {\n    return patternSection.split('#has')[1];\n  }\n\n  static isIri(name: string): boolean {\n    return (name.indexOf('#') >= 0) || (name.indexOf('://') >= 0) || (name.indexOf('purl.org/patternpedia') >= 0);\n  }\n\n\n  static getPatternListIriForPLIri(supportedIRI: string) {\n    return this.getFileName(supportedIRI) + '/' + this.extractIndividualNameFromIri(this.getFileName(supportedIRI)) + '-Patterns';\n\n  }\n}\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { CloudComputingPatternsModule } from './pattern-language/cloud-computing-patterns/cloud-computing-patterns.module';\nimport { InternetOfThingsPatternsModule } from './pattern-language/internet-of-things-patterns/internet-of-things-patterns.module';\nimport { EnterpriseIntegrationPatternsModule } from './pattern-language/enterprise-integration-patterns/enterprise-integration-patterns.module';\n\n@NgModule({\n    // here we import all specific extensions and make them available for the app\n    imports: [\n        CloudComputingPatternsModule,\n        InternetOfThingsPatternsModule,\n        EnterpriseIntegrationPatternsModule\n    ],\n    declarations: [],\n    exports: []\n})\nexport class ExtensionsModule {\n}\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CloudComputingPatternsLoaderService } from './loader/cloud-computing-patterns-loader.service';\nimport { CloudComputingPatternsComponent } from './component/cloud-computing-patterns/cloud-computing-patterns.component';\nimport { ComponentRegistryService } from '../../../core/service/component-registry.service';\nimport { MatButtonModule, MatCardModule, MatDialogModule, MatIconModule, MatTooltipModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\nimport { CloudComputingPatternComponent } from './component/cloud-computing-pattern/cloud-computing-pattern.component';\nimport { IriConverter } from '../../../core/util/iri-converter';\nimport { NgxMdModule } from 'ngx-md';\nimport { CloudComputingPatternsWriterService } from './writer/cloud-computing-patterns-writer.service';\nimport { CoreModule } from '../../../core/core.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatCardModule,\n        MatButtonModule,\n        MatTooltipModule,\n        MatDialogModule,\n        MatIconModule,\n        NgxMdModule.forRoot(),\n        CoreModule,\n        RouterModule\n    ],\n    declarations: [\n        CloudComputingPatternComponent,\n        CloudComputingPatternsComponent,\n    ],\n    providers: [\n        CloudComputingPatternsLoaderService,\n        CloudComputingPatternsWriterService\n    ],\n    exports: [],\n    entryComponents: [\n        CloudComputingPatternComponent,\n        CloudComputingPatternsComponent,\n    ]\n})\nexport class CloudComputingPatternsModule {\n    constructor(private cr: ComponentRegistryService) {\n      this.cr.registerComponent(IriConverter.convertIriToId('https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#CloudComputingPatterns'), {\n            plcomponent: CloudComputingPatternsComponent,\n            pcomponent: CloudComputingPatternComponent\n        }); // tslint:disable-line:max-line-length\n    }\n}\n","module.exports = \"<button style=\\\"margin-bottom: 20px\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"navigateBack()\\\">\\n    <i class=\\\"material-icons\\\">keyboard_backspace</i>\\n</button>\\n<h1>{{pattern?.name}}</h1>\\n<mat-card>\\n    <div style=\\\"display: flex; align-items: center;\\\" (mouseenter)=\\\"editMode.intent.showActionButtons = true\\\"\\n         (mouseleave)=\\\"editMode.intent.showActionButtons = false\\\">\\n        <ngx-md [data]=\\\"pattern?.intent.value\\\"></ngx-md>\\n        <button *ngIf=\\\"editMode.intent.showActionButtons\\\" mat-stroked-button\\n                style=\\\"margin-left: 5px\\\" color=\\\"primary\\\"\\n                (click)=\\\"openEditor('intent')\\\" matTooltip=\\\"Edit\\\"><i class=\\\"material-icons\\\">mode_edit</i></button>\\n    </div>\\n</mat-card>\\n<h2>{{pattern?.drivingQuestion.label}}</h2>\\n<div style=\\\"display: flex; align-items: center;\\\" (mouseenter)=\\\"editMode.drivingQuestion.showActionButtons = true\\\"\\n     (mouseleave)=\\\"editMode.drivingQuestion.showActionButtons = false\\\">\\n    <ngx-md [data]=\\\"pattern?.drivingQuestion.value\\\"></ngx-md>\\n    <button *ngIf=\\\"editMode.drivingQuestion.showActionButtons\\\" mat-stroked-button\\n            style=\\\"margin-left: 5px\\\" color=\\\"primary\\\"\\n            (click)=\\\"openEditor('drivingQuestion')\\\" matTooltip=\\\"Edit\\\"><i class=\\\"material-icons\\\">mode_edit</i></button>\\n</div>\\n<h2>{{pattern?.context.label}}</h2>\\n<div style=\\\"display: flex; align-items: center;\\\" (mouseenter)=\\\"editMode.context.showActionButtons = true\\\"\\n     (mouseleave)=\\\"editMode.context.showActionButtons = false\\\">\\n    <ngx-md [data]=\\\"pattern?.context.value\\\"></ngx-md>\\n    <button *ngIf=\\\"editMode.context.showActionButtons\\\" mat-stroked-button\\n            style=\\\"margin-left: 5px\\\" color=\\\"primary\\\"\\n            (click)=\\\"openEditor('context')\\\" matTooltip=\\\"Edit\\\"><i class=\\\"material-icons\\\">mode_edit</i></button>\\n</div>\\n<h2>{{pattern?.solution.label}}</h2>\\n<div style=\\\"display: flex; align-items: center;\\\" (mouseenter)=\\\"editMode.solution.showActionButtons = true\\\"\\n     (mouseleave)=\\\"editMode.solution.showActionButtons = false\\\">\\n    <ngx-md [data]=\\\"pattern?.solution.value\\\"></ngx-md>\\n    <button *ngIf=\\\"editMode.solution.showActionButtons\\\" mat-stroked-button\\n            style=\\\"margin-left: 5px\\\" color=\\\"primary\\\"\\n            (click)=\\\"openEditor('solution')\\\" matTooltip=\\\"Edit\\\"><i class=\\\"material-icons\\\">mode_edit</i></button>\\n</div>\\n<!-- Todo How can we handle arrays in md editor?\\n     We should not use a md editor for entering URLs!\\n     We edit directly in view,\\n     (i) add + button shown on mouseenter, hidden on mouseleave\\n     (ii) add - button shown on mouseenter, hidden on mouseleave\\n -->\\n<div style=\\\"display: flex\\\" (mouseenter)=\\\"editMode.solutionSketches.showActionButtons = true\\\"\\n     (mouseleave)=\\\"editMode.solutionSketches.showActionButtons = false\\\">\\n    <h2>{{pattern?.solutionSketches.label}}</h2>\\n    <button *ngIf=\\\"editMode.solutionSketches.showActionButtons\\\" mat-button\\n            style=\\\"margin-left: 5px\\\" color=\\\"primary\\\"\\n            matTooltip=\\\"Add\\\"><i class=\\\"material-icons\\\">add_circle</i></button>\\n</div>\\n<div style=\\\"display: flex; align-items: center;flex-wrap: wrap\\\">\\n    <img style=\\\"width: 500px; height: auto\\\" *ngFor=\\\"let sketch of pattern?.solutionSketches.value\\\" [src]=\\\"sketch\\\">\\n</div>\\n<h2>{{pattern?.result.label}}</h2>\\n<div style=\\\"display: flex; align-items: center;\\\" (mouseenter)=\\\"editMode.result.showActionButtons = true\\\"\\n     (mouseleave)=\\\"editMode.result.showActionButtons = false\\\">\\n    <ngx-md [data]=\\\"pattern?.result.value\\\"></ngx-md>\\n    <button *ngIf=\\\"editMode.result.showActionButtons\\\" mat-stroked-button\\n            style=\\\"margin-left: 5px\\\" color=\\\"primary\\\"\\n            (click)=\\\"openEditor('result')\\\" matTooltip=\\\"Edit\\\"><i class=\\\"material-icons\\\">mode_edit</i></button>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4dGVuc2lvbnMvcGF0dGVybi1sYW5ndWFnZS9jbG91ZC1jb21wdXRpbmctcGF0dGVybnMvY29tcG9uZW50L2Nsb3VkLWNvbXB1dGluZy1wYXR0ZXJuL2Nsb3VkLWNvbXB1dGluZy1wYXR0ZXJuLmNvbXBvbmVudC5zY3NzIn0= */\"","import { ChangeDetectorRef, Component, NgZone, OnInit, ViewChild } from '@angular/core';\nimport { PatternRenderingComponentInterface } from '../../../../../core/model/pattern-rendering-component.interface';\nimport { CloudComputingPatternsLoaderService } from '../../loader/cloud-computing-patterns-loader.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport CloudComputingPattern from '../../model/cloud-computing-pattern';\nimport { IriConverter } from '../../../../../core/util/iri-converter';\nimport { TdTextEditorComponent } from '@covalent/text-editor';\nimport { MatDialog } from '@angular/material';\nimport { DialogData, MdEditorComponent } from '../../../../../core/component/md-editor/md-editor.component';\nimport { CloudComputingPatternsWriterService } from '../../writer/cloud-computing-patterns-writer.service';\n\n@Component({\n    selector: 'pp-cloud-computing-pattern',\n    templateUrl: './cloud-computing-pattern.component.html',\n    styleUrls: ['./cloud-computing-pattern.component.scss']\n})\nexport class CloudComputingPatternComponent implements PatternRenderingComponentInterface, OnInit {\n\n    @ViewChild('mdEditor') private _textEditor: TdTextEditorComponent;\n\n    pId: string;\n    pattern: CloudComputingPattern;\n    mdEditorOptions = {};\n    editMode = {\n        intent: {showActionButtons: false},\n        drivingQuestion: {showActionButtons: false},\n        context: {showActionButtons: false},\n        solution: {showActionButtons: false},\n        solutionSketches: {showActionButtons: false},\n        result: {showActionButtons: false},\n    };\n\n    constructor(private loader: CloudComputingPatternsLoaderService,\n                private writer: CloudComputingPatternsWriterService,\n                private cdr: ChangeDetectorRef,\n                private router: Router,\n                private activatedRoute: ActivatedRoute,\n                private zone: NgZone,\n                private dialog: MatDialog) {\n    }\n\n    ngOnInit(): void {\n        this.loader.loadContentFromStore()\n            .then(patternMap => {\n                this.pattern = patternMap.get(IriConverter.convertIdToIri(this.pId));\n                this.cdr.detectChanges();\n            });\n    }\n\n    openEditor(field: string): void {\n        const dialogRef = this.dialog.open(MdEditorComponent,\n            {data: {field: field, label: this.pattern[field].label, content: this.pattern[field].value}});\n        this.editMode[field].edit = true;\n        dialogRef.afterClosed().subscribe(async (result: DialogData) => {\n            this.pattern[field].value = result.content;\n            await this.writer.writePatternToStore(this.pattern).catch(err => console.error(err));\n        });\n    }\n\n    navigateBack(): void {\n        this.zone.run(() => {\n            this.router.navigate(['..'], {relativeTo: this.activatedRoute});\n        });\n    }\n}\n","module.exports = \"<!--\\n  ~ Copyright (c) 2018 University of Stuttgart.\\n  ~\\n  ~ See the NOTICE file(s) distributed with this work for additional\\n  ~ information regarding copyright ownership.\\n  ~\\n  ~ This program and the accompanying materials are made available under the\\n  ~ terms of the Eclipse Public License 2.0 which is available at\\n  ~ http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\\n  ~ which is available at https://www.apache.org/licenses/LICENSE-2.0.\\n  ~\\n  ~ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\\n  -->\\n<button style=\\\"margin-bottom: 20px\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"navigateBack()\\\"><i class=\\\"material-icons\\\">keyboard_backspace</i></button>\\n\\n<div class=\\\"container\\\">\\n    <mat-card class=\\\"landing-card\\\" *ngFor=\\\"let pattern of patterns\\\">\\n        <mat-card-header>\\n            <!--<img *ngIf=\\\"pattern.icon.value; else noImageAvatar\\\" mat-card-avatar [src]=\\\"pattern.icon.value\\\">-->\\n            <!--<ng-template #noImageAvatar><img mat-card-avatar [src]=\\\"'https://placekitten.com/200/300'\\\"></ng-template>-->\\n\\n            <mat-card-title *ngIf=\\\"pattern.name && '' !== pattern.name; else noPatternName\\\" style=\\\"width: 10rem\\\">\\n                {{pattern.name}}\\n            </mat-card-title>\\n          <ng-template #noPatternName>\\n                <mat-card-title style=\\\"width: 10rem\\\">\\n                    No Name Provided\\n                </mat-card-title>\\n            </ng-template>\\n        </mat-card-header>\\n        <img mat-card-image *ngIf=\\\"pattern.icon.value; else noImage\\\" [src]=\\\"pattern.icon.value\\\" style=\\\"width: 12rem; margin: 0 -16px 16px 0\\\">\\n        <ng-template #noImage><img mat-card-image [src]=\\\"'https://placekitten.com/200/300'\\\"></ng-template>\\n        <mat-card-content style=\\\"height: 120px; overflow: scroll\\\">\\n            {{pattern.intent.value}}\\n        </mat-card-content>\\n        <mat-card-actions>\\n            <div style=\\\"text-align: center\\\">\\n                <button mat-stroked-button color=\\\"primary\\\" (click)=\\\"navigate(pattern.id)\\\"><i class=\\\"material-icons\\\">pageview</i>View\\n                </button>\\n            </div>\\n        </mat-card-actions>\\n    </mat-card>\\n</div>\\n\"","module.exports = \"/*!\\n * Copyright (c) 2018 University of Stuttgart.\\n *\\n * See the NOTICE file(s) distributed with this work for additional\\n * information regarding copyright ownership.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\\n */\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9QYXR0ZXJuUGVkaWEvcGF0dGVybi1wZWRpYS9zcmMvYXBwL2V4dGVuc2lvbnMvcGF0dGVybi1sYW5ndWFnZS9jbG91ZC1jb21wdXRpbmctcGF0dGVybnMvY29tcG9uZW50L2Nsb3VkLWNvbXB1dGluZy1wYXR0ZXJucy9jbG91ZC1jb21wdXRpbmctcGF0dGVybnMuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2V4dGVuc2lvbnMvcGF0dGVybi1sYW5ndWFnZS9jbG91ZC1jb21wdXRpbmctcGF0dGVybnMvY29tcG9uZW50L2Nsb3VkLWNvbXB1dGluZy1wYXR0ZXJucy9jbG91ZC1jb21wdXRpbmctcGF0dGVybnMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7OztFQ1lFIiwiZmlsZSI6InNyYy9hcHAvZXh0ZW5zaW9ucy9wYXR0ZXJuLWxhbmd1YWdlL2Nsb3VkLWNvbXB1dGluZy1wYXR0ZXJucy9jb21wb25lbnQvY2xvdWQtY29tcHV0aW5nLXBhdHRlcm5zL2Nsb3VkLWNvbXB1dGluZy1wYXR0ZXJucy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQ29weXJpZ2h0IChjKSAyMDE4IFVuaXZlcnNpdHkgb2YgU3R1dHRnYXJ0LlxuICpcbiAqIFNlZSB0aGUgTk9USUNFIGZpbGUocykgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWxcbiAqIGluZm9ybWF0aW9uIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMgYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZVxuICogdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgMi4wIHdoaWNoIGlzIGF2YWlsYWJsZSBhdFxuICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtMi4wLCBvciB0aGUgQXBhY2hlIFNvZnR3YXJlIExpY2Vuc2UgMi4wXG4gKiB3aGljaCBpcyBhdmFpbGFibGUgYXQgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMC5cbiAqXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogRVBMLTIuMCBPUiBBcGFjaGUtMi4wXG4gKi9cblxuIiwiLyohXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTggVW5pdmVyc2l0eSBvZiBTdHV0dGdhcnQuXG4gKlxuICogU2VlIHRoZSBOT1RJQ0UgZmlsZShzKSBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbFxuICogaW5mb3JtYXRpb24gcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuXG4gKlxuICogVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscyBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlXG4gKiB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSAyLjAgd2hpY2ggaXMgYXZhaWxhYmxlIGF0XG4gKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC0yLjAsIG9yIHRoZSBBcGFjaGUgU29mdHdhcmUgTGljZW5zZSAyLjBcbiAqIHdoaWNoIGlzIGF2YWlsYWJsZSBhdCBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wLlxuICpcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBFUEwtMi4wIE9SIEFwYWNoZS0yLjBcbiAqL1xuIl19 */\"","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { ChangeDetectorRef, Component, NgZone, OnInit } from '@angular/core';\nimport CloudComputingPattern from '../../model/cloud-computing-pattern';\nimport { CloudComputingPatternsLoaderService } from '../../loader/cloud-computing-patterns-loader.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PatternOntologyService } from 'src/app/core/service/pattern-ontology.service';\n\n@Component({\n    selector: 'pp-cloud-computing-patterns',\n    templateUrl: './cloud-computing-patterns.component.html',\n    styleUrls: ['./cloud-computing-patterns.component.scss']\n})\nexport class CloudComputingPatternsComponent implements OnInit {\n\n    patterns: Array<CloudComputingPattern>;\n    patternMap: Map<string, CloudComputingPattern>;\n\n    constructor(private loader: CloudComputingPatternsLoaderService,\n                private pos: PatternOntologyService,\n                private cdr: ChangeDetectorRef,\n                private router: Router,\n                private activatedRoute: ActivatedRoute,\n                private zone: NgZone) {\n    }\n\n    ngOnInit() {\n        // we have to load the individual patterns first by getting all imports from the base file\n        const uris = [\n            {value: 'https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns'},\n            {value: 'https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns/cloudcomputingpatterns-Patterns'},\n            {value: 'https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns/cloudcomputingpatterns-Relations'}\n        ];\n\n        this.pos.loadUrisToStore(uris).then(() => {\n            this.loader.loadContentFromStore()\n                .then(patternMap => {\n                    this.patternMap = patternMap;\n                    this.patterns = Array.from(patternMap.values());\n                    this.cdr.detectChanges();\n                });\n        });\n        // this.pos.getOWLImports('https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns')\n        //     .then(res => {\n        //         const importedIris = res.map(i => i.import);\n\n        //       this.pos.loadUrisToStore(importedIris)\n        //             .then(() => {\n        //                 // we can now query the data, as all patterns have been loaded\n        //                 this.loader.loadContentFromStore()\n        //                     .then(patternMap => {\n        //                         this.patternMap = patternMap;\n        //                         this.patterns = Array.from(patternMap.values());\n        //                         this.cdr.detectChanges();\n        //                     });\n        //             });\n        //     });\n    }\n\n    navigate(id: string): void {\n        this.zone.run(() => {\n            this.router.navigate([id], {relativeTo: this.activatedRoute});\n        });\n    }\n\n    navigateBack(): void {\n        this.zone.run(() => {\n            this.router.navigate(['..'], {relativeTo: this.activatedRoute});\n        });\n    }\n\n}\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport CloudComputingPattern from '../model/cloud-computing-pattern';\nimport Loader from '../../../../core/model/loader';\nimport { Injectable } from '@angular/core';\nimport { PatternOntologyService } from '../../../../core/service/pattern-ontology.service';\nimport { IriConverter } from '../../../../core/util/iri-converter';\n\n@Injectable()\nexport class CloudComputingPatternsLoaderService extends Loader<CloudComputingPattern> {\n\n    constructor(private pos: PatternOntologyService) {\n      super('https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#CloudComputingPatterns', pos);\n    }\n\n    async selectContentFromStore(): Promise<any> {\n        const qry = `SELECT DISTINCT ?type ?pattern ?predicate ?property\n                 WHERE {\n                    <${this.supportedIRI}> pp:containsPattern ?pattern .\n                    ?pattern ?predicate ?property .\n                    ?pattern a ?type .\n                    FILTER (?type != owl:NamedIndividual && ?predicate != rdf:type)\n                    }\n                 ORDER BY ?pattern`;\n        const graphs = [IriConverter.getFileName(this.supportedIRI)];\n\n        graphs.push('https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns');\n        graphs.push('https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns/cloudcomputingpatterns-Patterns');\n        graphs.push('https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns/cloudcomputingpatterns-Relations');\n\n        return this.executor.exec(qry, graphs);\n    }\n\n    mapTriples(triples: any): Promise<Map<string, CloudComputingPattern>> {\n        const result = new Map<string, CloudComputingPattern>();\n        // we first iterate the triples and generate an intermediate format to create afterwards pattern objects\n        const patterns = {};\n        for (const row of triples) {\n            // row.pattern.value = PatternIndividual IRI\n            if (!patterns[row.pattern.value]) {\n                patterns[row.pattern.value] = {iri: row.pattern.value, type: row.type.value};\n            }\n            if (!patterns[row.pattern.value][row.predicate.value]) {\n                patterns[row.pattern.value][row.predicate.value] = {\n                    name: row.predicate.value,\n                    value: row.property.value,\n                    type: row.property.type\n                };\n            } else if (!Array.isArray(patterns[row.pattern.value][row.predicate.value])) {\n                const temp = patterns[row.pattern.value][row.predicate.value];\n                patterns[row.pattern.value][row.predicate.value] = [temp,\n                    {\n                        name: row.predicate.value,\n                        value: row.property.value,\n                        type: row.property.type\n                    }];\n            } else if (Array.isArray(patterns[row.pattern.value][row.predicate.value])) {\n                patterns[row.pattern.value][row.predicate.value].push({\n                    name: row.predicate.value,\n                    value: row.property.value,\n                    type: row.property.type\n                });\n            }\n        }\n        for (const key of Object.keys(patterns)) {\n            const p = new CloudComputingPattern(key);\n          if (Array.isArray(patterns[key]['https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#hasSolutionSketch'])) {\n            for (const entry of patterns[key]['https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#hasSolutionSketch']) {\n                    p.solutionSketches.value.push(entry.value);\n                }\n          } else if (patterns[key]['https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#hasSolutionSketch']\n            && patterns[key]['https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#hasSolutionSketch'].value) {\n            p.solutionSketches.value.push(patterns[key]['https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#hasSolutionSketch'].value);\n            }\n          if (Array.isArray(patterns[key]['https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#hasVariation'])) {\n            for (const entry of patterns[key]['https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#hasVariation']) {\n                    p.variations.value.push(entry.value);\n                }\n          } else if (patterns[key]['https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#hasVariation']\n            && patterns[key]['https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#hasVariation'].value) {\n            p.variations.value.push(patterns[key]['https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#hasVariation'].value);\n            }\n            if (patterns[key] && patterns[key]['https://purl.org/patternpedia#hasName'] && patterns[key]['https://purl.org/patternpedia#hasName'].value) {\n                p.name = patterns[key]['https://purl.org/patternpedia#hasName'].value;\n            }\n          if (patterns[key] && patterns[key]['https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#hasIcon']\n            && patterns[key]['https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#hasIcon'].value) {\n            p.icon.value = patterns[key]['https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#hasIcon'].value;\n            }\n          if (patterns[key] && patterns[key]['https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#hasIntent']\n            && patterns[key]['https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#hasIntent'].value) {\n            p.intent.value = patterns[key]['https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#hasIntent'].value;\n            }\n          if (patterns[key] && patterns[key]['https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#hasDrivingQuestion']\n            && patterns[key]['https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#hasDrivingQuestion'].value) {\n            p.drivingQuestion.value = patterns[key]['https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#hasDrivingQuestion'].value;\n            }\n          if (patterns[key] && patterns[key]['https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#hasSolution']\n            && patterns[key]['https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#hasSolution'].value) {\n            p.solution.value = patterns[key]['https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#hasSolution'].value;\n            }\n          if (patterns[key] && patterns[key]['https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#hasResult']\n            && patterns[key]['https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#hasResult'].value) {\n            p.result.value = patterns[key]['https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#hasResult'].value;\n            }\n          if (patterns[key] && patterns[key]['https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#hasContext']\n            && patterns[key]['https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#hasContext'].value) {\n            p.context.value = patterns[key]['https://purl.org/patternpedia/patternlanguages/cloudcomputingpatterns#hasContext'].value;\n            }\n            result.set(p.iri, p);\n        }\n        return Promise.resolve(result);\n    }\n}\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport Pattern from '../../../../core/model/pattern.model';\nimport { RdfModelTriple } from '../../../../core/model/rdf-model-triple';\nimport { RdfModelNode } from '../../../../core/model/rdf-model-node';\nimport { IriConverter } from '../../../../core/util/iri-converter';\n\nclass CloudComputingPattern extends Pattern {\n    /*\n        From Pattern:\n            private _id: string;\n            iri: string;\n            name: string;\n     */\n    intent: { label: 'Intent', value: string } = {label: 'Intent', value: ''};\n    context: { label: 'Context', value: string } = {label: 'Context', value: ''};\n    drivingQuestion: { label: 'Driving Question', value: string } = {label: 'Driving Question', value: ''};\n    solution: { label: 'Solution', value: string } = {label: 'Solution', value: ''};\n    result: { label: 'Result', value: string } = {label: 'Result', value: ''};\n    icon: { label: 'Icon', value: string } = {label: 'Icon', value: ''};\n    solutionSketches: { label: 'Solution Sketches', value: Array<string> } = {label: 'Solution Sketches', value: []};\n    variations: { label: 'Variation', value: Array<string> } = {label: 'Variation', value: []};\n\n    constructor(iri: string,\n                name?: string,\n                icon?: string,\n                intent?: string,\n                context?: string,\n                drivingQuestion?: string,\n                solution?: string,\n                solutionSketches: Array<string> = [],\n                result?: string,\n                variations: Array<string> = []) {\n        super(iri, name);\n        this.intent.value = intent;\n        this.drivingQuestion.value = drivingQuestion;\n        this.context.value = context;\n        this.solution.value = solution;\n        this.result.value = result;\n        this.icon.value = icon;\n        this.solutionSketches.value = solutionSketches;\n        this.variations.value = variations;\n    }\n\n    toTurtle(): string {\n        const ary = this.getPrefixes();\n        ary.push('\\n');\n        ary.push(`<${IriConverter.getFileName(this.iri)}> rdf:type owl:Ontology .`);\n        ary.push('\\n');\n        ary.push('# #################################################################');\n        ary.push('# #');\n        ary.push('# #    Individuals');\n        ary.push('# #');\n        ary.push('# #################################################################');\n        ary.push('\\n');\n        ary.push(`### ${this.iri}`);\n        ary.push(`<${this.iri}> rdf:type owl:NamedIndividual ,`);\n        ary.push(`${' '.repeat(16)} ${this.getPatternType()} ;`);\n        ary.push(`${' '.repeat(8)} <https://purl.org/patternpedia#hasName> \"${this.name}\"^^xsd:string ;`);\n        ary.push(`${' '.repeat(8)} <https://purl.org/patternpedia/cloudcomputingpatterns#hasContext> \"${this.context.value}\"^^xsd:string ;`);\n        ary.push(`${' '.repeat(8)} <https://purl.org/patternpedia/cloudcomputingpatterns#hasDrivingQuestion> \"${this.drivingQuestion.value}\"^^xsd:string ;`);\n        ary.push(`${' '.repeat(8)} <https://purl.org/patternpedia/cloudcomputingpatterns#hasIcon> \"${this.icon.value}\"^^xsd:anyURI ;`);\n        ary.push(`${' '.repeat(8)} <https://purl.org/patternpedia/cloudcomputingpatterns#hasIntent> \"${this.intent.value}\"^^xsd:string ;`);\n        ary.push(`${' '.repeat(8)} <https://purl.org/patternpedia/cloudcomputingpatterns#hasSolution> \"${this.solution.value}\"^^xsd:string ;`);\n        ary.push('\\n');\n\n        // Todo solutionSketches and variations\n\n        return ary.join('\\n');\n    }\n\n    getPatternType(): string {\n        return '<https://purl.org/patternpedia/cloudcomputingpatterns#CloudComputingPattern>';\n    }\n\n    getPrefixes(): Array<string> {\n        const ary: Array<string> = [];\n        ary.push(\n            `@prefix : <${IriConverter.getFileName(this.iri)}#> .`,\n            `@prefix owl: <http://www.w3.org/2002/07/owl#> .`,\n            `@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .`,\n            `@prefix xml: <http://www.w3.org/XML/1998/namespace> .`,\n            `@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .`\n        );\n        return ary;\n    }\n\n    // createRdfModelNamedNode(value: string, datatype?: string): RdfModelNode {\n    //     if (datatype) {\n    //         return new RdfModelNode('NamedNode', ['interfaceName, nominalValue'], value, datatype);\n    //     } else {\n    //         return new RdfModelNode('NamedNode', ['interfaceName, nominalValue'], value);\n    //     }\n    // }\n    //\n    // createRdfModelLiteralNode(value: string, datatype: string): RdfModelNode {\n    //     return new RdfModelNode('Literal', ['interfaceName, nominalValue'], value, datatype);\n    // }\n    //\n    // createPatternNode(): RdfModelNode {\n    //     return this.createRdfModelNamedNode(this.iri);\n    // }\n    //\n    // // Todo: This does not work because RDFModel.RDFEnvironment.RDFModel.Profile.resolve throws error toResolve.indexOf is not a function\n    // toRdfModelTriples(): Array<RdfModelTriple> {\n    //     const triples: Array<RdfModelTriple> = [];\n    //     // Statements about the file\n    //     triples.push(new RdfModelTriple(\n    //         this.createRdfModelNamedNode('https://purl.org/patternpedia/cloudcomputingpatterns/elasticinfrastructure'),\n    //         this.createRdfModelNamedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#type'),\n    //         this.createRdfModelNamedNode('http://www.w3.org/2002/07/owl#Ontology')\n    //     ));\n    //     triples.push(new RdfModelTriple(\n    //         this.createRdfModelNamedNode('https://purl.org/patternpedia/cloudcomputingpatterns/elasticinfrastructure'),\n    //         this.createRdfModelNamedNode('http://www.w3.org/2002/07/owl#imports'),\n    //         this.createRdfModelNamedNode('https://purl.org/patternpedia/cloudcomputingpatterns')\n    //     ));\n    //\n    //     // Statements about the individual\n    //     triples.push(new RdfModelTriple(\n    //         this.createPatternNode(),\n    //         this.createRdfModelNamedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#type'),\n    //         this.createRdfModelNamedNode('http://www.w3.org/2002/07/owl#NamedIndividual')\n    //     ));\n    //     triples.push(new RdfModelTriple(\n    //         this.createPatternNode(),\n    //         this.createRdfModelNamedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#type'),\n    //         this.createRdfModelNamedNode('https://purl.org/patternpedia/cloudcomputingpatterns#CloudComputingPattern')\n    //     ));\n    //     triples.push(new RdfModelTriple(\n    //         this.createPatternNode(),\n    //         this.createRdfModelNamedNode('https://purl.org/patternpedia#hasName'),\n    //         this.createRdfModelLiteralNode(this.name, 'http://www.w3.org/2001/XMLSchema#string')\n    //     ));\n    //     triples.push(new RdfModelTriple(\n    //         this.createPatternNode(),\n    //         this.createRdfModelNamedNode('https://purl.org/patternpedia/cloudcomputingpatterns#hasIcon'),\n    //         this.createRdfModelNamedNode(this.icon.value, 'http://www.w3.org/2001/XMLSchema#anyURI')\n    //     ));\n    //     triples.push(new RdfModelTriple(\n    //         this.createPatternNode(),\n    //         this.createRdfModelNamedNode('https://purl.org/patternpedia/cloudcomputingpatterns#hasIntent'),\n    //         this.createRdfModelNamedNode(this.intent.value, 'http://www.w3.org/2001/XMLSchema#string')\n    //     ));\n    //     triples.push(new RdfModelTriple(\n    //         this.createPatternNode(),\n    //         this.createRdfModelNamedNode('https://purl.org/patternpedia#hasContext'),\n    //         this.createRdfModelLiteralNode(this.context.value, 'http://www.w3.org/2001/XMLSchema#string')\n    //     ));\n    //     triples.push(new RdfModelTriple(\n    //         this.createPatternNode(),\n    //         this.createRdfModelNamedNode('https://purl.org/patternpedia/cloudcomputingpatterns#hasDrivingQuestion'),\n    //         this.createRdfModelNamedNode(this.drivingQuestion.value, 'http://www.w3.org/2001/XMLSchema#string')\n    //     ));\n    //     triples.push(new RdfModelTriple(\n    //         this.createPatternNode(),\n    //         this.createRdfModelNamedNode('https://purl.org/patternpedia/cloudcomputingpatterns#hasSolution'),\n    //         this.createRdfModelNamedNode(this.solution.value, 'http://www.w3.org/2001/XMLSchema#string')\n    //     ));\n    //     triples.push(new RdfModelTriple(\n    //         this.createPatternNode(),\n    //         this.createRdfModelNamedNode('https://purl.org/patternpedia/cloudcomputingpatterns#hasResult'),\n    //         this.createRdfModelNamedNode(this.result.value, 'http://www.w3.org/2001/XMLSchema#string')\n    //     ));\n    //     for (const sketch of this.solutionSketches.value) {\n    //         triples.push(new RdfModelTriple(\n    //             this.createPatternNode(),\n    //             this.createRdfModelNamedNode('https://purl.org/patternpedia/cloudcomputingpatterns#hasSolutionSketch'),\n    //             this.createRdfModelNamedNode(sketch, 'http://www.w3.org/2001/XMLSchema#anyURI')\n    //         ));\n    //     }\n    //     for (const variation of this.variations.value) {\n    //         triples.push(new RdfModelTriple(\n    //             this.createPatternNode(),\n    //             this.createRdfModelNamedNode('https://purl.org/patternpedia/cloudcomputingpatterns#hasVariation'),\n    //             this.createRdfModelNamedNode(variation, 'http://www.w3.org/2001/XMLSchema#string')\n    //         ));\n    //     }\n    //     return triples;\n    // }\n}\n\nexport default CloudComputingPattern;\n","import { Injectable } from '@angular/core';\nimport CloudComputingPattern from '../model/cloud-computing-pattern';\nimport Writer from '../../../../core/model/writer';\nimport { PatternOntologyService } from '../../../../core/service/pattern-ontology.service';\nimport { IriConverter } from '../../../../core/util/iri-converter';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CloudComputingPatternsWriterService extends Writer<CloudComputingPattern> {\n\n    constructor(private pos: PatternOntologyService) {\n        super('https://purl.org/patternpedia/cloudcomputingpatterns#CloudComputingPatterns', pos);\n    }\n\n    async writePatternToStore(pattern: CloudComputingPattern): Promise<void> {\n        return new Promise(async (resolve, reject) => {\n            // const graphUri = IriConverter.getFileName(pattern.iri);\n            // const graph = await this.getGraph(graphUri);\n            // console.log(JSON.stringify(graph));\n            // graph.triples = pattern.toRdfModelTriples();\n            // graph.length = graph.triples.length;\n            // try {\n            //     await this.clearStore(graphUri);\n            //     await this.insertIntoStore(graph, graphUri);\n                resolve();\n            // } catch (err) {\n            //     reject(err);\n            // }\n        });\n    }\n\n    getGraph(graphUri: string): Promise<any> {\n        return new Promise((resolve, reject) => {\n            this.pos.store.graph(graphUri, (err, graph) => {\n                if (!err) {\n                    resolve(graph);\n                } else {\n                    reject(err);\n                }\n            });\n        });\n    }\n\n    insertIntoStore(graph: any, graphUri: string): Promise<void> {\n        return new Promise((resolve, reject) => {\n            this.pos.store.insert(graph, graphUri, (err) => {\n                if (err) {\n                    console.error(err);\n                    reject(err);\n                } else {\n                    resolve();\n                }\n            });\n        });\n    }\n\n    clearStore(graphUri): Promise<boolean> {\n        return new Promise((resolve, reject) => {\n            this.pos.store.clear(graphUri, (err) => {\n                if (err) {\n                    console.error(err);\n                    reject(false);\n                } else {\n                    resolve(true);\n                }\n            });\n        });\n    }\n}\n","import { Directive, Input, ElementRef } from '@angular/core';\nimport { Node, NetworkGraph } from '../../model';\nimport { D3Service } from '../../service/d3.service';\n\n@Directive({\n  selector: '[draggableNode]'\n})\nexport class DraggableDirective {\n\n  @Input('draggableNode') draggableNode: Node;\n  @Input('draggableInGraph') draggableInGraph: NetworkGraph;\n\n  constructor(private d3Service: D3Service, private _element: ElementRef) { }\n\n  ngOnInit() {\n      this.d3Service.applyDraggableBehaviour(this._element.nativeElement, this.draggableNode, this.draggableInGraph);\n  }\n\n}\n","import { Directive, Input, ElementRef } from '@angular/core';\nimport { D3Service } from '../../service/d3.service';\n\n@Directive({\n  selector: '[zoomableOf]'\n})\nexport class ZoomableDirective {\n\n  @Input('zoomableOf') zoomableOf: ElementRef;\n\n  constructor(private d3Service: D3Service, private _element: ElementRef) {}\n\n  ngOnInit() {\n      this.d3Service.applyZoomableBehaviour(this.zoomableOf, this._element.nativeElement);\n  }\n\n}\n","module.exports = \"<p>\\n  enterprise-integration-pattern works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4dGVuc2lvbnMvcGF0dGVybi1sYW5ndWFnZS9lbnRlcnByaXNlLWludGVncmF0aW9uLXBhdHRlcm5zL2NvbXBvbmVudC9lbnRlcnByaXNlLWludGVncmF0aW9uLXBhdHRlcm4vZW50ZXJwcmlzZS1pbnRlZ3JhdGlvbi1wYXR0ZXJuLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pp-enterprise-integration-pattern',\n  templateUrl: './enterprise-integration-pattern.component.html',\n  styleUrls: ['./enterprise-integration-pattern.component.scss']\n})\nexport class EnterpriseIntegrationPatternComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<!-- Toolbar -->\\n<div class=\\\"toolbar\\\">\\n  <!-- to navigate back to the overview of pattern languages -->\\n  <button mat-raised-button class=\\\"back_button\\\" color=\\\"primary\\\" \\n    (click)=\\\"navigateBack()\\\">\\n    <i class=\\\"material-icons\\\">keyboard_backspace</i>\\n  </button>\\n\\n  <!-- to open filter dialog -->\\n  <button mat-raised-button class=\\\"filter_dialog\\\" color=\\\"primary\\\"\\n    (click)=\\\"openFilterDialog()\\\">\\n    <i class=\\\"material-icons\\\">filter_list</i>\\n    Filter Patterns\\n  </button>\\n</div>\\n\\n<div *ngIf=\\\"data; else loading\\\">\\n  <pp-graph \\n    #graph\\n    [links]=\\\"data.links\\\" \\n    [nodes]=\\\"data.nodes\\\" \\n    [selectedNodeId]=\\\"data.id\\\"\\n    (nodeSelectEvent)=\\\"selectNode($event)\\\"\\n    (nodeUnselectEvent)=\\\"unselectNode($event)\\\">\\n  </pp-graph>\\n</div>\\n<ng-template #loading>Loading Data ... </ng-template>\"","module.exports = \".toolbar {\\n  margin-bottom: 20px; }\\n  .toolbar button {\\n    margin-right: 16px; }\\n  .back_button {\\n  /*vertical-align: top;\\n    margin-top: 5px;*/ }\\n  .filter_nodes {\\n  margin-left: 16px;\\n  /*float: right;*/\\n  font-size: 16pt; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9QYXR0ZXJuUGVkaWEvcGF0dGVybi1wZWRpYS9zcmMvYXBwL2V4dGVuc2lvbnMvcGF0dGVybi1sYW5ndWFnZS9lbnRlcnByaXNlLWludGVncmF0aW9uLXBhdHRlcm5zL2NvbXBvbmVudC9lbnRlcnByaXNlLWludGVncmF0aW9uLXBhdHRlcm5zL2VudGVycHJpc2UtaW50ZWdyYXRpb24tcGF0dGVybnMuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2V4dGVuc2lvbnMvcGF0dGVybi1sYW5ndWFnZS9lbnRlcnByaXNlLWludGVncmF0aW9uLXBhdHRlcm5zL2NvbXBvbmVudC9lbnRlcnByaXNlLWludGVncmF0aW9uLXBhdHRlcm5zL2VudGVycHJpc2UtaW50ZWdyYXRpb24tcGF0dGVybnMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxtQkFBbUIsRUFBQTtFQUR2QjtJQUlRLGtCQUFrQixFQUFBO0VBSTFCO0VBQ0k7cUJDRmlCLEVER0M7RUFHdEI7RUFDSSxpQkFBaUI7RUFDakIsZ0JBQUE7RUFDQSxlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9leHRlbnNpb25zL3BhdHRlcm4tbGFuZ3VhZ2UvZW50ZXJwcmlzZS1pbnRlZ3JhdGlvbi1wYXR0ZXJucy9jb21wb25lbnQvZW50ZXJwcmlzZS1pbnRlZ3JhdGlvbi1wYXR0ZXJucy9lbnRlcnByaXNlLWludGVncmF0aW9uLXBhdHRlcm5zLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRvb2xiYXIge1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG5cbiAgICBidXR0b24ge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDE2cHg7XG4gICAgfVxufVxuXG4uYmFja19idXR0b24ge1xuICAgIC8qdmVydGljYWwtYWxpZ246IHRvcDtcbiAgICBtYXJnaW4tdG9wOiA1cHg7Ki9cbn1cblxuLmZpbHRlcl9ub2RlcyB7XG4gICAgbWFyZ2luLWxlZnQ6IDE2cHg7XG4gICAgLypmbG9hdDogcmlnaHQ7Ki9cbiAgICBmb250LXNpemU6IDE2cHQ7XG59IiwiLnRvb2xiYXIge1xuICBtYXJnaW4tYm90dG9tOiAyMHB4OyB9XG4gIC50b29sYmFyIGJ1dHRvbiB7XG4gICAgbWFyZ2luLXJpZ2h0OiAxNnB4OyB9XG5cbi5iYWNrX2J1dHRvbiB7XG4gIC8qdmVydGljYWwtYWxpZ246IHRvcDtcbiAgICBtYXJnaW4tdG9wOiA1cHg7Ki8gfVxuXG4uZmlsdGVyX25vZGVzIHtcbiAgbWFyZ2luLWxlZnQ6IDE2cHg7XG4gIC8qZmxvYXQ6IHJpZ2h0OyovXG4gIGZvbnQtc2l6ZTogMTZwdDsgfVxuIl19 */\"","import { Component, NgZone, OnInit, ViewChild } from '@angular/core';\nimport { Link } from '../../model/link';\nimport { Node } from '../../model/node';\nimport { HttpClient } from '@angular/common/http';\nimport * as d3 from 'd3';\nimport EnterpriseIntegrationPattern from '../../model/enterprise-integration-pattern';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EnterpriseIntegrationPatternsDataService } from '../../service/enterprise-integration-patterns-data.service';\nimport { PatternRenderingComponentInterface } from 'src/app/core/model/pattern-rendering-component.interface';\nimport { EnterpriseIntegrationPatternLoaderService } from '../../loader/enterprise-integration-pattern-loader.service';\nimport { PatternOntologyService } from 'src/app/core/service/pattern-ontology.service';\nimport { FilterFactoryService } from 'src/app/filter/service/filter-factory.service';\nimport { MatDialog } from '@angular/material';\nimport { FilterViewComponent } from 'src/app/filter/component/filter-view/filter-view.component';\n\n@Component({\n  selector: 'pp-enterprise-integration-patterns',\n  templateUrl: './enterprise-integration-patterns.component.html',\n  styleUrls: ['./enterprise-integration-patterns.component.scss']\n})\nexport class EnterpriseIntegrationPatternsComponent implements PatternRenderingComponentInterface, OnInit {\n\n  // id of the pattern that is currently selected. We use the Network-Graph for displaying individual patterns too. Via Infobox.\n  pId: string;\n\n  data: { nodes: Node[], links: Link[], id?: string };\n\n  patternMap: Map<string, EnterpriseIntegrationPattern>;\n  linkMap: Map<string, Link>;\n  groupMap: Map<string, any>;\n\n  nodes: Node[];\n  links: Link[];\n\n  @ViewChild('graph') graph;\n\n  constructor(private http: HttpClient,\n    private pos: PatternOntologyService,\n    private loader: EnterpriseIntegrationPatternsDataService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private zone: NgZone,\n    private patternLoader: EnterpriseIntegrationPatternLoaderService,\n    private filterFactory: FilterFactoryService,\n    public dialog: MatDialog) { }\n\n  ngOnInit() {\n    // load base file, patterns file, and relations file\n    const uris = [\n      { value: 'https://purl.org/patternpedia' },\n      { value: 'https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns' },\n      { value: 'https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns/enterpriseintegrationpatterns-Patterns' },\n      { value: 'https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns/enterpriseintegrationpatterns-Relations' }\n    ];\n    this.pos.loadUrisToStore(uris).then(() => {\n      // get data from store\n      this.loader.getAllData()\n        .then(values => {\n          this.patternMap = values[0];\n          this.linkMap = values[1];\n          this.groupMap = values[2];\n\n          // links\n          // links also contains edges to different pattern languages. we don't want to render them as actual links of the network graph\n          // => filter clp links\n          this.links = Array.from(this.linkMap.values()).filter(link => {\n            let source = \"\";\n            let target = \"\";\n\n            if (typeof link.source === 'string')\n              source = link.source;\n            else if (link.source instanceof Node)\n              source = link.source.id;\n\n            if (typeof link.target === 'string')\n              target = link.target;\n            else if (link.target instanceof Node)\n              target = link.target.id;\n\n            // keep link, if its source and destination is from enterpriseintegrationpatterns, and no other language\n            return source.includes('enterpriseintegrationpatterns') && target.includes('enterpriseintegrationpatterns');\n          });\n\n          // groups\n          let groups = {};\n          this.groupMap.forEach(value => {\n            groups[value.groupName] = value.patterns;\n          });\n\n          // for coloring of nodes\n          let groupIds = Array.from(Object.keys(groups));\n          let scale = d3.scaleOrdinal(d3.schemeCategory10);\n          let color = function (d: any) {\n            if (d)\n              return scale('' + groupIds.indexOf(d));\n            return scale('0');\n          }\n\n          // nodes\n          this.nodes = [];\n\n          // convert given IRI -> EnterpriseIntegrationPattern Map to Node list for rendering\n          this.patternMap.forEach((value) => {\n            let n = new Node(value.id);\n            n.name = value.name;\n            n.description = value.description.value;\n\n            // go through all groups and check if the current pattern is present in the list of patterns\n            // return the group (i.e. the group name) that contains the pattern. undefined if no group contains this pattern\n            n.group = Object.keys(groups).find(groupName => groups[groupName].includes(value.id));\n\n            n.color = color(n.group);\n\n            this.nodes.push(n);\n          });\n\n          // place data in field\n          this.data = {\n            nodes: this.nodes,\n            links: this.links,\n            id: this.pId\n          };\n        });\n    });\n  }\n\n  // called when a node from the network graph was selected\n  selectNode(nodeId: string) {\n    // TODO navigate to pattern via router\n    console.log(nodeId);\n    // should not be relative, as we might click multiple nodes!\n    this.zone.run(() => {\n      let route = this.pId ? ['..', nodeId] : [nodeId];\n      this.router.navigate(route, { relativeTo: this.activatedRoute });\n    });\n  }\n\n  // called when a node was unselected i.e. when clicked somewhere else\n  unselectNode() {\n    // TODO navigate back to language level\n  }\n\n  navigateBack(): void {\n    this.zone.run(() => {\n      this.router.navigate(['..'], { relativeTo: this.activatedRoute });\n    });\n  }\n\n  openFilterDialog() {\n    let dialogRef = this.dialog.open(FilterViewComponent, {\n      width: '600px',\n      data: 'https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        // there might be new filter values set -> filter data\n        this.filterFactory.createFilter('https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns')\n          .then(filter => this.graph.filterNodes(filter));\n      }\n    });\n  }\n}\n","module.exports = \"<div>\\n  <svg #svg [attr.viewBox]=\\\"'0 0 ' + options.width + ' ' + options.height\\\"\\n      (click)=\\\"deselectNode($event)\\\">\\n        <g [zoomableOf]=\\\"svg\\\">\\n            <g class=\\\"links\\\">\\n                <g [linkVisual]=\\\"link\\\" *ngFor=\\\"let link of links\\\"></g>\\n            </g>\\n            <g class=\\\"nodes\\\">\\n                <g [nodeVisual]=\\\"node\\\" *ngFor=\\\"let node of nodes\\\" \\n                    [draggableNode]=\\\"node\\\"\\n                    [draggableInGraph]=\\\"graph\\\"\\n                    (clickEvent)=\\\"nodeInformation(node.id)\\\"\\n                    (mouseEnterEvent)=\\\"previewNodeInformation(node.id)\\\"\\n                    (mouseLeaveEvent)=\\\"dePreviewNodeInformation(node.id)\\\">\\n                </g>\\n            </g>\\n\\n            <defs>\\n                <marker id=\\\"end\\\" viewBox=\\\"0 -5 10 10\\\" refX=\\\"15\\\" refY=\\\"-1.5\\\" markerWidth=\\\"6\\\" markerHeight=\\\"6\\\" orient=\\\"auto\\\">\\n                    <path d=\\\"M0,-5L10,0L0,5\\\"></path>\\n                </marker>\\n            </defs>\\n        </g>\\n  </svg>\\n</div>\\n\\n<div *ngIf=\\\"selectedLinkId; else nodeInfo\\\">\\n    <pp-link-infobox\\n        [linkId]=\\\"selectedLinkId\\\"\\n        [currentPatternId]=\\\"selectedNodeId\\\"\\n        (onPatternClicked)=\\\"nodeInformation($event)\\\">\\n    </pp-link-infobox>\\n</div>\\n\\n<ng-template #nodeInfo>\\n    <div *ngIf=\\\"selectedNodeId\\\">\\n    <pp-node-infobox \\n            [id]=\\\"selectedNodeId\\\"\\n            (clickEvent)=\\\"nodeInformation($event)\\\"\\n            (mouseEnterEvent)=\\\"previewNodeInformation($event)\\\"\\n            (mouseLeaveEvent)=\\\"dePreviewNodeInformation($event)\\\"\\n            (linkClickEvent)=\\\"showLinkInfo($event)\\\">\\n    </pp-node-infobox>\\n    </div>\\n</ng-template>\"","module.exports = \"pp-node-infobox {\\n  position: absolute;\\n  top: 90px; }\\n\\npp-link-infobox {\\n  position: absolute;\\n  top: 90px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9QYXR0ZXJuUGVkaWEvcGF0dGVybi1wZWRpYS9zcmMvYXBwL2V4dGVuc2lvbnMvcGF0dGVybi1sYW5ndWFnZS9lbnRlcnByaXNlLWludGVncmF0aW9uLXBhdHRlcm5zL2NvbXBvbmVudC9ncmFwaC9ncmFwaC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFrQjtFQUNsQixTQUFTLEVBQUE7O0FBR2I7RUFDSSxrQkFBa0I7RUFDbEIsU0FBUyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvZXh0ZW5zaW9ucy9wYXR0ZXJuLWxhbmd1YWdlL2VudGVycHJpc2UtaW50ZWdyYXRpb24tcGF0dGVybnMvY29tcG9uZW50L2dyYXBoL2dyYXBoLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsicHAtbm9kZS1pbmZvYm94IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA5MHB4O1xufVxuXG5wcC1saW5rLWluZm9ib3gge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDkwcHg7XG59Il19 */\"","import { Component, OnInit, Input, HostListener, ChangeDetectorRef, ChangeDetectionStrategy, AfterViewInit, EventEmitter, Output } from '@angular/core';\nimport { Node, Link, NetworkGraph } from '../../model';\nimport { D3Service } from '../../service/d3.service';\nimport Filter from 'src/app/filter/model/filter';\n\n@Component({\n  selector: 'pp-graph',\n  templateUrl: './graph.component.html',\n  styleUrls: ['./graph.component.scss']\n})\nexport class GraphComponent implements OnInit, AfterViewInit {\n  @Input('selectedNodeId') selectedNodeId?: string;\n  \n  @Input('nodes') nodes: Node[];\n  @Input('links') links: Link[];\n\n  @Output() nodeSelectEvent = new EventEmitter<string>();\n  @Output() nodeUnselectEvent = new EventEmitter<string>();\n\n  graph: NetworkGraph;\n\n  // the node that is currently selected or null, if there is no selection\n  selectedNode?: Node;\n  // selectedNodeInfo?: NodeInfo;\n\n  selectedLinkId: string;\n\n  private _options: { width: number, height: number } = { width: 800, height: 600 };\n\n  @HostListener('window:resize', ['$event'])\n  onresize(event: any) {\n    if(this.graph)\n      this.graph.initSimulation(this.options);\n  }\n\n  constructor(\n    private d3Service: D3Service,\n    private ref: ChangeDetectorRef\n  ) { }\n\n  ngOnInit() {\n    this.graph = this.d3Service.getNetworkGraph(this.nodes, this.links, this.options);\n    this.graph.ticker.subscribe((d: any) => {\n      this.ref.markForCheck();\n    });\n\n    if (this.selectedNodeId) {\n      this.nodeInformation(this.selectedNodeId);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.graph.initSimulation(this.options);\n  }\n\n  get options() {\n    return this._options = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n  }\n\n  previewNodeInformation(event: string) {\n    for(let l of this.links) {\n      l.preview = true;\n    }\n    for(let n of this.nodes) {\n      n.preview = true;\n    }\n\n    let currNode = this.nodes.find(n => n.id === event);\n\n    currNode.preview = false;\n\n    // iterate through all links and get neighbours \n    for(let link of this.links) {\n      // check source\n      if(link.source instanceof Node) {\n        if(link.source.name === currNode.name) {\n          link.preview = false;\n          if(link.target instanceof Node) {\n            link.target.preview = false;\n          }\n        }\n      } else if(typeof link.source === 'string') {\n        if(link.source === currNode.name) {\n          link.preview = false;\n          let n = this.nodes.find(n => n.name === link.target);\n          n.preview = false;\n        }\n      }\n\n      // check target\n      if(link.target instanceof Node) {\n        if(link.target.name === currNode.name) {\n          link.preview = false;\n          if(link.source instanceof Node) {\n            link.source.preview = false;\n          }\n        }\n      } else if(typeof link.target === 'string') {\n        if(link.target === currNode.name) {\n          link.preview = false;\n          let n = this.nodes.find(n => n.name === link.source);\n          n.preview = false;\n        }\n      }\n    }\n  }\n\n  dePreviewNodeInformation(event: string) {\n    for(let l of this.links) {\n      l.preview = false;\n    }\n    for(let n of this.nodes) {\n      n.preview = false;\n    }\n  }\n\n  deselectNode() {\n    // call listener\n    this.nodeUnselectEvent.emit();\n\n    // remove selection of nodes and links\n    for(let n of this.nodes) {\n      n.selected = false;\n    }\n    for(let l of this.links) {\n      l.selected = false;\n    }\n\n    this.selectedNode = null;\n    // this.selectedNodeInfo = null;\n    this.selectedNodeId = null;\n  }\n\n  // $event is the clicked node id!\n  nodeInformation($event: string) {\n    this.selectedLinkId = null;\n    \n    // call listener\n    this.nodeSelectEvent.emit($event);\n\n    let node = this.nodes.find(n => n.id === $event);\n\n    // remove selection of nodes and links\n    for(let n of this.nodes) {\n      n.selected = false;\n    }\n    for(let l of this.links) {\n      l.selected = false;\n    }\n\n    // set clicked node as current node to display infobox (separate component) about node\n    // in HTML we can do *ngIf to show infobox component \n    this.selectedNode = node;\n    this.selectedNode.selected = true;\n\n    this.selectedNodeId = $event;\n\n    // this.selectedNodeInfo = new NodeInfo();\n    // this.selectedNodeInfo.currNode = this.selectedNode;\n\n\n    // // iterate through all links and get neighbours \n    for(let link of this.links) {\n      // check source\n      if(link.source instanceof Node) {\n        if(link.source.name === node.name) {\n          link.selected = true;\n          if(link.target instanceof Node) {\n            link.target.selected = true;\n            // this.selectedNodeInfo.outgoing.push(link.target)\n          }\n        }\n      } else if(typeof link.source === 'string') {\n        if(link.source === node.name) {\n          link.selected = true;\n          let n = this.nodes.find(n => n.name === link.target);\n          n.selected = true;\n          // this.selectedNodeInfo.outgoing.push(n);\n        }\n      }\n\n      // check target\n      if(link.target instanceof Node) {\n        if(link.target.name === node.name) {\n          link.selected = true;\n          if(link.source instanceof Node) {\n            link.source.selected = true;\n            // this.selectedNodeInfo.incoming.push(link.source);\n          }\n        }\n      } else if(typeof link.target === 'string') {\n        if(link.target === node.name) {\n          link.selected = true;\n          let n = this.nodes.find(n => n.name === link.source);\n          n.selected = true;\n          // this.selectedNodeInfo.incoming.push(n);\n        }\n      }\n    }\n  }\n\n  filterNodes(filter: Filter) {\n    this.showAllNodes();\n\n    // get patterns to hide\n    const selectedNodes = filter.filterPatterns(this.nodes);\n    // if a node is in selectedNodes we DON'T want to filter it out\n    let nodesToBeFiltered = this.nodes.filter(n => !selectedNodes.includes(n));\n\n    // get all links that contain a pattern that should be filtered \n    let linksToBeFiltered = this.links.filter(e => {\n      let id = '';\n      if (typeof e.source === 'string')\n        id = e.source;\n      else if (e.source instanceof Node) \n        id = e.source.id;\n\n      let s = nodesToBeFiltered.find(n => n.id === id);\n      if (s) return true;\n\n      if (typeof e.target === 'string')\n        id = e.target;\n      else if (e.target instanceof Node)\n        id = e.target.id;\n      \n      let t = nodesToBeFiltered.find(n => n.id === id);\n      if (t) return true;\n\n      return false;\n    });\n\n    // aquired elements have to be hidden\n    nodesToBeFiltered.forEach(n => n.hide = true);\n    linksToBeFiltered.forEach(l => l.hide = true);\n  }\n\n  showAllNodes() {\n    this.nodes.forEach(n => n.hide = false);\n    this.links.forEach(l => l.hide = false);\n  }\n\n  showLinkInfo(linkId: string) {\n    this.selectedLinkId = linkId;\n  }\n}\n","module.exports = \"<div class=\\\"info\\\" *ngIf=\\\"linkInfo; else loading\\\">\\n  <div class=\\\"headline\\\">\\n    \\n    <!-- curr pattern name -->\\n    <h1 (click)=\\\"onClick($event, linkInfo.currPattern.id)\\\">\\n      {{linkInfo.currPattern.name}}\\n    </h1>\\n\\n    <!-- link arrow -->\\n    <i *ngIf=\\\"linkInfo.direction === 'outgoing'; else incoming\\\"\\n      class=\\\"fa fa-long-arrow-right\\\"></i>\\n    <ng-template #incoming>\\n      <i class=\\\"fa fa-long-arrow-left\\\"></i>\\n    </ng-template>\\n\\n    <!-- linked pattern name -->\\n    <span (click)=\\\"onClick($event, linkInfo.linkedPattern.id)\\\">\\n      {{linkInfo.linkedPattern.name}}\\n    </span>\\n\\n  </div>\\n\\n  <div class=\\\"description\\\">\\n    <p *ngFor=\\\"let d of linkInfo.descriptions\\\">{{d}}</p>\\n  </div>\\n</div>\\n<ng-template #loading>\\n  <div class=\\\"info\\\">\\n    Loading Link Info...\\n  </div>\\n</ng-template>\"","module.exports = \".info {\\n  width: 350px;\\n  padding: 10px;\\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\\n  border-width: 2px;\\n  border-style: solid;\\n  border-color: grey;\\n  background: rgba(255, 255, 255, 0.7); }\\n\\n.headline {\\n  padding-bottom: 10px; }\\n\\n.headline h1 {\\n    padding: 0;\\n    margin: 0;\\n    margin-bottom: 4px; }\\n\\n.headline span {\\n    font-size: 14pt; }\\n\\n.headline i {\\n    font-size: 14pt;\\n    padding: 4px;\\n    margin-right: 4px; }\\n\\n.description {\\n  word-break: normal;\\n  border-top-width: 2px;\\n  border-top-style: solid;\\n  border-top-color: lightgrey; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9QYXR0ZXJuUGVkaWEvcGF0dGVybi1wZWRpYS9zcmMvYXBwL2V4dGVuc2lvbnMvcGF0dGVybi1sYW5ndWFnZS9lbnRlcnByaXNlLWludGVncmF0aW9uLXBhdHRlcm5zL2NvbXBvbmVudC9saW5rLWluZm9ib3gvbGluay1pbmZvYm94LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBWTtFQUNaLGFBQWE7RUFDYiw2RUFBNkU7RUFDN0UsaUJBQWlCO0VBQ2pCLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIsb0NBQW9DLEVBQUE7O0FBR3hDO0VBQ0ksb0JBQW9CLEVBQUE7O0FBRHhCO0lBSVEsVUFBVTtJQUNWLFNBQVM7SUFDVCxrQkFBa0IsRUFBQTs7QUFOMUI7SUFVUSxlQUFlLEVBQUE7O0FBVnZCO0lBY1EsZUFBZTtJQUNmLFlBQVk7SUFDWixpQkFBaUIsRUFBQTs7QUFJekI7RUFDSSxrQkFBa0I7RUFFbEIscUJBQXFCO0VBQ3JCLHVCQUF1QjtFQUN2QiwyQkFBMkIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2V4dGVuc2lvbnMvcGF0dGVybi1sYW5ndWFnZS9lbnRlcnByaXNlLWludGVncmF0aW9uLXBhdHRlcm5zL2NvbXBvbmVudC9saW5rLWluZm9ib3gvbGluay1pbmZvYm94LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmluZm8ge1xuICAgIHdpZHRoOiAzNTBweDtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIGZvbnQtZmFtaWx5OiAnR2lsbCBTYW5zJywgJ0dpbGwgU2FucyBNVCcsIENhbGlicmksICdUcmVidWNoZXQgTVMnLCBzYW5zLXNlcmlmO1xuICAgIGJvcmRlci13aWR0aDogMnB4O1xuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgYm9yZGVyLWNvbG9yOiBncmV5O1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC43KTtcbn1cblxuLmhlYWRsaW5lIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcblxuICAgIGgxIHtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiA0cHg7XG4gICAgfVxuXG4gICAgc3BhbiB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTRwdDtcbiAgICB9XG4gICAgXG4gICAgaSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTRwdDtcbiAgICAgICAgcGFkZGluZzogNHB4O1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDRweDtcbiAgICB9XG59XG5cbi5kZXNjcmlwdGlvbiB7XG4gICAgd29yZC1icmVhazogbm9ybWFsO1xuXG4gICAgYm9yZGVyLXRvcC13aWR0aDogMnB4O1xuICAgIGJvcmRlci10b3Atc3R5bGU6IHNvbGlkO1xuICAgIGJvcmRlci10b3AtY29sb3I6IGxpZ2h0Z3JleTtcbn0iXX0= */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { EnterpriseIntegrationPatternsLinkInfoLoaderService } from '../../loader/enterprise-integration-patterns-link-info-loader.service';\nimport { IriConverter } from 'src/app/core/util/iri-converter';\nimport LinkInfo from '../../model/link-info';\n\n@Component({\n  selector: 'pp-link-infobox',\n  templateUrl: './link-infobox.component.html',\n  styleUrls: ['./link-infobox.component.scss']\n})\nexport class LinkInfoboxComponent implements OnInit {\n\n  // the id of the link\n  @Input() linkId: string;\n  // the id of the currently inspected pattern. Can be null\n  @Input() currentPatternId?: string;\n\n  linkInfo: LinkInfo;\n\n  // gets called if a pattern within the infobox has been clicked, parameter is the corresponding id of the pattern\n  @Output() onPatternClicked = new EventEmitter<string>();\n\n  constructor(private loader: EnterpriseIntegrationPatternsLinkInfoLoaderService) { }\n\n  ngOnInit() {\n    this.loadContent();\n  }\n\n  // loads the link informations from the triplestore with the id\n  loadContent() {\n    const uri = IriConverter.convertIdToIri(this.linkId);\n    this.loader.loadContentFromStore(uri)\n      .then(linkMap => {\n        const data = linkMap.get(uri);\n        \n        if (this.currentPatternId) {\n          if (data.sourcePattern.id === this.currentPatternId) {\n            this.linkInfo = {\n              currPattern: {\n                id: data.sourcePattern.id,\n                name: data.sourcePattern.name\n              },\n              linkedPattern: {\n                id: data.targetPattern.id,\n                name: data.targetPattern.name\n              },\n              descriptions: data.descriptions,\n              direction: 'outgoing'\n            };\n          } else if (data.targetPattern.id === this.currentPatternId) {\n            this.linkInfo = {\n              currPattern: {\n                id: data.targetPattern.id,\n                name: data.targetPattern.name\n              },\n              linkedPattern: {\n                id: data.sourcePattern.id,\n                name: data.sourcePattern.name\n              },\n              descriptions: data.descriptions,\n              direction: 'incoming'\n            };\n          }\n        } else {\n          // default case is, source pattern is the current pattern\n          this.linkInfo = {\n            currPattern: {\n              id: data.sourcePattern.id,\n              name: data.sourcePattern.name\n            },\n            linkedPattern: {\n              id: data.targetPattern.id,\n              name: data.targetPattern.name\n            },\n            descriptions: data.descriptions,\n            direction: 'outgoing'\n          };\n        }\n      });\n  }\n\n  onClick(event: any, id: string) {\n    event.stopPropagation();\n\n    this.onPatternClicked.emit(id);\n  }\n\n}\n","module.exports = \"<svg:line\\n    [ngClass] = \\\"{'selected': link.selected, 'not-selected': !(link.selected), 'preview': link.preview, 'hide': link.hide}\\\"\\n    [attr.x1] = \\\"link.source.x\\\"\\n    [attr.y1] = \\\"link.source.y\\\"\\n    [attr.x2] = \\\"link.target.x\\\"\\n    [attr.y2] = \\\"link.target.y\\\">\\n</svg:line>\"","module.exports = \"line {\\n  stroke-width: 1px;\\n  marker-end: url(#end); }\\n\\n.selected {\\n  stroke: red; }\\n\\n.not-selected {\\n  stroke: #7f7f7f; }\\n\\n.preview {\\n  opacity: 0.1; }\\n\\n.hide {\\n  visibility: hidden; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9QYXR0ZXJuUGVkaWEvcGF0dGVybi1wZWRpYS9zcmMvYXBwL2V4dGVuc2lvbnMvcGF0dGVybi1sYW5ndWFnZS9lbnRlcnByaXNlLWludGVncmF0aW9uLXBhdHRlcm5zL2NvbXBvbmVudC9saW5rLXZpc3VhbC9saW5rLXZpc3VhbC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGlCQUFpQjtFQUNqQixxQkFBcUIsRUFBQTs7QUFHekI7RUFDSSxXQUFXLEVBQUE7O0FBR2Y7RUFDSSxlQUFlLEVBQUE7O0FBR25CO0VBQ0ksWUFBWSxFQUFBOztBQUdoQjtFQUNJLGtCQUFrQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvZXh0ZW5zaW9ucy9wYXR0ZXJuLWxhbmd1YWdlL2VudGVycHJpc2UtaW50ZWdyYXRpb24tcGF0dGVybnMvY29tcG9uZW50L2xpbmstdmlzdWFsL2xpbmstdmlzdWFsLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsibGluZSB7XG4gICAgc3Ryb2tlLXdpZHRoOiAxcHg7XG4gICAgbWFya2VyLWVuZDogdXJsKCNlbmQpO1xufVxuXG4uc2VsZWN0ZWQge1xuICAgIHN0cm9rZTogcmVkO1xufVxuXG4ubm90LXNlbGVjdGVkIHtcbiAgICBzdHJva2U6ICM3ZjdmN2Y7XG59XG5cbi5wcmV2aWV3IHtcbiAgICBvcGFjaXR5OiAwLjE7XG59XG5cbi5oaWRlIHtcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG59Il19 */\"","import { Component, Input } from '@angular/core';\nimport { Link } from '../../model';\n\n@Component({\n  selector: '[linkVisual]',\n  templateUrl: \"./link-visual.component.html\",\n  styleUrls: ['./link-visual.component.scss']\n})\nexport class LinkVisualComponent {\n  @Input('linkVisual') link: Link;\n}\n","module.exports = \"<div class=\\\"info\\\" *ngIf=\\\"info; else loading\\\">\\n  <div class=\\\"headline\\\">\\n    <h1>{{info.name}}</h1>\\n    <p>{{info.group}}</p>\\n  </div>\\n  <div class=\\\"description\\\">\\n    <p *ngFor=\\\"let desc of info.description\\\">{{desc}}</p>\\n  </div>\\n  <div class=\\\"referenced\\\"\\n    *ngFor=\\\"let group of info.related\\\">\\n\\n    <h1>{{group.id}}</h1>\\n    \\n    <!-- Outgoing Related Nodes -->\\n    <div class=\\\"related\\\">\\n      <div class=\\\"item\\\"\\n        *ngFor=\\\"let o of group.outgoing\\\">\\n        <!-- Arrow (->) -->\\n        <i class=\\\"fa fa-long-arrow-right\\\"></i>\\n        <!-- Caption -->\\n        <span \\n          (click)=\\\"onClick($event, o.nodeId)\\\"\\n          (mouseenter)=\\\"onMouseEnter($event, o.nodeId)\\\"\\n          (mouseleave)=\\\"onMouseLeave($event, o.nodeId)\\\">{{o.name}}\\n        </span>\\n        \\n        <i class=\\\"info-icon fa fa-info-circle\\\" \\n          *ngIf=\\\"o.hasDescription\\\"\\n          (click)=\\\"onInfoClick($event, o);\\\"></i>\\n      </div>\\n    </div>\\n\\n    <!-- Incoming Related Nodes -->\\n    <div class=\\\"related\\\">\\n      <div class=\\\"item\\\"\\n        *ngFor=\\\"let i of group.incoming\\\">\\n        <!-- Arrow (<-) -->\\n        <i class=\\\"fa fa-long-arrow-left\\\"></i>\\n        <!-- Caption -->\\n        <span\\n          (click)=\\\"onClick($event, i.nodeId)\\\"\\n          (mouseenter)=\\\"onMouseEnter($event, i.nodeId)\\\"\\n          (mouseleave)=\\\"onMouseLeave($event, i.nodeId)\\\">{{i.name}}\\n        </span>\\n\\n        <i class=\\\"info-icon fa fa-info-circle\\\" \\n          *ngIf=\\\"i.hasDescription\\\"\\n          (click)=\\\"onInfoClick($event, i)\\\"></i>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<ng-template #loading>\\n  <div class=\\\"info\\\">\\n    Loading Pattern Info...\\n  </div>\\n</ng-template>\"","module.exports = \".info {\\n  width: 350px;\\n  padding: 10px;\\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\\n  border-width: 2px;\\n  border-style: solid;\\n  border-color: grey;\\n  background: rgba(255, 255, 255, 0.7); }\\n\\n.headline {\\n  padding-bottom: 10px;\\n  border-bottom-width: 2px;\\n  border-bottom-style: solid;\\n  border-bottom-color: lightgrey;\\n  word-break: keep-all; }\\n\\n.headline h1 {\\n    padding: 0;\\n    margin: 0; }\\n\\n.headline p {\\n    padding: 0;\\n    margin: 0;\\n    font-style: italic; }\\n\\n.description {\\n  word-break: normal; }\\n\\n.referenced {\\n  border-top-width: 2px;\\n  border-top-style: solid;\\n  border-top-color: lightgrey; }\\n\\n.referenced ul {\\n    padding-left: 20px;\\n    list-style: none; }\\n\\n.referenced li {\\n    margin-bottom: 10px; }\\n\\n.referenced h1 {\\n    padding: 0;\\n    margin: 0;\\n    font-variant: small-caps;\\n    font-size: 14pt; }\\n\\n.related {\\n  margin-bottom: 10px;\\n  padding: 4px; }\\n\\n.related i {\\n    margin-right: 8px; }\\n\\n.related .item {\\n    margin-bottom: 4px; }\\n\\n.related .info-icon {\\n    float: right; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9QYXR0ZXJuUGVkaWEvcGF0dGVybi1wZWRpYS9zcmMvYXBwL2V4dGVuc2lvbnMvcGF0dGVybi1sYW5ndWFnZS9lbnRlcnByaXNlLWludGVncmF0aW9uLXBhdHRlcm5zL2NvbXBvbmVudC9ub2RlLWluZm9ib3gvbm9kZS1pbmZvYm94LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBWTtFQUNaLGFBQWE7RUFDYiw2RUFBNkU7RUFDN0UsaUJBQWlCO0VBQ2pCLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIsb0NBQW9DLEVBQUE7O0FBR3hDO0VBQ0ksb0JBQW9CO0VBQ3BCLHdCQUF3QjtFQUN4QiwwQkFBMEI7RUFDMUIsOEJBQThCO0VBQzlCLG9CQUFvQixFQUFBOztBQUx4QjtJQVFRLFVBQVU7SUFDVixTQUFTLEVBQUE7O0FBVGpCO0lBYVEsVUFBVTtJQUNWLFNBQVM7SUFDVCxrQkFBa0IsRUFBQTs7QUFJMUI7RUFDSSxrQkFBa0IsRUFBQTs7QUFHdEI7RUFDSSxxQkFBcUI7RUFDckIsdUJBQXVCO0VBQ3ZCLDJCQUEyQixFQUFBOztBQUgvQjtJQU1RLGtCQUFpQjtJQUNqQixnQkFBZSxFQUFBOztBQVB2QjtJQVdRLG1CQUFrQixFQUFBOztBQVgxQjtJQWVRLFVBQVU7SUFDVixTQUFTO0lBQ1Qsd0JBQXdCO0lBQ3hCLGVBQWUsRUFBQTs7QUFJdkI7RUFDSSxtQkFBbUI7RUFDbkIsWUFBWSxFQUFBOztBQUZoQjtJQUtRLGlCQUFpQixFQUFBOztBQUx6QjtJQVNRLGtCQUFrQixFQUFBOztBQVQxQjtJQWFRLFlBQVksRUFBQSIsImZpbGUiOiJzcmMvYXBwL2V4dGVuc2lvbnMvcGF0dGVybi1sYW5ndWFnZS9lbnRlcnByaXNlLWludGVncmF0aW9uLXBhdHRlcm5zL2NvbXBvbmVudC9ub2RlLWluZm9ib3gvbm9kZS1pbmZvYm94LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmluZm8ge1xuICAgIHdpZHRoOiAzNTBweDtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIGZvbnQtZmFtaWx5OiAnR2lsbCBTYW5zJywgJ0dpbGwgU2FucyBNVCcsIENhbGlicmksICdUcmVidWNoZXQgTVMnLCBzYW5zLXNlcmlmO1xuICAgIGJvcmRlci13aWR0aDogMnB4O1xuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgYm9yZGVyLWNvbG9yOiBncmV5O1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC43KTtcbn1cblxuLmhlYWRsaW5lIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcbiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAycHg7XG4gICAgYm9yZGVyLWJvdHRvbS1zdHlsZTogc29saWQ7XG4gICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogbGlnaHRncmV5O1xuICAgIHdvcmQtYnJlYWs6IGtlZXAtYWxsO1xuXG4gICAgaDEge1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgfVxuXG4gICAgcCB7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgZm9udC1zdHlsZTogaXRhbGljO1xuICAgIH1cbn1cblxuLmRlc2NyaXB0aW9uIHtcbiAgICB3b3JkLWJyZWFrOiBub3JtYWw7XG59XG5cbi5yZWZlcmVuY2VkIHtcbiAgICBib3JkZXItdG9wLXdpZHRoOiAycHg7XG4gICAgYm9yZGVyLXRvcC1zdHlsZTogc29saWQ7XG4gICAgYm9yZGVyLXRvcC1jb2xvcjogbGlnaHRncmV5O1xuXG4gICAgdWwgeyBcbiAgICAgICAgcGFkZGluZy1sZWZ0OjIwcHg7IFxuICAgICAgICBsaXN0LXN0eWxlOm5vbmU7IFxuICAgIH1cbiAgICBcbiAgICBsaSB7IFxuICAgICAgICBtYXJnaW4tYm90dG9tOjEwcHg7IFxuICAgIH1cblxuICAgIGgxIHtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBmb250LXZhcmlhbnQ6IHNtYWxsLWNhcHM7XG4gICAgICAgIGZvbnQtc2l6ZTogMTRwdDtcbiAgICB9XG59XG5cbi5yZWxhdGVkIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgIHBhZGRpbmc6IDRweDtcblxuICAgIGkge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDhweDtcbiAgICB9XG5cbiAgICAuaXRlbSB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDRweDtcbiAgICB9XG5cbiAgICAuaW5mby1pY29uIHtcbiAgICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgIH1cbn0iXX0= */\"","import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges, OnChanges } from '@angular/core';\nimport { EnterpriseIntegrationPatternLoaderService } from '../../loader/enterprise-integration-pattern-loader.service';\nimport { EnterpriseIntegrationPatternIncomingLinkLoaderService } from '../../loader/enterprise-integration-pattern-incoming-link-loader.service';\nimport { EnterpriseIntegrationPatternOutgoingLinkLoaderService } from '../../loader/enterprise-integration-pattern-outgoing-link-loader.service';\nimport { Info, GroupInfo, LinkInfo } from '../../model/info';\nimport { IriConverter } from 'src/app/core/util/iri-converter';\n\n@Component({\n  selector: 'pp-node-infobox',\n  templateUrl: './node-infobox.component.html',\n  styleUrls: ['./node-infobox.component.scss']\n})\nexport class NodeInfoboxComponent implements OnInit, OnChanges {\n\n  // the id of the clicked pattern to load the data from the store via loader\n  @Input() id: string;\n\n  // @Input() info: NodeInfo;\n  info: Info;\n\n  @Output() clickEvent = new EventEmitter<Node>();\n  @Output() mouseEnterEvent = new EventEmitter<Node>();\n  @Output() mouseLeaveEvent = new EventEmitter<Node>();\n\n  @Output() linkClickEvent = new EventEmitter<string>();\n\n  constructor(private patternLoader: EnterpriseIntegrationPatternLoaderService,\n    private outgoingLoader: EnterpriseIntegrationPatternOutgoingLinkLoaderService,\n    private incomingLoader: EnterpriseIntegrationPatternIncomingLinkLoaderService) { }\n\n  ngOnInit() {\n    this.loadContent();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['id']) {\n      let chng = changes['id'];\n      let cur  = JSON.stringify(chng.currentValue);\n      let prev = JSON.stringify(chng.previousValue);\n\n      // new id, load new data\n      if (cur !== prev) {\n        this.loadContent();\n      }\n    }\n  }\n\n  private loadContent() {\n    let uri = IriConverter.convertIdToIri(this.id);\n    Promise.all([this.patternLoader.loadContentFromStore(uri),\n      this.outgoingLoader.loadContentFromStore(uri),\n      this.incomingLoader.loadContentFromStore(uri)]\n    ).then(values => {\n      let pattern = values[0].get(uri);\n      let outgoingMap = values[1];\n      let incomingMap = values[2];\n      \n      let outgoing = [];\n      outgoingMap.forEach(value => outgoing.push(value));\n\n      let incoming = [];\n      incomingMap.forEach(value => incoming.push(value));\n\n      // group outgoing and incoming links into pattern language groups\n      let groups: GroupInfo[] = [];\n      for (let o of outgoing) {\n        let groupName = this.filterGroupId(o.nodeId);\n\n        if (!groups.find(g => g.id === groupName)) {\n          let g: GroupInfo = {\n            id: groupName,\n            outgoing: [],\n            incoming: []\n          };\n          groups.push(g);\n        } \n        \n        let g = groups.find(g => g.id === groupName);\n        g.outgoing.push(o);\n      }\n      for (let i of incoming) {\n        let groupName = this.filterGroupId(i.nodeId);\n\n        if (!groups.find(g => g.id === groupName)) {\n          let g: GroupInfo = {\n            id: groupName,\n            outgoing: [],\n            incoming: []\n          };\n          groups.push(g);\n        }\n\n        let g = groups.find(g => g.id === groupName);\n        g.incoming.push(i);\n      }\n\n      this.info = {\n        name: pattern.name,\n        group: pattern.groupName,\n        description: pattern.description,\n        related: groups\n      };\n    });\n  }\n\n  private filterGroupId(id: string) {\n    let uri = IriConverter.convertIdToIri(id);\n    let noPrefix = uri.includes('patternlanguages') \n      ? uri.replace('https://purl.org/patternpedia/patternlanguages/', '') \n      : uri.replace('https://purl.org/patternpedia/', '');\n    let slash = noPrefix.indexOf('/');\n    \n    return noPrefix.substr(0, slash);\n  }\n\n  onClick(event: any, node: Node) {\n    event.stopPropagation();\n\n    this.clickEvent.emit(node);\n  }\n\n  onMouseEnter(event: any, node: Node) {\n    event.stopPropagation();\n\n    this.mouseEnterEvent.emit(node);\n  }\n\n  onMouseLeave(event: any, node: Node) {\n    event.stopPropagation();\n    \n    this.mouseLeaveEvent.emit(node);\n  }\n\n  onInfoClick(event: any, link: LinkInfo) {\n    event.stopPropagation();\n\n    this.linkClickEvent.emit(link.linkId);\n  }\n}\n","module.exports = \"<svg:g class=\\\"node-element\\\" \\n  [attr.transform]=\\\"'translate(' + node.x + ',' + node.y + ')'\\\" \\n  [ngClass]=\\\"{'selected': node.selected, 'preview': node.preview, 'hide': node.hide}\\\"\\n  (click)=\\\"onClick($event)\\\"\\n  (mouseenter)=\\\"onMouseEnter($event)\\\"\\n  (mouseleave)=\\\"onMouseLeave($event)\\\">\\n  <svg:circle\\n      r=\\\"5\\\"\\n      [attr.fill]=\\\"node.color\\\">\\n  </svg:circle>\\n  <svg:text\\n      class=\\\"node-text\\\"\\n      dx=\\\"12\\\"\\n      dy=\\\".35em\\\">\\n    {{node.name}}\\n  </svg:text>\\n</svg:g>\"","module.exports = \".selected circle {\\n  stroke: red;\\n  stroke-width: 2px; }\\n\\n.selected text {\\n  fill: red;\\n  font-weight: bold; }\\n\\n.preview {\\n  opacity: 0.1; }\\n\\n.hide {\\n  visibility: hidden; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9QYXR0ZXJuUGVkaWEvcGF0dGVybi1wZWRpYS9zcmMvYXBwL2V4dGVuc2lvbnMvcGF0dGVybi1sYW5ndWFnZS9lbnRlcnByaXNlLWludGVncmF0aW9uLXBhdHRlcm5zL2NvbXBvbmVudC9ub2RlLXZpc3VhbC9ub2RlLXZpc3VhbC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVRLFdBQVc7RUFDWCxpQkFBaUIsRUFBQTs7QUFIekI7RUFPUSxTQUFTO0VBQ1QsaUJBQWlCLEVBQUE7O0FBSXpCO0VBQ0ksWUFBWSxFQUFBOztBQUdoQjtFQUNJLGtCQUFrQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvZXh0ZW5zaW9ucy9wYXR0ZXJuLWxhbmd1YWdlL2VudGVycHJpc2UtaW50ZWdyYXRpb24tcGF0dGVybnMvY29tcG9uZW50L25vZGUtdmlzdWFsL25vZGUtdmlzdWFsLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNlbGVjdGVkIHtcbiAgICBjaXJjbGUge1xuICAgICAgICBzdHJva2U6IHJlZDtcbiAgICAgICAgc3Ryb2tlLXdpZHRoOiAycHg7XG4gICAgfVxuXG4gICAgdGV4dCB7XG4gICAgICAgIGZpbGw6IHJlZDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgfVxufVxuXG4ucHJldmlldyB7XG4gICAgb3BhY2l0eTogMC4xO1xufVxuXG4uaGlkZSB7XG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xufSJdfQ== */\"","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Node } from '../../model';\n\n@Component({\n  selector: '[nodeVisual]',\n  templateUrl: './node-visual.component.html',\n  styleUrls: ['./node-visual.component.scss']\n})\nexport class NodeVisualComponent {\n  @Input('nodeVisual') node: Node;\n\n  @Output() clickEvent = new EventEmitter<Node>();\n  @Output() mouseEnterEvent = new EventEmitter<Node>();\n  @Output() mouseLeaveEvent = new EventEmitter<Node>();\n\n  onClick(event: any) {\n    event.stopPropagation();\n\n    this.clickEvent.emit(this.node);\n  }\n\n  onMouseEnter(event: any) {\n    this.mouseEnterEvent.emit(this.node);\n  }\n\n  onMouseLeave(event: any) {\n    this.mouseLeaveEvent.emit(this.node);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentRegistryService } from 'src/app/core/service/component-registry.service';\nimport { IriConverter } from 'src/app/core/util/iri-converter';\nimport { EnterpriseIntegrationPatternsComponent } from './component/enterprise-integration-patterns/enterprise-integration-patterns.component';\nimport { GraphComponent } from './component/graph/graph.component';\nimport { LinkVisualComponent } from './component/link-visual/link-visual.component';\nimport { NodeVisualComponent } from './component/node-visual/node-visual.component';\nimport { NodeInfoboxComponent } from './component/node-infobox/node-infobox.component';\nimport { EnterpriseIntegrationPatternComponent } from './component/enterprise-integration-pattern/enterprise-integration-pattern.component';\nimport { EnterpriseIntegrationPatternsLoaderService } from './loader/enterprise-integration-patterns-loader.service';\nimport { MatButtonModule, MatIcon, MatIconModule, MatFormFieldModule, MatInputModule, MatCardModule, MatDividerModule, MatCheckboxModule } from '@angular/material';\nimport { FormsModule } from '@angular/forms';\nimport { LinkInfoboxComponent } from './component/link-infobox/link-infobox.component';\nimport { FilterViewComponent } from 'src/app/filter/component/filter-view/filter-view.component';\nimport { DraggableDirective } from './component/directives/draggable.directive';\nimport { ZoomableDirective } from './component/directives/zoomable.directive';\n\n@NgModule({\n  declarations: [\n    EnterpriseIntegrationPatternsComponent, \n    GraphComponent, \n    LinkVisualComponent, \n    NodeVisualComponent, \n    NodeInfoboxComponent, \n    EnterpriseIntegrationPatternComponent, \n    LinkInfoboxComponent,\n    FilterViewComponent,\n    DraggableDirective,\n    ZoomableDirective\n  ],\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    FormsModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCardModule,\n    MatDividerModule,\n    MatFormFieldModule,\n    MatCheckboxModule\n  ],\n  providers: [\n    EnterpriseIntegrationPatternsLoaderService\n  ],\n  entryComponents: [\n    EnterpriseIntegrationPatternsComponent,\n    EnterpriseIntegrationPatternComponent,\n    FilterViewComponent\n  ]\n})\nexport class EnterpriseIntegrationPatternsModule {\n  constructor(private cr: ComponentRegistryService) {\n    // register module as rendering for Enterprise Integration Patterns in registry\n    this.cr.registerComponent(IriConverter.convertIriToId('https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns#EnterpriseIntegrationPatterns'), {\n      label: \"Network Graph\",\n      priority: 10, // this is the main renderer for this language\n      plcomponent: EnterpriseIntegrationPatternsComponent, // the rendering for the pattern LANGUAGE\n      pcomponent: EnterpriseIntegrationPatternsComponent // TODO is this actually used?\n    });\n\n    // adding a secondary renderer (dummy)\n    // this.cr.registerComponent(IriConverter.convertIriToId('https://purl.org/patternpedia/enterpriseintegrationpatterns#EnterpriseIntegrationPatterns'), \n    //   this.cr.getPLRenderingComponents(\"default\"));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PatternOntologyService } from 'src/app/core/service/pattern-ontology.service';\nimport Loader from 'src/app/core/model/loader';\nimport { IriConverter } from 'src/app/core/util/iri-converter';\nimport { LinkInfo } from '../model/info';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EnterpriseIntegrationPatternIncomingLinkLoaderService extends Loader<LinkInfo> {\n\n  constructor(private pos: PatternOntologyService) { \n    super('https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns#EnterpriseIntegrationPatterns', pos);\n  }\n\n  loadContentFromStore(uri?: string): Promise<Map<string, any>> {\n    return this.selectContentFromStore(uri)\n            .then(\n                triples => this.mapTriples(triples, uri)\n            );\n  }\n\n  async selectContentFromStore(uri?: string): Promise<any> {\n    // we need a specific pattern of form 'pattern#Pattern'\n    if (!uri) return Promise.resolve();\n\n    // we need the uri of the referenced pattern in order to retrieve the pattern name\n    const uriQry = `SELECT ?sourceUri\n      WHERE {\n        ?targetLink a <https://purl.org/patternpedia#DirectedPatternRelationDescriptor> ;\n              <https://purl.org/patternpedia#hasTarget> <${uri}> ;\n              <https://purl.org/patternpedia#hasSource> ?sourceUri .\n      }`;\n    const patterns = await this.executor.exec(uriQry, [IriConverter.getFileName(this.supportedIRI), IriConverter.getFileName(uri), 'https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns/links']);\n\n    // get all information about the given pattern uri\n    const qry = `SELECT ?sourceUri ?sourceName ?linkUri ?description\n      WHERE {\n        ?linkUri a <https://purl.org/patternpedia#DirectedPatternRelationDescriptor> ;\n              <https://purl.org/patternpedia#hasTarget> <${uri}> ;\n              <https://purl.org/patternpedia#hasSource> ?sourceUri .\n        ?sourceUri <https://purl.org/patternpedia#hasName> ?sourceName .\n        OPTIONAL { ?linkUri <https://purl.org/patternpedia#hasDescription> ?description }\n      }`;\n    \n    const graphs = [IriConverter.getFileName(this.supportedIRI), IriConverter.getFileName(uri), 'https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns'];\n    for (const entry of patterns) {\n      graphs.push(IriConverter.getFileName(entry.sourceUri.value));\n    }\n\n    graphs.push('https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns');\n    graphs.push('https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns/enterpriseintegrationpatterns-Patterns');\n    graphs.push('https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns/enterpriseintegrationpatterns-Relations');\n\n    return this.executor.exec(qry, graphs);\n  }\n\n  mapTriples(triples: any, uri?: string): Promise<Map<string, LinkInfo>> {\n    /*\n    triples are objects of form:\n    {\n      sourceUri: {\n        token: \"uri\",\n        value: string - uri of the source pattern\n      },\n      sourceName: {\n        token: \"literal\",\n        type: string,\n        value: string - the name of the source pattern\n      },\n      linkUri: {\n        token: \"uri\",\n        value: string - the uri of the link itself\n      },\n      description: {\n        token: \"literal\",\n        type: string,\n        value: string - the description or undefined since optional\n      }\n    }\n\n    we convert the given triples to LinkInfo\n    */\n    const data = [];\n\n    for (const t of triples) {\n      let item: LinkInfo = {\n        nodeId: IriConverter.convertIriToId(t.sourceUri.value),\n        name: t.sourceName.value,\n        linkId: IriConverter.convertIdToIri(t.linkUri.value),\n        hasDescription: t.description ? true : false\n      };\n\n      data.push(item);\n    }\n\n    const result = new Map<string, any>();\n    for (const item of data) {\n      result.set(item.nodeId, item);\n    }\n    \n    return Promise.resolve(result);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport Loader from 'src/app/core/model/loader';\nimport { PatternOntologyService } from 'src/app/core/service/pattern-ontology.service';\nimport { IriConverter } from 'src/app/core/util/iri-converter';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EnterpriseIntegrationPatternLoaderService extends Loader<any> {\n\n  constructor(private pos: PatternOntologyService) { \n    super('https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns#EnterpriseIntegrationPatterns', pos);\n  }\n\n  loadContentFromStore(uri?: string): Promise<Map<string, any>> {\n    return this.selectContentFromStore(uri)\n            .then(\n                triples => this.mapTriples(triples, uri)\n            );\n  }\n\n  async selectContentFromStore(uri?: string): Promise<any> {\n    // we need a specific pattern of form 'pattern#Pattern'\n    if (!uri) return Promise.resolve();\n\n    // get all information about the given pattern uri\n    const qry = `SELECT ?name ?groupName ?description\n      WHERE {\n        <${uri}> <https://purl.org/patternpedia#hasName> ?name .\n        <${uri}> <https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns#hasDescription> ?description .\n        ?group a <https://purl.org/patternpedia#PatternSetRelationDescriptor> ;\n              <https://purl.org/patternpedia#hasLabel> ?groupName ;\n              <https://purl.org/patternpedia#hasPattern> <${uri}> .\n      }`;\n    \n    // links URI needed for group\n    const graphs = [IriConverter.getFileName(this.supportedIRI), IriConverter.getFileName(uri), 'https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns'];\n    graphs.push('https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns');\n    graphs.push('https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns/enterpriseintegrationpatterns-Patterns');\n    graphs.push('https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns/enterpriseintegrationpatterns-Relations');\n\n    return this.executor.exec(qry, graphs);\n  }\n\n  mapTriples(triples: any, uri?: string): Promise<Map<string, any>> {\n    /*\n    triples are objects of form:\n    {\n      description: {\n        token: \"literal\",\n        type: string,\n        value: string - description of the selected pattern\n      },\n      groupName: {\n        token: \"literal\",\n        type: string,\n        value: string - the group name\n      }\n      name: {\n        token: \"literal\",\n        type: string,\n        value: string - the name of the selected pattern\n      }\n    }\n\n    we convert the given triples to the following object:\n    {\n      name: string - the name of the pattern,\n      group: string - the group name of the pattern,\n      description: [string] - descriptions of the pattern\n    }\n    */\n    const data = {};\n\n    for (const t of triples) {\n      data['name'] = t.name.value;\n      data['groupName'] = t.groupName.value;\n\n      if (!data['description']) {\n        data['description'] = Array<string>();\n      }\n\n      data['description'].push(t.description.value);\n    }\n\n    const result = new Map<string, any>();\n    result.set(uri, data);\n    \n    return Promise.resolve(result);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PatternOntologyService } from 'src/app/core/service/pattern-ontology.service';\nimport { IriConverter } from 'src/app/core/util/iri-converter';\nimport Loader from 'src/app/core/model/loader';\nimport { LinkInfo } from '../model/info';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EnterpriseIntegrationPatternOutgoingLinkLoaderService extends Loader<LinkInfo> {\n\n  constructor(private pos: PatternOntologyService) { \n    super('https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns#EnterpriseIntegrationPatterns', pos);\n  }\n\n  loadContentFromStore(uri?: string): Promise<Map<string, LinkInfo>> {\n    return this.selectContentFromStore(uri)\n            .then(\n                triples => this.mapTriples(triples, uri)\n            );\n  }\n\n  async selectContentFromStore(uri?: string): Promise<any> {\n    // we need a specific pattern of form 'pattern#Pattern'\n    if (!uri) return Promise.resolve();\n\n    // we need the uri of the referenced pattern in order to retrieve the pattern name\n    const uriQry = `SELECT ?targetUri\n      WHERE {\n        ?targetLink a <https://purl.org/patternpedia#DirectedPatternRelationDescriptor> ;\n              <https://purl.org/patternpedia#hasSource> <${uri}> ;\n              <https://purl.org/patternpedia#hasTarget> ?targetUri .\n      }`;\n    const patterns = await this.executor.exec(uriQry, [IriConverter.getFileName(this.supportedIRI), IriConverter.getFileName(uri), 'https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns/links']);\n\n    // get all information about the given pattern uri\n    const qry = `SELECT ?targetUri ?targetName ?linkUri ?description\n      WHERE {\n        ?linkUri a <https://purl.org/patternpedia/patternlanguages#DirectedPatternRelationDescriptor> ;\n              <https://purl.org/patternpedia#hasSource> <${uri}> ;\n              <https://purl.org/patternpedia#hasTarget> ?targetUri .\n        ?targetUri <https://purl.org/patternpedia#hasName> ?targetName .\n        OPTIONAL { ?linkUri <https://purl.org/patternpedia#hasDescription> ?description }\n      }`;\n\n    const graphs = [IriConverter.getFileName(this.supportedIRI), IriConverter.getFileName(uri), 'https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns'];\n    for (const entry of patterns) {\n      graphs.push(IriConverter.getFileName(entry.targetUri.value));\n    }\n\n    graphs.push('https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns');\n    graphs.push('https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns/enterpriseintegrationpatterns-Patterns');\n    graphs.push('https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns/enterpriseintegrationpatterns-Relations');\n    \n    return this.executor.exec(qry, graphs);\n  }\n\n  mapTriples(triples: any, uri?: string): Promise<Map<string, LinkInfo>> {\n    /*\n    triples are objects of form:\n    {\n      targetUri: {\n        token: \"uri\",\n        value: string - uri of the target pattern\n      },\n      targetName: {\n        token: \"literal\",\n        type: string,\n        value: string - the name of the target pattern\n      },\n      linkUri: {\n        token: \"uri\",\n        value: string - the uri of the link itself\n      },\n      description: {\n        token: \"literal\",\n        type: string,\n        value: string - the description or undefined since optional\n      }\n    }\n\n    we convert the given triples to LinkInfo\n    */\n    const data = [];\n\n    for (const t of triples) {\n      let item: LinkInfo = {\n        nodeId: IriConverter.convertIriToId(t.targetUri.value),\n        name: t.targetName.value,\n        linkId: IriConverter.convertIdToIri(t.linkUri.value),\n        hasDescription: t.description ? true : false\n      };\n\n      data.push(item);\n    }\n\n    const result = new Map<string, any>();\n    for (const item of data) {\n      result.set(item.nodeId, item);\n    }\n    \n    return Promise.resolve(result);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport Loader from 'src/app/core/model/loader';\nimport { PatternOntologyService } from 'src/app/core/service/pattern-ontology.service';\nimport { IriConverter } from 'src/app/core/util/iri-converter';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EnterpriseIntegrationPatternsGroupLoaderService extends Loader<any> {\n\n  constructor(private pos: PatternOntologyService) { \n    super('https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns#EnterpriseIntegrationPatterns', pos);\n  }\n\n  async selectContentFromStore(): Promise<any> {\n    // select all hyperedges that represent groups of patterns\n    const qry = `SELECT ?uri ?group ?pattern\n      WHERE {\n          ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <https://purl.org/patternpedia#PatternSetRelationDescriptor> .\n          ?uri <https://purl.org/patternpedia#hasLabel> ?group .\n          ?uri <https://purl.org/patternpedia#hasPattern> ?pattern .\n      }`;\n\n    const graphs = [];\n    graphs.push('https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns');\n    graphs.push('https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns/enterpriseintegrationpatterns-Patterns');\n    graphs.push('https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns/enterpriseintegrationpatterns-Relations');\n\n    return this.executor.exec(qry, graphs);\n  }\n\n  mapTriples(triples: any): Promise<Map<string, any>> {\n    /*\n    triples is list of objects with:\n    {\n      group: {\n        token: 'literal',\n        type: 'string',\n        value: string - group name\n      },\n      pattern: {\n        token: 'uri',\n        value: string - uri of the pattern in the group\n      },\n      uri: {\n        token: 'uri',\n        value: string - uri of the group object\n      }\n    }\n    we combine the data into following structure:\n    [\n      {\n        uri: string - uri of the group,\n        groupName: string - group name,\n        patterns: [\n          list of ids of the patterns contained in the group\n        ]\n      },\n      next group ...\n    ]\n    */\n    const data = [];\n    for (const t of triples) {\n      let item = data.find(i => i.uri === t.uri.value);\n\n      // create new group if there is no for current uri\n      if (!item) {\n        item = {\n          uri: t.uri.value,\n          groupName: t.group.value,\n          patterns: []\n        };\n\n        data.push(item);\n      }\n\n      // add pattern to group\n      item.patterns.push(IriConverter.convertIriToId(t.pattern.value));\n    }\n\n    // there is no group class as we need to inject the data into the individual patterns later on\n    const result = new Map<string, any>();\n    for (const i of data) {\n      result.set(i.uri, i);\n    }\n    return Promise.resolve(result);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport Loader from 'src/app/core/model/loader';\nimport { PatternOntologyService } from 'src/app/core/service/pattern-ontology.service';\nimport { IriConverter } from 'src/app/core/util/iri-converter';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EnterpriseIntegrationPatternsLinkInfoLoaderService extends Loader<any> {\n\n  constructor(private pos: PatternOntologyService) { \n    super('https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns', pos);\n  }\n\n  loadContentFromStore(uri? : string): Promise<Map<string, any>> {\n    return this.selectContentFromStore(uri)\n      .then(triples => this.mapTriples(triples, uri));\n  }\n\n  async selectContentFromStore(uri?: string): Promise<any> {\n    if(!uri) return Promise.resolve();\n\n    // get source and target nodes first\n    const patternQry = `SELECT ?sourceUri ?targetUri\n      WHERE {\n        <${uri}> <https://purl.org/patternpedia#hasSource> ?sourceUri .\n        <${uri}> <https://purl.org/patternpedia#hasTarget> ?targetUri .\n      }`;\n    const patterns = await this.executor.exec(patternQry, [this.supportedIRI]);\n\n    // get all information about link\n    const qry = `SELECT ?sourcePatternUri ?sourcePatternName ?targetPatternUri ?targetPatternName ?description\n      WHERE {\n        <${uri}> <https://purl.org/patternpedia#hasSource> ?sourcePatternUri .\n        ?sourcePatternUri <https://purl.org/patternpedia#hasName> ?sourcePatternName .\n        <${uri}> <https://purl.org/patternpedia#hasTarget> ?targetPatternUri .\n        ?targetPatternUri <https://purl.org/patternpedia#hasName> ?targetPatternName .\n        OPTIONAL { <${uri}> <https://purl.org/patternpedia#hasDescription> ?description }\n      }`;\n\n    const graphs = [this.supportedIRI];\n    patterns.forEach(p => {\n      // uri of the source pattern (for name)\n      graphs.push(IriConverter.getFileName(p.sourceUri.value));\n      // uri of the target pattern (for name)\n      graphs.push(IriConverter.getFileName(p.targetUri.value));\n    });\n\n    graphs.push('https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns');\n    graphs.push('https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns/enterpriseintegrationpatterns-Patterns');\n    graphs.push('https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns/enterpriseintegrationpatterns-Relations');\n    return this.executor.exec(qry, graphs);\n  }\n\n  mapTriples(triples: any, uri?: string): Promise<Map<string, any>> {\n    const data: any = {};\n\n    // multiple triples only if multiple description values. Other fields are the same for all triple\n    for (let t of triples) {\n      data.sourcePatternUri = t.sourcePatternUri.value;\n      data.sourcePatternName = t.sourcePatternName.value;\n      data.targetPatternUri = t.targetPatternUri.value;\n      data.targetPatternName = t.targetPatternName.value;\n\n      if (!data.descriptions)\n        data.descriptions = [];\n      \n      if (t.description && t.description.value) \n        data.descriptions.push(t.description.value)\n    }\n\n    const result = new Map<string, any>();\n    result.set(uri, {\n      sourcePattern: {\n        id: IriConverter.convertIriToId(data.sourcePatternUri),\n        name: data.sourcePatternName\n      },\n      targetPattern: {\n        id: IriConverter.convertIriToId(data.targetPatternUri),\n        name: data.targetPatternName\n      },\n      descriptions: data.descriptions\n    });\n\n    return Promise.resolve(result);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport Loader from 'src/app/core/model/loader';\nimport { PatternOntologyService } from 'src/app/core/service/pattern-ontology.service';\nimport { Link } from '../model';\nimport { IriConverter } from 'src/app/core/util/iri-converter';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EnterpriseIntegrationPatternsLinkLoaderService extends Loader<Link> {\n\n  constructor(private pos: PatternOntologyService) { \n    super('https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns#EnterpriseIntegrationPatterns', pos);\n  }\n\n  async selectContentFromStore(): Promise<any> {\n    // select all directed links\n    const qry = `SELECT ?uri ?source ?target ?description\n      WHERE {\n          ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <https://purl.org/patternpedia#DirectedPatternRelationDescriptor> .\n          ?uri <https://purl.org/patternpedia#hasSource> ?source .\n          ?uri <https://purl.org/patternpedia#hasTarget> ?target .\n          OPTIONAL { ?uri <https://purl.org/patternpedia#hasDescription> ?description . }\n      }`;\n\n    const graphs = [];\n    graphs.push('https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns');\n    graphs.push('https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns/enterpriseintegrationpatterns-Patterns');\n    graphs.push('https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns/enterpriseintegrationpatterns-Relations');\n    return this.executor.exec(qry, graphs);\n  }\n\n  mapTriples(triples: any): Promise<Map<string, any>> {\n    /*\n    triples is list of objects with:\n    {\n      description: null or {\n        token: 'literal',\n        type: 'string',\n        value: string - actual description\n      },\n      source: {\n        token: 'uri',\n        value: 'the actual uri of the source pattern'\n      },\n      target: {\n        token: 'uri',\n        value: 'the actual uri of the target pattern'\n      },\n      uri: {\n        token: 'uri',\n        value: 'uri of the lik itself'\n      }\n    }\n    since there might be multiple triple for the same link but different description (multiple description string allowed)\n    e.g. LooseCoupling has 2 description lines leading to 2 objects in the triples list for the same link\n    we combine the triples to the following objects:\n    {\n      id: string - the identifier of the link derived from the URI,\n      source: string - the source id derived from the URI,\n      target: string - the target id derived from the URI,\n      description: [string] - the descriptions. Might be empty\n    }\n    */\n    const data = [];\n    for (const t of triples) {\n      \n      let item = data.find(i => i.uri === t.uri.value);\n\n      // if no entry for link yet, create new one\n      if(!item) {\n        item = {\n          id: IriConverter.convertIriToId(t.uri.value),\n          source: IriConverter.convertIriToId(t.source.value),\n          target: IriConverter.convertIriToId(t.target.value),\n          description: []\n        };\n\n        data.push(item);\n      }\n\n      // add description, if available\n      if (t.description) {\n        item.description.push(t.description.value);\n      }\n    }\n\n    // create new Link objects from collected data\n    const result = new Map<string, Link>();\n    for (const l of data) {\n      let link = new Link(\n        l.source, l.target, null, l.description\n      );\n      result.set(l.id, link);\n    }\n    return Promise.resolve(result);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport Loader from 'src/app/core/model/loader';\nimport EnterpriseIntegrationPattern from '../model/enterprise-integration-pattern';\nimport { PatternOntologyService } from 'src/app/core/service/pattern-ontology.service';\nimport { IriConverter } from 'src/app/core/util/iri-converter';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EnterpriseIntegrationPatternsLoaderService extends Loader<EnterpriseIntegrationPattern> {\n\n  constructor(private pos: PatternOntologyService) {\n    super('https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns#EnterpriseIntegrationPatterns', pos);\n  }\n\n  async selectContentFromStore(): Promise<any> {\n    // get all patterns from the language as listed in the \"containsPattern\" predicate\n    const qryPatterns = `SELECT DISTINCT ?pattern\n      WHERE {\n        <${this.supportedIRI}> <https://purl.org/patternpedia#containsPattern> ?pattern .\n      }`;\n    const patterns = await this.executor.exec(qryPatterns, [IriConverter.getFileName(this.supportedIRI)]);\n\n    // select all information of the individual patterns\n    const qry = `SELECT ?pattern ?name ?description\n      WHERE {\n        ?pattern a <https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns#EnterpriseIntegrationPattern> .\n        ?pattern <https://purl.org/patternpedia#hasName> ?name .\n        ?pattern <https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns#hasDescription> ?description .\n      }`;\n\n    // const qry = `SELECT ?s ?p ?o\n    //   WHERE {\n    //     ?s ?p ?o\n    //   }`;\n\n    // graphs is a list containing all the ontology uris of the language with all its patterns\n    const graphs = [IriConverter.getFileName(this.supportedIRI)];\n    for (const entry of patterns) {\n      // patterns contains list of objects with field pattern via the query above (qryPatterns)\n      graphs.push(IriConverter.getFileName(entry.pattern.value));\n    }\n\n    graphs.push('https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns');\n    graphs.push('https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns/enterpriseintegrationpatterns-Patterns');\n    graphs.push('https://purl.org/patternpedia/patternlanguages/enterpriseintegrationpatterns/enterpriseintegrationpatterns-Relations');\n    return this.executor.exec(qry, graphs);\n  }\n\n  mapTriples(triples: any): Promise<Map<string, EnterpriseIntegrationPattern>> {\n    /*\n    list contains objects of type:\n    {\n      description: {\n        token: 'literal', \n        type: string,\n        value: 'One description item of the pattern'\n      },\n      name: {\n        token: 'literal',\n        type: string,\n        value: 'The name of the pattern'\n      },\n      pattern: {\n        token: 'uri',\n        value: 'the uri of the pattern'\n      }\n    }\n    */\n    /* \n    we need to collect all patterns by uri and map them with their data as\n    {\n      'pattern uri': {\n        uri: 'uri again, might be easier as CCP also does it', \n        name: 'name as string',\n        description: [string] // all descriptions collected in array\n      },\n      next pattern ...\n    }\n    */\n    const data = {};\n    for (const t of triples) {\n      let uri = t.pattern.value;\n\n      // create new entry for current pattern if non existent\n      if (!data[uri]) {\n        data[uri] = {\n          uri: uri,\n          name: null,\n          description: []\n        };\n      }\n\n      // set name\n      if (!data[uri].name) {\n        data[uri].name = t.name.value;\n      }\n\n      // add description\n      data[uri].description.push(t.description.value);\n    }\n\n    // use combined data to create instances of EnterpriseIntegrationPattern class\n    const result = new Map<string, EnterpriseIntegrationPattern>();\n    for (const p of Object.keys(data)) {\n      const eip = new EnterpriseIntegrationPattern(\n        data[p].uri,\n        data[p].name,\n        data[p].description\n      );\n\n      result.set(eip.id, eip);\n    }\n\n    return Promise.resolve(result);\n  }\n}\n","import Pattern from 'src/app/core/model/pattern.model';\n\n/**\n * Container class holding all information of an enterprise integration pattern.\n * Used to convert the Turtle data into a Typescript equivalent representation.\n */\nexport default class EnterpriseIntegrationPattern extends Pattern {\n    description: { label: 'Description', value: Array<string>} = { label: 'Description', value: [] };\n\n    constructor(iri: string, name?: string, description?: Array<string>) {\n        super(iri, name);\n        this.description.value = description;\n    }\n}","export * from './node';\nexport * from './link';\nexport * from './network-graph';\nexport * from './node-info';","import { Node } from './node';\n\nexport class Link implements d3.SimulationLinkDatum<Node> {\n    // optional - defining optional implementation properties - required for relevant typing assistance\n    index?: number;\n\n    // must - defining enforced implementation properties\n    source: Node | string | number;\n    target: Node | string | number;\n\n    type: string;\n    description: string[];\n\n    selected: boolean;\n    preview: boolean;\n    hide: boolean;\n\n    constructor(source, target, type: string = 'default', description?: string[]) {\n        this.source = source;\n        this.target = target;\n\n        this.type = type;\n        this.description = description;\n    }\n}\n","import { EventEmitter } from '@angular/core';\nimport { Link } from './link';\nimport { Node } from './node';\nimport * as d3 from 'd3';\nimport GraphConfig from './graph-config';\n\nconst DEFAULT_CONFIG = {\n  charge: -4000,\n  xStrength: 1,\n  yStrength: 1,\n  linkDistance: 300,\n  linkStrength: 0.5\n}\n\nexport class NetworkGraph {\n  public ticker: EventEmitter<d3.Simulation<Node, Link>> = new EventEmitter();\n  public simulation: d3.Simulation<any, any>;\n\n  public nodes: Node[] = [];\n  public links: Link[] = [];\n\n  config: GraphConfig;\n\n  constructor(nodes, links, options: { width, height }, config?: GraphConfig) {\n    this.nodes = nodes;\n    this.links = links;\n\n    this.config = config || DEFAULT_CONFIG;\n\n    this.initSimulation(options);\n  }\n\n  connectNodes(source, target) {\n    let link;\n\n    if (!this.nodes[source] || !this.nodes[target]) {\n      throw new Error('One of the nodes does not exist');\n    }\n\n    link = new Link(source, target);\n    this.simulation.stop();\n    this.links.push(link);\n    this.simulation.alphaTarget(0.3).restart();\n\n    this.initLinks();\n  }\n\n  initNodes() {\n    if (!this.simulation) {\n      throw new Error('simulation was not initialized yet');\n    }\n\n    this.simulation.nodes(this.nodes);\n  }\n\n  initLinks() {\n    if (!this.simulation) {\n      throw new Error('simulation was not initialized yet');\n    }\n\n    this.simulation.force('links',\n      d3.forceLink(this.links)\n        .id(d => d['id'])\n        .distance(this.config.linkDistance)\n        .strength(this.config.linkStrength)\n    );\n  }\n\n  initSimulation(options) {\n    if (!options || !options.width || !options.height) {\n      throw new Error('missing options when initializing simulation');\n    }\n\n    /** Creating the simulation */\n    if (!this.simulation) {\n      const ticker = this.ticker;\n\n      this.simulation = d3.forceSimulation()\n        .force('charge',d3.forceManyBody().strength(this.config.charge))\n        .force('center', d3.forceCenter(options.width / 2, options.height / 2))\n        .force('x', d3.forceX(options.width / 2).strength(this.config.xStrength))\n        .force('y', d3.forceY(options.height / 2).strength(this.config.yStrength));\n\n      // Connecting the d3 ticker to an angular event emitter\n      this.simulation.on('tick', function () {\n        ticker.emit(this);\n      });\n\n      this.initNodes();\n      this.initLinks();\n    }\n\n    /** Updating the central force of the simulation */\n    this.simulation.force('centers', d3.forceCenter(options.width / 2, options.height / 2));\n\n    /** Restarting the simulation internal timer */\n    this.simulation.restart();\n  }\n}","import { Node } from './node'\n\nexport class NodeInfo {\n    currNode: Node;\n\n    // from current selected node to other nodes\n    outgoing: Node[];\n    // from other nodes to the current selected node\n    incoming: Node[];\n\n    constructor() {\n        this.outgoing = [];\n        this.incoming = [];\n    }\n}","\nexport class Node implements d3.SimulationNodeDatum {\n    // optional - defining optional implementation properties - required for relevant typing assistance\n    index?: number;\n    x?: number;\n    y?: number;\n    vx?: number;\n    vy?: number;\n    fx?: number | null;\n    fy?: number | null;\n\n    // the uri/iri of the pattern\n    id: string; \n\n    // the name of the pattern which will be displayed\n    name: string;\n    // the group of the pattern\n    group: string;\n    // multiple descriptions\n    description: string[];\n    // color of the node\n    color: string;\n\n    selected: boolean;\n    preview: boolean;\n    hide: boolean;\n\n    constructor(id: string) {\n        this.id = id;\n    }\n\n    isPseudo() {\n        return this.name.endsWith('-CLP');\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Node, Link, NetworkGraph } from '../model';\nimport * as d3 from 'd3';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class D3Service {\n\n  constructor() { }\n\n  getNetworkGraph(nodes: Node[], links: Link[], options: {width: number, height: number}) : NetworkGraph {\n    const ng = new NetworkGraph(nodes, links, options);\n    return ng;\n  }\n\n  applyZoomableBehaviour(svgElement, containerElement) {\n    let svg, container, zoomed, zoom;\n\n    svg = d3.select(svgElement);\n    container = d3.select(containerElement);\n\n    zoomed = () => {\n      const transform = d3.event.transform;\n      container.attr(\"transform\", \"translate(\" + transform.x + \",\" + transform.y + \") scale(\" + transform.k + \")\");\n    }\n\n    zoom = d3.zoom().on(\"zoom\", zoomed);\n    svg.call(zoom);\n  }\n\n  applyDraggableBehaviour(element, node: Node, graph: NetworkGraph) {\n    const d3element = d3.select(element);\n\n    function started() {\n      /** Preventing propagation of dragstart to parent elements */\n      d3.event.sourceEvent.stopPropagation();\n      \n      if (!d3.event.active) {\n        graph.simulation.alphaTarget(0.3).restart();\n      }\n\n      d3.event.on(\"drag\", dragged).on(\"end\", ended);\n\n      function dragged() {\n        node.fx = d3.event.x;\n        node.fy = d3.event.y;\n      }\n\n      function ended() {\n        if (!d3.event.active) {\n          graph.simulation.alphaTarget(0);\n        }\n\n        node.fx = null;\n        node.fy = null;\n      }\n    }\n\n    d3element.call(d3.drag()\n      .on(\"start\", started));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EnterpriseIntegrationPatternsLoaderService } from '../loader/enterprise-integration-patterns-loader.service';\nimport { EnterpriseIntegrationPatternsLinkLoaderService } from '../loader/enterprise-integration-patterns-link-loader.service';\nimport { EnterpriseIntegrationPatternsGroupLoaderService } from '../loader/enterprise-integration-patterns-group-loader.service';\nimport EnterpriseIntegrationPattern from '../model/enterprise-integration-pattern';\nimport { Link } from '../model';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * this service holds all the enterprise integration pattern data for usage across components without requesting them with the individual loader.\n */\nexport class EnterpriseIntegrationPatternsDataService {\n\n  private nodeData: Map<string, EnterpriseIntegrationPattern>;\n  private linkData: Map<string, Link>;\n  private groupData: Map<string, any>;\n\n  constructor(private nodeLoader: EnterpriseIntegrationPatternsLoaderService,\n    private linkLoader: EnterpriseIntegrationPatternsLinkLoaderService,\n    private groupLoader: EnterpriseIntegrationPatternsGroupLoaderService) { }\n\n  getAllData() {\n    return Promise.all([this.getNodeData(), this.getLinkData(), this.getGroupData()]);\n  }\n\n  getNodeData(): Promise<Map<string, EnterpriseIntegrationPattern>> {\n    return this.nodeLoader.loadContentFromStore();\n    \n    // if there is no data yet...\n    // if (!this.nodeData) {\n    //   return new Promise((resolve, reject) => {\n    //     // ... load it\n    //     this.nodeLoader.loadContentFromStore()\n    //       .then(nodeMap => {\n    //         this.nodeData = nodeMap;\n    //         resolve(nodeMap);\n    //       });\n    //   });\n    // } else {\n    //   return Promise.resolve(this.nodeData);\n    // }\n  }\n\n  getLinkData(): Promise<Map<string, Link>> {\n    return this.linkLoader.loadContentFromStore();\n    // if (!this.linkData) {\n    //   return new Promise((resolve, reject) => {\n    //     this.linkLoader.loadContentFromStore()\n    //       .then(linkMap => {\n    //         this.linkData = linkMap;\n    //         resolve(linkMap);\n    //       });\n    //   });\n    // } else {\n    //   return Promise.resolve(this.linkData);\n    // }\n  }\n\n  getGroupData(): Promise<Map<string, any>> {\n    return this.groupLoader.loadContentFromStore();\n    // if (!this.groupData) {\n    //   return new Promise((resolve, reject) => {\n    //     this.groupLoader.loadContentFromStore()\n    //       .then(groupMap => {\n    //         this.groupData = groupMap;\n    //         resolve(groupMap);\n    //       });\n    //   });\n    // } else {\n    //   return Promise.resolve(this.groupData);\n    // }\n  }\n\n  private lazyLoad(data, loader) {\n    if (!data) {\n      return new Promise((resolve, reject) => {\n        loader.loadContentFromStore()\n          .then(map => {\n            data = map; // this won't work!\n            resolve(map);\n          });\n      });\n    }\n    return Promise.resolve(data);\n  }\n}\n","module.exports = \"<!--\\n  ~ Copyright (c) 2019 University of Stuttgart.\\n  ~\\n  ~ See the NOTICE file(s) distributed with this work for additional\\n  ~ information regarding copyright ownership.\\n  ~\\n  ~ This program and the accompanying materials are made available under the\\n  ~ terms of the Eclipse Public License 2.0 which is available at\\n  ~ http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\\n  ~ which is available at https://www.apache.org/licenses/LICENSE-2.0.\\n  ~\\n  ~ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\\n  -->\\n\\n<button style=\\\"margin-bottom: 20px\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"navigateBack()\\\">\\n    <i class=\\\"material-icons\\\">keyboard_backspace</i>\\n</button>\\n<h1>{{pattern?.name}}</h1>\\n<h3>{{pattern?.aliases.label}}: {{pattern?.aliases.value}}</h3>\\n<mat-card>\\n    <div style=\\\"display: flex; align-items: center;\\\" (mouseenter)=\\\"editMode.intent.showActionButtons = true\\\"\\n         (mouseleave)=\\\"editMode.intent.showActionButtons = false\\\">\\n        <ngx-md [data]=\\\"pattern?.intent.value\\\"></ngx-md>\\n        <button *ngIf=\\\"editMode.intent.showActionButtons\\\" mat-stroked-button\\n                style=\\\"margin-left: 5px\\\" color=\\\"primary\\\"\\n                (click)=\\\"openEditor('intent')\\\" matTooltip=\\\"Edit\\\"><i class=\\\"material-icons\\\">mode_edit</i></button>\\n    </div>\\n</mat-card>\\n<h2>{{pattern?.problem.label}}</h2>\\n<div style=\\\"display: flex; align-items: center;\\\" (mouseenter)=\\\"editMode.problem.showActionButtons = true\\\"\\n     (mouseleave)=\\\"editMode.problem.showActionButtons = false\\\">\\n    <ngx-md [data]=\\\"pattern?.problem.value\\\"></ngx-md>\\n    <button *ngIf=\\\"editMode.problem.showActionButtons\\\" mat-stroked-button\\n            style=\\\"margin-left: 5px\\\" color=\\\"primary\\\"\\n            (click)=\\\"openEditor('problem')\\\" matTooltip=\\\"Edit\\\"><i class=\\\"material-icons\\\">mode_edit</i></button>\\n</div>\\n<h2>{{pattern?.context.label}}</h2>\\n<div style=\\\"display: flex; align-items: center;\\\" (mouseenter)=\\\"editMode.context.showActionButtons = true\\\"\\n     (mouseleave)=\\\"editMode.context.showActionButtons = false\\\">\\n    <ngx-md [data]=\\\"pattern?.context.value\\\"></ngx-md>\\n    <button *ngIf=\\\"editMode.context.showActionButtons\\\" mat-stroked-button\\n            style=\\\"margin-left: 5px\\\" color=\\\"primary\\\"\\n            (click)=\\\"openEditor('context')\\\" matTooltip=\\\"Edit\\\"><i class=\\\"material-icons\\\">mode_edit</i></button>\\n</div>\\n<h2>{{pattern?.forces.label}}</h2>\\n<ul>\\n    <li *ngFor=\\\"let force of pattern?.forces.value\\\">\\n        {{force}}\\n    </li>\\n</ul>\\n<h2>{{pattern?.solution.label}}</h2>\\n<div style=\\\"display: flex; align-items: center;\\\" (mouseenter)=\\\"editMode.solution.showActionButtons = true\\\"\\n     (mouseleave)=\\\"editMode.solution.showActionButtons = false\\\">\\n    <ngx-md [data]=\\\"pattern?.solution.value\\\"></ngx-md>\\n    <button *ngIf=\\\"editMode.solution.showActionButtons\\\" mat-stroked-button\\n            style=\\\"margin-left: 5px\\\" color=\\\"primary\\\"\\n            (click)=\\\"openEditor('solution')\\\" matTooltip=\\\"Edit\\\"><i class=\\\"material-icons\\\">mode_edit</i></button>\\n</div>\\n<h2>{{pattern?.solutionSketches.label}}</h2>\\n<div style=\\\"display: flex; align-items: center;flex-wrap: wrap\\\">\\n    <img style=\\\"width: 500px; height: auto\\\" *ngFor=\\\"let sketch of pattern?.solutionSketches.value\\\" [src]=\\\"sketch\\\">\\n</div>\\n<h2>{{pattern?.benefits.label}}</h2>\\n<ul>\\n    <li *ngFor=\\\"let entry of pattern?.benefits.value\\\">\\n        {{entry}}\\n    </li>\\n</ul>\\n<h2>{{pattern?.drawbacks.label}}</h2>\\n<ul>\\n    <li *ngFor=\\\"let entry of pattern?.drawbacks.value\\\">\\n        {{entry}}\\n    </li>\\n</ul>\\n<h2>{{pattern?.result.label}}</h2>\\n<div style=\\\"display: flex; align-items: center;\\\" (mouseenter)=\\\"editMode.result.showActionButtons = true\\\"\\n     (mouseleave)=\\\"editMode.result.showActionButtons = false\\\">\\n    <ngx-md [data]=\\\"pattern?.result.value\\\"></ngx-md>\\n    <button *ngIf=\\\"editMode.result.showActionButtons\\\" mat-stroked-button\\n            style=\\\"margin-left: 5px\\\" color=\\\"primary\\\"\\n            (click)=\\\"openEditor('result')\\\" matTooltip=\\\"Edit\\\"><i class=\\\"material-icons\\\">mode_edit</i></button>\\n</div>\\n<h2>{{pattern?.examples.label}}</h2>\\n<div style=\\\"display: flex; align-items: center;\\\" (mouseenter)=\\\"editMode.examples.showActionButtons = true\\\"\\n     (mouseleave)=\\\"editMode.examples.showActionButtons = false\\\">\\n    <ngx-md [data]=\\\"pattern?.examples.value\\\"></ngx-md>\\n    <button *ngIf=\\\"editMode.examples.showActionButtons\\\" mat-stroked-button\\n            style=\\\"margin-left: 5px\\\" color=\\\"primary\\\"\\n            (click)=\\\"openEditor('examples')\\\" matTooltip=\\\"Edit\\\"><i class=\\\"material-icons\\\">mode_edit</i></button>\\n</div>\\n<h2>{{pattern?.variants.label}}</h2>\\n<ul>\\n    <li *ngFor=\\\"let entry of pattern?.variants.value\\\">\\n        {{entry}}\\n    </li>\\n</ul>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4dGVuc2lvbnMvcGF0dGVybi1sYW5ndWFnZS9pbnRlcm5ldC1vZi10aGluZ3MtcGF0dGVybnMvY29tcG9uZW50L2ludGVybmV0LW9mLXRoaW5ncy1wYXR0ZXJuL2ludGVybmV0LW9mLXRoaW5ncy1wYXR0ZXJuLmNvbXBvbmVudC5zY3NzIn0= */\"","/*\n * Copyright (c) 2019 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { ChangeDetectorRef, Component, NgZone, OnInit, ViewChild } from '@angular/core';\nimport { PatternRenderingComponentInterface } from '../../../../../core/model/pattern-rendering-component.interface';\nimport { InternetOfThingsPatternsLoaderService } from '../../loader/internet-of-things-patterns-loader.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport InternetOfThingsPattern from '../../model/internet-of-things-pattern';\nimport { IriConverter } from '../../../../../core/util/iri-converter';\nimport { TdTextEditorComponent } from '@covalent/text-editor';\nimport { MatDialog } from '@angular/material';\nimport { DialogData, MdEditorComponent } from '../../../../../core/component/md-editor/md-editor.component';\n\n@Component({\n    selector: 'pp-internet-of-things-pattern',\n    templateUrl: './internet-of-things-pattern.component.html',\n    styleUrls: ['./internet-of-things-pattern.component.scss']\n})\nexport class InternetOfThingsPatternComponent implements PatternRenderingComponentInterface, OnInit {\n\n    @ViewChild('mdEditor') private _textEditor: TdTextEditorComponent;\n\n    pId: string;\n    pattern: InternetOfThingsPattern;\n    mdEditorOptions = {};\n    editMode = {\n        icon: {showActionButtons: false},\n        intent: {showActionButtons: false},\n        context: {showActionButtons: false},\n        problem: {showActionButtons: false},\n        solution: {showActionButtons: false},\n        solutionSketches: {showActionButtons: false},\n        forces: {showActionButtons: false},\n        benefits: {showActionButtons: false},\n        drawbacks: {showActionButtons: false},\n        result: {showActionButtons: false},\n        examples: {showActionButtons: false},\n        aliases: {showActionButtons: false},\n        variants: {showActionButtons: false},\n    };\n\n    constructor(private loader: InternetOfThingsPatternsLoaderService,\n                private cdr: ChangeDetectorRef,\n                private router: Router,\n                private activatedRoute: ActivatedRoute,\n                private zone: NgZone,\n                private dialog: MatDialog) {\n    }\n\n    ngOnInit(): void {\n        this.loader.loadContentFromStore()\n            .then(patternMap => {\n                this.pattern = patternMap.get(IriConverter.convertIdToIri(this.pId));\n                this.cdr.detectChanges();\n            });\n    }\n\n    openEditor(field: string): void {\n        const dialogRef = this.dialog.open(MdEditorComponent,\n            {data: {field: field, label: this.pattern[field].label, content: this.pattern[field].value}});\n        this.editMode[field].edit = true;\n        dialogRef.afterClosed().subscribe((result: DialogData) => {\n            this.pattern[field].value = result.content;\n        });\n    }\n\n    navigateBack(): void {\n        this.zone.run(() => {\n            this.router.navigate(['..'], {relativeTo: this.activatedRoute});\n        });\n    }\n}\n","module.exports = \"<!--\\n  ~ Copyright (c) 2019 University of Stuttgart.\\n  ~\\n  ~ See the NOTICE file(s) distributed with this work for additional\\n  ~ information regarding copyright ownership.\\n  ~\\n  ~ This program and the accompanying materials are made available under the\\n  ~ terms of the Eclipse Public License 2.0 which is available at\\n  ~ http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\\n  ~ which is available at https://www.apache.org/licenses/LICENSE-2.0.\\n  ~\\n  ~ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\\n  -->\\n<button style=\\\"margin-bottom: 20px\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"navigateBack()\\\"><i\\n        class=\\\"material-icons\\\">keyboard_backspace</i></button>\\n\\n<div class=\\\"container\\\">\\n    <mat-card class=\\\"landing-card\\\" *ngFor=\\\"let pattern of patterns\\\">\\n        <mat-card-header>\\n            <mat-card-title *ngIf=\\\"pattern.name && '' !== pattern.name; else noPatternName\\\" style=\\\"width: 10rem\\\">\\n                {{pattern.name}}\\n            </mat-card-title>\\n            <ng-template #noPatternName>\\n                <mat-card-title style=\\\"width: 10rem\\\">\\n                    No Name Provided\\n                </mat-card-title>\\n            </ng-template>\\n        </mat-card-header>\\n        <img mat-card-image *ngIf=\\\"pattern.icon.value; else noImage\\\" [src]=\\\"pattern.icon.value\\\"\\n             style=\\\"width: 12rem; margin: 0 -16px 16px 0\\\">\\n        <ng-template #noImage><img mat-card-image [src]=\\\"'https://placekitten.com/200/300'\\\"></ng-template>\\n        <mat-card-content style=\\\"height: 120px; overflow: scroll;font-size: 12px\\\">\\n            {{pattern.intent.value}}\\n        </mat-card-content>\\n        <mat-card-actions>\\n            <div style=\\\"text-align: center\\\">\\n                <button mat-stroked-button color=\\\"primary\\\" (click)=\\\"navigate(pattern.id)\\\"><i class=\\\"material-icons\\\">pageview</i>View\\n                </button>\\n            </div>\\n        </mat-card-actions>\\n    </mat-card>\\n</div>\\n\"","module.exports = \"/*!\\n * Copyright (c) 2018 University of Stuttgart.\\n *\\n * See the NOTICE file(s) distributed with this work for additional\\n * information regarding copyright ownership.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\\n */\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9QYXR0ZXJuUGVkaWEvcGF0dGVybi1wZWRpYS9zcmMvYXBwL2V4dGVuc2lvbnMvcGF0dGVybi1sYW5ndWFnZS9pbnRlcm5ldC1vZi10aGluZ3MtcGF0dGVybnMvY29tcG9uZW50L2ludGVybmV0LW9mLXRoaW5ncy1wYXR0ZXJucy9pbnRlcm5ldC1vZi10aGluZ3MtcGF0dGVybnMuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2V4dGVuc2lvbnMvcGF0dGVybi1sYW5ndWFnZS9pbnRlcm5ldC1vZi10aGluZ3MtcGF0dGVybnMvY29tcG9uZW50L2ludGVybmV0LW9mLXRoaW5ncy1wYXR0ZXJucy9pbnRlcm5ldC1vZi10aGluZ3MtcGF0dGVybnMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7OztFQ1lFIiwiZmlsZSI6InNyYy9hcHAvZXh0ZW5zaW9ucy9wYXR0ZXJuLWxhbmd1YWdlL2ludGVybmV0LW9mLXRoaW5ncy1wYXR0ZXJucy9jb21wb25lbnQvaW50ZXJuZXQtb2YtdGhpbmdzLXBhdHRlcm5zL2ludGVybmV0LW9mLXRoaW5ncy1wYXR0ZXJucy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQ29weXJpZ2h0IChjKSAyMDE4IFVuaXZlcnNpdHkgb2YgU3R1dHRnYXJ0LlxuICpcbiAqIFNlZSB0aGUgTk9USUNFIGZpbGUocykgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWxcbiAqIGluZm9ybWF0aW9uIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMgYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZVxuICogdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgMi4wIHdoaWNoIGlzIGF2YWlsYWJsZSBhdFxuICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtMi4wLCBvciB0aGUgQXBhY2hlIFNvZnR3YXJlIExpY2Vuc2UgMi4wXG4gKiB3aGljaCBpcyBhdmFpbGFibGUgYXQgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMC5cbiAqXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogRVBMLTIuMCBPUiBBcGFjaGUtMi4wXG4gKi9cblxuIiwiLyohXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTggVW5pdmVyc2l0eSBvZiBTdHV0dGdhcnQuXG4gKlxuICogU2VlIHRoZSBOT1RJQ0UgZmlsZShzKSBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbFxuICogaW5mb3JtYXRpb24gcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuXG4gKlxuICogVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscyBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlXG4gKiB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSAyLjAgd2hpY2ggaXMgYXZhaWxhYmxlIGF0XG4gKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC0yLjAsIG9yIHRoZSBBcGFjaGUgU29mdHdhcmUgTGljZW5zZSAyLjBcbiAqIHdoaWNoIGlzIGF2YWlsYWJsZSBhdCBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wLlxuICpcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBFUEwtMi4wIE9SIEFwYWNoZS0yLjBcbiAqL1xuIl19 */\"","/*\n * Copyright (c) 2019 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { ChangeDetectorRef, Component, NgZone, OnInit } from '@angular/core';\nimport InternetOfThingsPattern from '../../model/internet-of-things-pattern';\nimport { InternetOfThingsPatternsLoaderService } from '../../loader/internet-of-things-patterns-loader.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n    selector: 'pp-internet-of-things-patterns',\n    templateUrl: './internet-of-things-patterns.component.html',\n    styleUrls: ['./internet-of-things-patterns.component.scss']\n})\nexport class InternetOfThingsPatternsComponent implements OnInit {\n\n    patterns: Array<InternetOfThingsPattern>;\n    patternMap: Map<string, InternetOfThingsPattern>;\n\n    constructor(private loader: InternetOfThingsPatternsLoaderService,\n                private cdr: ChangeDetectorRef,\n                private router: Router,\n                private activatedRoute: ActivatedRoute,\n                private zone: NgZone) {\n    }\n\n    ngOnInit() {\n        this.loader.loadContentFromStore()\n            .then(patternMap => {\n                this.patternMap = patternMap;\n                this.patterns = Array.from(patternMap.values());\n                this.cdr.detectChanges();\n            });\n    }\n\n    navigate(id: string): void {\n        this.zone.run(() => {\n            this.router.navigate([id], {relativeTo: this.activatedRoute});\n        });\n    }\n\n    navigateBack(): void {\n        this.zone.run(() => {\n            this.router.navigate(['..'], {relativeTo: this.activatedRoute});\n        });\n    }\n\n}\n","/*\n * Copyright (c) 2019 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InternetOfThingsPatternsLoaderService } from './loader/internet-of-things-patterns-loader.service';\nimport { InternetOfThingsPatternsComponent } from './component/internet-of-things-patterns/internet-of-things-patterns.component';\nimport { ComponentRegistryService } from '../../../core/service/component-registry.service';\nimport { MatButtonModule, MatCardModule, MatDialogModule, MatFormFieldModule, MatTooltipModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\nimport { InternetOfThingsPatternComponent } from './component/internet-of-things-pattern/internet-of-things-pattern.component';\nimport { IriConverter } from '../../../core/util/iri-converter';\nimport { NgxMdModule } from 'ngx-md';\nimport { TextFieldModule } from '@angular/cdk/text-field';\nimport { CoreModule } from '../../../core/core.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatCardModule,\n        MatButtonModule,\n        MatTooltipModule,\n        MatDialogModule,\n        MatFormFieldModule,\n        TextFieldModule,\n        NgxMdModule.forRoot(),\n        CoreModule,\n        RouterModule\n    ],\n    declarations: [\n        InternetOfThingsPatternComponent,\n        InternetOfThingsPatternsComponent\n    ],\n    providers: [\n        InternetOfThingsPatternsLoaderService\n    ],\n    exports: [],\n    entryComponents: [\n        InternetOfThingsPatternComponent,\n        InternetOfThingsPatternsComponent\n    ]\n})\nexport class InternetOfThingsPatternsModule {\n    constructor(private cr: ComponentRegistryService) {\n      this.cr.registerComponent(IriConverter.convertIriToId('https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#InternetOfThingsPatterns'), {\n            plcomponent: InternetOfThingsPatternsComponent,\n            pcomponent: InternetOfThingsPatternComponent\n        }); // tslint:disable-line:max-line-length\n    }\n}\n","/*\n * Copyright (c) 2019 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport InternetOfThingsPattern from '../model/internet-of-things-pattern';\nimport Loader from '../../../../core/model/loader';\nimport { Injectable } from '@angular/core';\nimport { PatternOntologyService } from '../../../../core/service/pattern-ontology.service';\nimport { IriConverter } from '../../../../core/util/iri-converter';\n\n@Injectable()\nexport class InternetOfThingsPatternsLoaderService extends Loader<InternetOfThingsPattern> {\n\n    constructor(private pos: PatternOntologyService) {\n      super('https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#InternetOfThingsPatterns', pos);\n    }\n\n    async selectContentFromStore(): Promise<any> {\n        const qryPatterns = `SELECT DISTINCT ?pattern\n                                      WHERE {\n                                          <${this.supportedIRI}> <https://purl.org/patternpedia#containsPattern> ?pattern\n                                      }`;\n        const patterns = await this.executor.exec(qryPatterns, [IriConverter.getFileName(this.supportedIRI)]);\n        const qry = `SELECT DISTINCT ?type ?pattern ?predicate ?property\n                 WHERE {\n                    <${this.supportedIRI}> pp:containsPattern ?pattern .\n                    ?pattern ?predicate ?property .\n                    ?pattern a ?type .\n                    FILTER (?type != owl:NamedIndividual && ?predicate != rdf:type)\n                    }\n                 ORDER BY ?pattern`;\n        const graphs = [IriConverter.getFileName(this.supportedIRI)];\n        for (const entry of patterns) {\n            graphs.push(IriConverter.getFileName(entry.pattern.value));\n        }\n        return this.executor.exec(qry, graphs);\n    }\n\n    mapTriples(triples: any): Promise<Map<string, InternetOfThingsPattern>> {\n        const result = new Map<string, InternetOfThingsPattern>();\n        // we first iterate the triples and generate an intermediate format to create afterwards pattern objects\n        const patterns = {};\n        for (const row of triples) {\n\n            // row.pattern.value = PatternIndividual IRI\n            if (!patterns[row.pattern.value]) {\n                patterns[row.pattern.value] = {iri: row.pattern.value, type: row.type.value};\n            }\n            if (!patterns[row.pattern.value][row.predicate.value]) {\n                patterns[row.pattern.value][row.predicate.value] = {\n                    name: row.predicate.value,\n                    value: row.property.value,\n                    type: row.property.type\n                };\n            } else if (!Array.isArray(patterns[row.pattern.value][row.predicate.value])) {\n                const temp = patterns[row.pattern.value][row.predicate.value];\n                patterns[row.pattern.value][row.predicate.value] = [temp,\n                    {\n                        name: row.predicate.value,\n                        value: row.property.value,\n                        type: row.property.type\n                    }];\n            } else if (Array.isArray(patterns[row.pattern.value][row.predicate.value])) {\n                patterns[row.pattern.value][row.predicate.value].push({\n                    name: row.predicate.value,\n                    value: row.property.value,\n                    type: row.property.type\n                });\n            }\n        }\n        for (const key of Object.keys(patterns)) {\n            let name = '';\n            if (patterns[key] && patterns[key]['https://purl.org/patternpedia#hasName'] && patterns[key]['https://purl.org/patternpedia#hasName'].value) {\n                name = patterns[key]['https://purl.org/patternpedia#hasName'].value;\n            }\n            let icon = '';\n          if (patterns[key] && patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#icon']\n            && patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#icon'].value) {\n            icon = patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#icon'].value;\n            }\n            let intent = '';\n          if (patterns[key] && patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#intent']\n            && patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#intent'].value) {\n            intent = patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#intent'].value;\n            }\n            let context = '';\n          if (patterns[key] && patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#context']\n            && patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#context'].value) {\n            context = patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#context'].value;\n            }\n            let problem = '';\n          if (patterns[key] && patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#problem']\n            && patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#problem'].value) {\n            problem = patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#problem'].value;\n            }\n            let solution = '';\n          if (patterns[key] && patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#solution']\n            && patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#solution'].value) {\n            solution = patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#solution'].value;\n            }\n            const sketches = [];\n          if (Array.isArray(patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#solutionSketch'])) {\n            for (const entry of patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#solutionSketch']) {\n                    sketches.push(entry.value);\n                }\n          } else if (patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#solutionSketch']\n            && patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#solutionSketch'].value) {\n            sketches.push(patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#solutionSketch'].value);\n            }\n            const forces = [];\n          if (Array.isArray(patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#force'])) {\n            for (const entry of patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#force']) {\n                    forces.push(entry.value);\n                }\n          } else if (patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#force']\n            && patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#force'].value) {\n            forces.push(patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#force'].value);\n            }\n            const benefits = [];\n          if (Array.isArray(patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#benefit'])) {\n            for (const entry of patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#benefit']) {\n                    benefits.push(entry.value);\n                }\n          } else if (patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#benefit']\n            && patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#benefit'].value) {\n            benefits.push(patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#benefit'].value);\n            }\n            const drawbacks = [];\n          if (Array.isArray(patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#drawback'])) {\n            for (const entry of patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#drawback']) {\n                    drawbacks.push(entry.value);\n                }\n          } else if (patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#drawback']\n            && patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#drawback'].value) {\n            drawbacks.push(patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#drawback'].value);\n            }\n            let patternResult = '';\n          if (patterns[key] && patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#result']\n            && patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#result'].value) {\n            patternResult = patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#result'].value;\n            }\n            let examples = '';\n          if (patterns[key] && patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#examples']\n            && patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#examples'].value) {\n            examples = patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#examples'].value;\n            }\n            const aliases = [];\n          if (Array.isArray(patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#alias'])) {\n            for (const entry of patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#alias']) {\n                    aliases.push(entry.value);\n                }\n          } else if (patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#alias']\n            && patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#alias'].value) {\n            aliases.push(patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#alias'].value);\n            }\n            const variants = [];\n          if (Array.isArray(patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#variant'])) {\n            for (const entry of patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#variant']) {\n                    variants.push(entry.value);\n                }\n          } else if (patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#variant']\n            && patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#variant'].value) {\n            variants.push(patterns[key]['https://purl.org/patternpedia/patternlanguages/internetofthingspatterns#variant'].value);\n            }\n\n            /*\n                iri: string,\n                name: string,\n                icon: string,\n                intent: string,\n                context: string,\n                problem: string,\n                solution: string,\n                solutionSketches: Array<string>,\n                forces: Array<string>,\n                benefits: Array<string>,\n                drawbacks: Array<string>,\n                result: string,\n                examples: Array<string>,\n                aliases: Array<string>,\n                variants: Array<string>\n            */\n            result.set(\n                key,\n                new InternetOfThingsPattern(\n                    key,\n                    name,\n                    icon,\n                    intent,\n                    context,\n                    problem,\n                    solution,\n                    sketches,\n                    forces,\n                    benefits,\n                    drawbacks,\n                    patternResult,\n                    examples,\n                    aliases,\n                    variants)\n            );\n        }\n\n        return Promise.resolve(result);\n    }\n}\n","/*\n * Copyright (c) 2019 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport Pattern from '../../../../core/model/pattern.model';\n\nclass InternetOfThingsPattern extends Pattern {\n    /*\n        From Pattern:\n            private _id: string;\n            iri: string;\n            name: string;\n     */\n    intent: { label: 'Intent', value: string } = {label: 'Intent', value: ''};\n    context: { label: 'Context', value: string } = {label: 'Context', value: ''};\n    problem: { label: 'Problem', value: string } = {label: 'Problem', value: ''};\n    solution: { label: 'Solution', value: string } = {label: 'Solution', value: ''};\n    result: { label: 'Result', value: string } = {label: 'Result', value: ''};\n    icon: { label: 'Icon', value: string } = {label: 'Icon', value: ''};\n    solutionSketches: { label: 'Solution Sketches', value: Array<string> } = {label: 'Solution Sketches', value: []};\n    forces: { label: 'Forces', value: Array<string> } = {label: 'Forces', value: []};\n    drawbacks: { label: 'Drawbacks', value: Array<string> } = {label: 'Drawbacks', value: []};\n    benefits: { label: 'Benefits', value: Array<string> } = {label: 'Benefits', value: []};\n    aliases: { label: 'Aliases', value: Array<string> } = {label: 'Aliases', value: []};\n    variants: { label: 'Variants', value: Array<string> } = {label: 'Variants', value: []};\n    examples: { label: 'Examples', value: string } = {label: 'Examples', value: ''};\n\n    constructor(iri: string,\n                name: string,\n                icon: string,\n                intent: string,\n                context: string,\n                problem: string,\n                solution: string,\n                solutionSketches: Array<string>,\n                forces: Array<string>,\n                benefits: Array<string>,\n                drawbacks: Array<string>,\n                result: string,\n                examples: string,\n                aliases: Array<string>,\n                variants: Array<string>) {\n        super(iri, name);\n        this.icon.value = icon;\n        this.intent.value = intent;\n        this.context.value = context;\n        this.problem.value = problem;\n        this.solution.value = solution;\n        this.solutionSketches.value = solutionSketches;\n        this.forces.value = forces;\n        this.benefits.value = benefits;\n        this.drawbacks.value = drawbacks;\n        this.result.value = result;\n        this.examples.value = examples;\n        this.aliases.value = aliases;\n        this.variants.value = variants;\n    }\n}\n\nexport default InternetOfThingsPattern;\n","module.exports = \"<div *ngIf=\\\"data\\\">\\n  <h1>Filter Patterns</h1> <!-- maybe add patternlanguage name here? -->\\n\\n  <div class=\\\"pattern-options\\\">\\n    <h2>Pattern Options</h2>\\n    <!-- input field for every field of the config element -->\\n    <mat-form-field class=\\\"filter-field\\\" *ngFor=\\\"let key of objectKeys(data)\\\">\\n      <input matInput placeholder=\\\"{{key}}\\\" [(ngModel)]=\\\"data[key]\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <div class=\\\"relation-options\\\">\\n    <h2>Relation Options</h2>\\n    <mat-checkbox>Pattern must contain Cross Language Links</mat-checkbox>\\n  </div>\\n\\n  <div class=\\\"dialog-actions\\\">\\n    <button mat-flat-button color=\\\"primary\\\" (click)=\\\"onCloseConfirm()\\\">Apply Filter</button>\\n    <button mat-stroked-button (click)=\\\"onCloseClear()\\\">Clear Values</button>\\n    <button mat-stroked-button (click)=\\\"onCloseCancel()\\\" class=\\\"right-button\\\">Cancel</button>\\n  </div>\\n</div>\"","module.exports = \"h1 {\\n  margin: 0; }\\n\\nh2 {\\n  font-size: 12pt;\\n  margin-left: -8px; }\\n\\n.pattern-options {\\n  padding-left: 8px;\\n  padding-bottom: 16px;\\n  border-bottom: solid 2px lightgrey; }\\n\\n.filter-field {\\n  width: 100%;\\n  margin-bottom: -16px; }\\n\\n.relation-options {\\n  padding-left: 8px;\\n  margin-top: 20px; }\\n\\n.dialog-actions {\\n  margin-top: 32px; }\\n\\n.dialog-actions button {\\n    margin-right: 8px; }\\n\\n.right-button {\\n  float: right;\\n  margin-right: 0px !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9QYXR0ZXJuUGVkaWEvcGF0dGVybi1wZWRpYS9zcmMvYXBwL2ZpbHRlci9jb21wb25lbnQvZmlsdGVyLXZpZXcvZmlsdGVyLXZpZXcuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxTQUFTLEVBQUE7O0FBR2I7RUFDSSxlQUFlO0VBQ2YsaUJBQWlCLEVBQUE7O0FBR3JCO0VBQ0ksaUJBQWlCO0VBQ2pCLG9CQUFvQjtFQUNwQixrQ0FBa0MsRUFBQTs7QUFHdEM7RUFDSSxXQUFXO0VBQ1gsb0JBQW9CLEVBQUE7O0FBR3hCO0VBQ0ksaUJBQWlCO0VBQ2pCLGdCQUFlLEVBQUE7O0FBR25CO0VBQ0ksZ0JBQWdCLEVBQUE7O0FBRHBCO0lBSVEsaUJBQWlCLEVBQUE7O0FBSXpCO0VBQ0ksWUFBWTtFQUNaLDRCQUE0QixFQUFBIiwiZmlsZSI6InNyYy9hcHAvZmlsdGVyL2NvbXBvbmVudC9maWx0ZXItdmlldy9maWx0ZXItdmlldy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImgxIHtcbiAgICBtYXJnaW46IDA7XG59XG5cbmgyIHtcbiAgICBmb250LXNpemU6IDEycHQ7XG4gICAgbWFyZ2luLWxlZnQ6IC04cHg7XG59XG5cbi5wYXR0ZXJuLW9wdGlvbnMge1xuICAgIHBhZGRpbmctbGVmdDogOHB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAxNnB4O1xuICAgIGJvcmRlci1ib3R0b206IHNvbGlkIDJweCBsaWdodGdyZXk7XG59XG5cbi5maWx0ZXItZmllbGQge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbi1ib3R0b206IC0xNnB4O1xufVxuXG4ucmVsYXRpb24tb3B0aW9ucyB7XG4gICAgcGFkZGluZy1sZWZ0OiA4cHg7XG4gICAgbWFyZ2luLXRvcDoyMHB4O1xufVxuXG4uZGlhbG9nLWFjdGlvbnMge1xuICAgIG1hcmdpbi10b3A6IDMycHg7XG5cbiAgICBidXR0b24ge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDhweDtcbiAgICB9XG59XG5cbi5yaWdodC1idXR0b24ge1xuICAgIGZsb2F0OiByaWdodDtcbiAgICBtYXJnaW4tcmlnaHQ6IDBweCAhaW1wb3J0YW50O1xufSJdfQ== */\"","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { FilterFactoryService } from '../../service/filter-factory.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material\";\n\n@Component({\n  selector: 'pp-filter-view',\n  templateUrl: './filter-view.component.html',\n  styleUrls: ['./filter-view.component.scss']\n})\n/**\n * Displays the string-fields of a pattern that can be filtered.\n * Users can set the filter criteria via input fields provided in this view.\n */\nexport class FilterViewComponent implements OnInit {\n\n  // you can't use Object.keys within a template. We assign it to a separate function\n  objectKeys = Object.keys;\n  // holds a copy of the filter configuration\n  data: any;\n\n  constructor(private filterFactory: FilterFactoryService,\n    public thisDialogRef: MatDialogRef<FilterViewComponent>,\n    @Inject(MAT_DIALOG_DATA) public patternLanguageUri: string) { }\n\n  ngOnInit() {\n    this.filterFactory.getConfig(this.patternLanguageUri)\n      .then(config => {\n        // copy object, don't use the original reference!\n        this.data = JSON.parse(JSON.stringify(config));\n      });\n  }\n\n  onCloseConfirm() {\n    // apply changed config in factory\n    this.filterFactory.setConfig(this.patternLanguageUri, this.data);\n    this.thisDialogRef.close(true);\n  }\n\n  onCloseClear() {\n    // reset all filter values to empty values\n    Object.keys(this.data).forEach(k => this.data[k] = '');\n    this.filterFactory.setConfig(this.patternLanguageUri, this.data);\n    this.thisDialogRef.close(true);\n  }\n\n  onCloseCancel() {\n    // don't apply changes in config\n    this.thisDialogRef.close(false);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport Loader from 'src/app/core/model/loader';\nimport { PatternOntologyService } from 'src/app/core/service/pattern-ontology.service';\nimport { IriConverter } from 'src/app/core/util/iri-converter';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Loads all properties from a pattern of the triplestore that have a xsd:string type restriction.\n * Example: If a pattern defines a property 'hasName' to be a xsd:string, the loader will return 'name'.\n */\nexport class FilterLoaderService extends Loader<any> {\n  \n  constructor(private pos: PatternOntologyService) {\n    super('https://purl.org/patternpedia', pos);\n  }\n\n  async loadContentFromStore(patternlanguageUri?: string): Promise<Map<string, any>> {\n    return this.selectContentFromStore(patternlanguageUri)\n            .then(\n                triples => this.mapTriples(triples, patternlanguageUri)\n            );\n  }\n\n  async selectContentFromStore(patternlanguageUri?: string): Promise<any> {\n    // select all properties that are somehow restricted to string\n    // consider the class within the given uri graph as well as the possible base class 'Pattern'\n    const query = `SELECT DISTINCT ?predicate\n    WHERE {\n      {\n        ?predicate a owl:DatatypeProperty .\n        pp:Pattern rdfs:subClassOf ?sub .\n        ?sub a owl:Restriction .\n        ?sub owl:onProperty ?predicate .\n        ?sub ?typeRange xsd:string .\n      }\n      UNION\n      {\n        ?predicate a owl:DatatypeProperty .\n        ?class rdfs:subClassOf pp:Pattern .\n        ?class rdfs:subClassOf ?sub .\n        ?sub a owl:Restriction .\n        ?sub owl:onProperty ?predicate .\n        ?sub ?typeRange xsd:string .\n      }\n    }`;\n\n    // we need /patternpedia and /patternpedia/patternlanguages/PL for this query\n    const graphs = [\n      IriConverter.getFileName(this.supportedIRI),\n      IriConverter.getFileName(patternlanguageUri)\n    ];\n\n    return this.executor.exec(query, graphs);\n  }\n\n  async mapTriples(triples: any, patternlanguageUri?: string): Promise<Map<string, any>> {\n    const data = [];\n    for (const t of triples) {\n      if (t.predicate && t.predicate.value)\n        data.push(this.crop(t.predicate.value));\n    }\n\n    const result = new Map<string, any>();\n    result.set(patternlanguageUri, data);\n\n    return Promise.resolve(result);\n  }\n\n  /**\n   * Crops the given predicate uri to a simplified predicate name.\n   * \n   * Example: crop('https://purl.org/patternpedia#hasName') -> 'name'\n   * \n   * @param value the uri of the predicate\n   */\n  private crop(value: string) {\n    let predicate = value.substr(value.indexOf(\"#\")+1);\n    let result = predicate.replace(\"has\", \"\");\n    result = result.toLowerCase();\n\n    return result;\n  }\n\n}\n","/**\n * Class that provides filtering functionality for various causes.\n */\nexport default class Filter {\n\n    private config: any;\n\n    /**\n     * Creates a new filter based on the given configuration.\n     * The configuration determines how the filter will do the work.\n     * \n     * Example: config contains a field named 'name' and has the string value 'John'.\n     * If later a list of objects should be filtered, the filter checks the individual objects for a field with 'name' and a value that somehow relates to 'John'.\n     * If both checks are passed, the object will remain in the list, otherwise it will be removed.\n     * \n     * @param config an object containing the filter criterias. The filter will be able to filter the later given objects depending on the values of the config object\n     */\n    constructor(config: any) {\n        this.config = config;\n    }\n\n    /**\n     * Filters a given list of patterns based on the config.\n     * \n     * The Filter method checks, if the given config value is contained in the pattern fields.\n     * Example: \n     * Pattern Name - Message Filter\n     * Config Name  - message\n     * Filtering will include this pattern, as the test will be successful.\n     * \n     * @param patterns the list of pattern objects that will be filtered based on the config\n     */\n    filterPatterns(patterns: Array<any>): Array<any> {\n        // filter based on pattern properties\n        const filtered = patterns.filter(p => {\n            let result = true;\n            Object.keys(this.config).forEach(k => {\n                // pattern should contain same fields as the config\n                if (p[k]) {        \n                    // and the value of that fields should match somehow\n                    let test = this.matches(p[k], this.config[k]);\n                    // all tests have to be successful! Aggregate the individual results\n                    result = result && test;\n                } else {\n                    result = false;\n                }\n            }); \n            return result;\n        });\n\n        // TODO filter based on link properties\n\n        return filtered;\n    }\n\n    // TODO use a similarity measure here!\n    // for now, we check if one includes the other somehow\n    // values can be string arrays! E.g. when there are multiple description values -> description is a string array\n    private matches(value: string | Array<string>, config: string): boolean {\n        // special case: b might be empty, i.e. \"\" if no filter value has been entered\n        // this method works even in this situation. But keep this in mind, if we switch the match function!\n\n        if (value instanceof Array) {\n            let result = false;\n            for (const s of value) {\n                let shorter = (s.length < config.length) ? s : config;\n                let longer = (s.length < config.length) ? config : s;\n                // if one element of the list passes the test, return true\n                result = result || longer.toLowerCase().includes(shorter.toLowerCase());\n            }\n            return result;\n        } else {\n            let shorter = (value.length < config.length) ? value : config;\n            let longer = (value.length < config.length) ? config : value;\n\n            return longer.toLowerCase().includes(shorter.toLowerCase());\n        }\n    }\n}","import { Injectable } from '@angular/core';\nimport Filter from '../model/filter';\nimport { FilterLoaderService } from '../loader/filter-loader.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilterFactoryService {\n\n  private configs: Map<string, any>;\n\n  constructor(private loader: FilterLoaderService) { \n    this.configs = new Map<string, any>();\n  }\n\n  async createFilter(uri: string): Promise<Filter> {\n    let config = await this.getConfig(uri);\n    return Promise.resolve(new Filter(config));\n  }\n\n  async getConfig(uri: string): Promise<any> {\n    let config = this.configs.get(uri);\n    if (!config) {\n      // create new default config via loader\n      const result = await this.loader.loadContentFromStore(uri);\n      config = this.createConfig(result.get(uri));\n      this.configs.set(uri, config);\n    }\n\n    return Promise.resolve(config);\n  }\n\n  setConfig(uri: string, config: any) {\n    this.configs.set(uri, config);\n  }\n\n  /**\n   * Creates a config object containing the given list of properties as keys and initializes them with an empty string\n   * @param properties list of string properties\n   */\n  private createConfig(properties: Array<string>) {\n    let config = {};\n    for (const p of properties) {\n      config[p] = '';\n    }\n\n    return config;\n  }\n}\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nexport const globals = {\n    urlPatternRepoOntology: 'https://purl.org/patternpedia',\n    iriPatternRepoInstance: 'https://purl.org/patternpedia#LinkedOpenPatterns',\n  loadOntologyLocally: true\n};\n","module.exports = \"<!--\\n  ~ Copyright (c) 2018 University of Stuttgart.\\n  ~\\n  ~ See the NOTICE file(s) distributed with this work for additional\\n  ~ information regarding copyright ownership.\\n  ~\\n  ~ This program and the accompanying materials are made available under the\\n  ~ terms of the Eclipse Public License 2.0 which is available at\\n  ~ http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\\n  ~ which is available at https://www.apache.org/licenses/LICENSE-2.0.\\n  ~\\n  ~ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\\n  -->\\n\\n<mat-card>\\n    <mat-card-title>Welcome to PatternPedia!</mat-card-title>\\n\\n    <div class=\\\"container\\\">\\n        <mat-card class=\\\"landing-card\\\">\\n            <mat-card-title>\\n                Administration\\n            </mat-card-title>\\n            <mat-card-actions style=\\\"align-self: flex-end; flex: 1 1 auto\\\">\\n                <button mat-button color=\\\"accent\\\" [routerLink]=\\\"'administration'\\\"><i class=\\\"material-icons\\\">pageview</i>View\\n                </button>\\n            </mat-card-actions>\\n        </mat-card>\\n        <mat-card class=\\\"landing-card\\\">\\n            <mat-card-title>\\n                Manage Pattern Languages\\n            </mat-card-title>\\n            <mat-card-actions>\\n                <button mat-button color=\\\"accent\\\"><i class=\\\"material-icons\\\">add_circle</i>Create</button>\\n                <button mat-button color=\\\"accent\\\" [routerLink]=\\\"'patternlanguages'\\\">\\n                    <i class=\\\"material-icons\\\">pageview</i>View\\n                </button>\\n            </mat-card-actions>\\n        </mat-card>\\n        <mat-card class=\\\"landing-card\\\">\\n            <mat-card-title>\\n                Manage Solution Languages\\n            </mat-card-title>\\n            <mat-card-actions>\\n                <button mat-raised-button color=\\\"accent\\\"><i class=\\\"material-icons\\\">add_circle</i>Create</button>\\n                <button mat-raised-button color=\\\"accent\\\"><i class=\\\"material-icons\\\">pageview</i>View</button>\\n            </mat-card-actions>\\n        </mat-card>\\n    </div>\\n</mat-card>\\n\"","module.exports = \"/*!\\n * Copyright (c) 2018 University of Stuttgart.\\n *\\n * See the NOTICE file(s) distributed with this work for additional\\n * information regarding copyright ownership.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\\n */\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9QYXR0ZXJuUGVkaWEvcGF0dGVybi1wZWRpYS9zcmMvYXBwL2xhbmRpbmctcGFnZS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbGFuZGluZy1wYWdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7RUNZRSIsImZpbGUiOiJzcmMvYXBwL2xhbmRpbmctcGFnZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQ29weXJpZ2h0IChjKSAyMDE4IFVuaXZlcnNpdHkgb2YgU3R1dHRnYXJ0LlxuICpcbiAqIFNlZSB0aGUgTk9USUNFIGZpbGUocykgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWxcbiAqIGluZm9ybWF0aW9uIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMgYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZVxuICogdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgMi4wIHdoaWNoIGlzIGF2YWlsYWJsZSBhdFxuICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtMi4wLCBvciB0aGUgQXBhY2hlIFNvZnR3YXJlIExpY2Vuc2UgMi4wXG4gKiB3aGljaCBpcyBhdmFpbGFibGUgYXQgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMC5cbiAqXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogRVBMLTIuMCBPUiBBcGFjaGUtMi4wXG4gKi9cblxuIiwiLyohXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTggVW5pdmVyc2l0eSBvZiBTdHV0dGdhcnQuXG4gKlxuICogU2VlIHRoZSBOT1RJQ0UgZmlsZShzKSBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbFxuICogaW5mb3JtYXRpb24gcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuXG4gKlxuICogVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscyBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlXG4gKiB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSAyLjAgd2hpY2ggaXMgYXZhaWxhYmxlIGF0XG4gKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC0yLjAsIG9yIHRoZSBBcGFjaGUgU29mdHdhcmUgTGljZW5zZSAyLjBcbiAqIHdoaWNoIGlzIGF2YWlsYWJsZSBhdCBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wLlxuICpcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBFUEwtMi4wIE9SIEFwYWNoZS0yLjBcbiAqL1xuIl19 */\"","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pp-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.scss']\n})\nexport class LandingPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"The page you are looking for is not available!<!--\\n  ~ Copyright (c) 2018 University of Stuttgart.\\n  ~\\n  ~ See the NOTICE file(s) distributed with this work for additional\\n  ~ information regarding copyright ownership.\\n  ~\\n  ~ This program and the accompanying materials are made available under the\\n  ~ terms of the Eclipse Public License 2.0 which is available at\\n  ~ http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\\n  ~ which is available at https://www.apache.org/licenses/LICENSE-2.0.\\n  ~\\n  ~ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\\n  -->\\n\\n\\n\"","module.exports = \"/*!\\n * Copyright (c) 2018 University of Stuttgart.\\n *\\n * See the NOTICE file(s) distributed with this work for additional\\n * information regarding copyright ownership.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\\n */\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9QYXR0ZXJuUGVkaWEvcGF0dGVybi1wZWRpYS9zcmMvYXBwL3BhZ2Utbm90LWZvdW5kLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9wYWdlLW5vdC1mb3VuZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7O0VDWUUiLCJmaWxlIjoic3JjL2FwcC9wYWdlLW5vdC1mb3VuZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQ29weXJpZ2h0IChjKSAyMDE4IFVuaXZlcnNpdHkgb2YgU3R1dHRnYXJ0LlxuICpcbiAqIFNlZSB0aGUgTk9USUNFIGZpbGUocykgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWxcbiAqIGluZm9ybWF0aW9uIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMgYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZVxuICogdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgMi4wIHdoaWNoIGlzIGF2YWlsYWJsZSBhdFxuICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtMi4wLCBvciB0aGUgQXBhY2hlIFNvZnR3YXJlIExpY2Vuc2UgMi4wXG4gKiB3aGljaCBpcyBhdmFpbGFibGUgYXQgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMC5cbiAqXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogRVBMLTIuMCBPUiBBcGFjaGUtMi4wXG4gKi9cblxuIiwiLyohXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTggVW5pdmVyc2l0eSBvZiBTdHV0dGdhcnQuXG4gKlxuICogU2VlIHRoZSBOT1RJQ0UgZmlsZShzKSBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbFxuICogaW5mb3JtYXRpb24gcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuXG4gKlxuICogVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscyBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlXG4gKiB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSAyLjAgd2hpY2ggaXMgYXZhaWxhYmxlIGF0XG4gKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC0yLjAsIG9yIHRoZSBBcGFjaGUgU29mdHdhcmUgTGljZW5zZSAyLjBcbiAqIHdoaWNoIGlzIGF2YWlsYWJsZSBhdCBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wLlxuICpcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBFUEwtMi4wIE9SIEFwYWNoZS0yLjBcbiAqL1xuIl19 */\"","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pp-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div style=\\\"display: flex; justify-content: space-between; align-items: baseline\\\">\\n  <h1 mat-dialog-title>{{isFirstStep ? 'Create a new Patternlanguage' : 'Define the content type of your\\n    sections'}}</h1>\\n  <button mat-flat-button (click)=\\\"close()\\\" tabindex=\\\"-1\\\">\\n    <i class=\\\"material-icons\\\">close</i>\\n  </button>\\n</div>\\n<div mat-dialog-content [formGroup]=\\\"patternLanguageForm\\\">\\n  <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around start\\\">\\n    <mat-card fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around\\\"\\n            style=\\\"margin: 10px;\\\" *ngIf=\\\"isFirstStep; else secondStep\\\">\\n    <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 24em;\\\" [floatLabel]=\\\"'always'\\\">\\n      <mat-label>Pattern language name</mat-label>\\n      <input matInput formControlName=\\\"name\\\" placeholder=\\\"Enter the name of your Pattern Language\\\">\\n      <mat-error *ngIf=\\\"saveRequested && name?.hasError('required')\\\">Dies ist ein Pflichtfeld.</mat-error>\\n      <mat-error *ngIf=\\\"saveRequested && name?.hasError('pattern')\\\">Bitte nur alphanumerische Zeichen, _ und\\n        Leerzeichen verwenden.\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\">\\n      <mat-form-field class=\\\"full-width\\\" appearance=\\\"outline\\\" style=\\\"width: 24em\\\" [floatLabel]=\\\"'always'\\\">\\n        <mat-label>Icon URL</mat-label>\\n        <input matInput formControlName=\\\"iconUrl\\\" placeholder=\\\"Enter URL of your icon\\\" type=\\\"url\\\">\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\" *ngIf=\\\"iconPreviewVisible\\\">\\n          <span class=\\\"label-preview\\\">Icon-Preview: </span>\\n          <div mat-card-avatar #iconPreview [ngStyle]=\\\"{ 'background-image': 'url(' + iconUrl?.value + ')'}\\\"\\n               class=\\\"example-header-image\\\"></div>\\n        </div>\\n        <mat-error *ngIf=\\\"saveRequested && iconUrl?.hasError('required')\\\">This field is requirec.</mat-error>\\n        <mat-error *ngIf=\\\"saveRequested && iconUrl?.hasError('pattern')\\\">Please insert a valid URL.\\n        </mat-error>\\n      </mat-form-field>\\n\\n    </div>\\n    <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 24em\\\" [floatLabel]=\\\"'always'\\\">\\n      <mat-label>Sections</mat-label>\\n      <mat-chip-list #chipList>\\n        <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around start\\\">\\n          <div *ngFor=\\\"let section of sections, let i = index\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n            <span>{{i+1}}. </span>\\n            <mat-chip fxLayout=\\\"row\\\" fxLayoutAlign=\\\"initial\\\"\\n\\n                      [selectable]=\\\"selectable\\\"\\n                      [removable]=\\\"removable\\\"\\n                      (removed)=\\\"removeSectionMatChip(section)\\\">\\n            {{section}}\\n            <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\n          </mat-chip>\\n          </div>\\n        </div>\\n      </mat-chip-list>\\n      <input\\n        placeholder=\\\"Add section (press enter to create custom section)\\\"\\n        fxFill\\n          #sectionInput\\n          [matAutocomplete]=\\\"auto\\\"\\n          [formControl]=\\\"sectionCtrl\\\"\\n          [matChipInputFor]=\\\"chipList\\\"\\n          [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\n          [matChipInputAddOnBlur]=\\\"addOnBlur\\\"\\n          (matChipInputTokenEnd)=\\\"add($event)\\\">\\n      <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"selected($event)\\\">\\n        <mat-option *ngFor=\\\"let section of filteredSections | async\\\" [value]=\\\"section\\\">\\n          {{section}}\\n        </mat-option>\\n      </mat-autocomplete>\\n    </mat-form-field>\\n  </mat-card>\\n\\n</div>\\n</div>\\n\\n<div mat-dialog-actions>\\n\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"isFirstStep = true\\\" *ngIf=\\\"!isFirstStep\\\"><i\\n    class=\\\"material-icons\\\"><i className=\\\"material-icons\\\">arrow_backward</i></i>\\n  </button>\\n\\n\\n  <button mat-raised-button color=\\\"primary\\\" *ngIf=\\\"!isFirstStep\\\" (click)=\\\"initForSecondStep()\\\"><i\\n    class=\\\"material-icons\\\">restore_page</i> Reset all Restrictions\\n  </button>\\n\\n  <button mat-raised-button color=\\\"primary\\\" *ngIf=\\\"!isFirstStep\\\" (click)=\\\"save()\\\"><i\\n    class=\\\"material-icons\\\">save</i> Save patternlanguage\\n  </button>\\n\\n\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"initForSecondStep()\\\" *ngIf=\\\"isFirstStep\\\"><i\\n    class=\\\"material-icons\\\"><i className=\\\"material-icons\\\">arrow_forward</i></i>\\n  </button>\\n</div>\\n\\n<!-- Second Screen -->\\n<ng-template #secondStep>\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around start\\\">\\n    <div [formGroup]=\\\"prefixForm\\\">\\n      <div formArrayName=\\\"prefixArray\\\">\\n        <div *ngFor=\\\"let prefixControl of prefixArray.controls,  let ind = index\\\">\\n          <div [formGroupName]=\\\"ind\\\">\\n            <mat-checkbox matInput formControlName=\\\"checked\\\"> {{prefixControl.value.prefixname}}</mat-checkbox>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div [formGroup]=\\\"newPrefixForm\\\" class=\\\"add-prefix-form\\\">\\n      <mat-form-field id=\\\"new-prefix\\\">\\n        <mat-label>Prefix</mat-label>\\n        <input matInput formControlName=\\\"prefix\\\" placeholder=\\\"Prefix\\\">\\n      </mat-form-field>\\n      <mat-form-field>\\n        <mat-label>URI</mat-label>\\n        <input matInput formControlName=\\\"uri\\\" placeholder=\\\"URI\\\">\\n      </mat-form-field>\\n\\n      <button mat-icon-button aria-label=\\\"Add new prefix\\\" (click)=\\\"onAddPrefix()\\\">\\n        <i class=\\\"material-icons\\\">add_circle</i> Add prefix\\n      </button>\\n    </div>\\n  </div>\\n\\n  <div [formGroup]=\\\"sectionDetailsGroup\\\">\\n    <div formArrayName=\\\"sectionsArray\\\">\\n      <mat-form-field style=\\\"width: 24em\\\" [floatLabel]=\\\"'always'\\\">\\n\\n        <mat-chip-list #chipList>\\n          <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around start\\\">\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\"\\n                 *ngFor=\\\"let section of sectionsArray.controls, let i = index\\\">\\n              <div [formGroupName]=\\\"i\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                <mat-chip fxLayout=\\\"row\\\" fxLayoutAlign=\\\"initial\\\"\\n                          [selectable]=\\\"selectable\\\"\\n                          [removable]=\\\"removable\\\"\\n                          (removed)=\\\"removeSectionMatChip(section)\\\">\\n                  {{sectionsArray.controls[i].value.name}}\\n                </mat-chip>\\n                <mat-form-field>\\n                  <mat-label>Restriction Type</mat-label>\\n                  <mat-select formControlName=\\\"restrictionType\\\">\\n                    <mat-option *ngFor=\\\"let option of restrictionOptions\\\"\\n                                [value]=\\\"option\\\">\\n                      {{option}}\\n                    </mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n\\n                <span *ngIf=\\\"isCardinalityInputVisible(section)\\\">&mdash;</span>\\n                <mat-form-field class=\\\"min-max-width\\\"\\n                                *ngIf=\\\"isCardinalityInputVisible(section)\\\">\\n\\n                  <mat-label>Amount</mat-label>\\n                  <input matInput type=\\\"number\\\" formControlName=\\\"cardinality\\\">\\n                </mat-form-field>\\n\\n\\n                  <span>of</span>\\n                  <mat-form-field>\\n\\n                    <mat-label>Type</mat-label>\\n                    <input type=\\\"text\\\" appearance=\\\"fill\\\" matInput\\n                           formControlName=\\\"type\\\"\\n                           [matAutocomplete]=\\\"auto\\\">\\n                    <mat-error *ngIf=\\\"!sectionsArray.controls[i]?.type?.errors\\\">Please start\\n                      type\\n                      value with a\\n                      valid prefix.\\n                    </mat-error>\\n                    <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n                      <mat-option *ngFor=\\\"let option of options\\\" [value]=\\\"option\\\">\\n                        {{option}}\\n                      </mat-option>\\n                    </mat-autocomplete>\\n                  </mat-form-field>\\n\\n              </div>\\n              <i (click)=\\\"deleteSectionRestriction(i)\\\"\\n                 class=\\\"material-icons\\\">delete</i>\\n              <i (click)=\\\"addSectionRestriction(section.value.name, i+1)\\\"\\n                 class=\\\"material-icons\\\">add_circle</i>\\n\\n            </div>\\n          </div>\\n        </mat-chip-list>\\n      </mat-form-field>\\n    </div>\\n  </div>\\n</ng-template>\\n\"","module.exports = \".example-header-image {\\n  background-image: url(\\\"https://material.angular.io/assets/img/examples/shiba1.jpg\\\");\\n  background-size: cover; }\\n\\n.add-prefix-form .mat-form-field {\\n  margin: 0 0.5em; }\\n\\n.add-prefix-form #new-prefix {\\n  width: 4em; }\\n\\n.icon-wrapper {\\n  margin-top: -1.34375em !important; }\\n\\n.label-preview {\\n  color: grey; }\\n\\n.mat-chip {\\n  height: -webkit-fit-content;\\n  height: -moz-fit-content;\\n  height: fit-content; }\\n\\n.min-max-width {\\n  width: 3em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9QYXR0ZXJuUGVkaWEvcGF0dGVybi1wZWRpYS9zcmMvYXBwL3BhdHRlcm4tbGFuZ3VhZ2UtbWFuYWdlbWVudC9jcmVhdGUtZWRpdC1wYXR0ZXJuLWxhbmd1YWdlL2NyZWF0ZS1lZGl0LXBhdHRlcm4tbGFuZ3VhZ2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtRkFBbUY7RUFDbkYsc0JBQXNCLEVBQUE7O0FBSXhCO0VBRUksZUFBZSxFQUFBOztBQUZuQjtFQUtJLFVBQVUsRUFBQTs7QUFHZDtFQUNFLGlDQUFpQyxFQUFBOztBQUduQztFQUNFLFdBQVcsRUFBQTs7QUFHYjtFQUNFLDJCQUFtQjtFQUFuQix3QkFBbUI7RUFBbkIsbUJBQW1CLEVBQUE7O0FBR3JCO0VBQ0UsVUFBVSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGF0dGVybi1sYW5ndWFnZS1tYW5hZ2VtZW50L2NyZWF0ZS1lZGl0LXBhdHRlcm4tbGFuZ3VhZ2UvY3JlYXRlLWVkaXQtcGF0dGVybi1sYW5ndWFnZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWhlYWRlci1pbWFnZSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly9tYXRlcmlhbC5hbmd1bGFyLmlvL2Fzc2V0cy9pbWcvZXhhbXBsZXMvc2hpYmExLmpwZycpO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuXG59XG5cbi5hZGQtcHJlZml4LWZvcm0ge1xuICAubWF0LWZvcm0tZmllbGQge1xuICAgIG1hcmdpbjogMCAwLjVlbTtcbiAgfVxuICAjbmV3LXByZWZpeCB7XG4gICAgd2lkdGg6IDRlbTtcbiAgfVxufVxuLmljb24td3JhcHBlciB7XG4gIG1hcmdpbi10b3A6IC0xLjM0Mzc1ZW0gIWltcG9ydGFudDtcbn1cblxuLmxhYmVsLXByZXZpZXcge1xuICBjb2xvcjogZ3JleTtcbn1cblxuLm1hdC1jaGlwIHtcbiAgaGVpZ2h0OiBmaXQtY29udGVudDtcbn1cblxuLm1pbi1tYXgtd2lkdGgge1xuICB3aWR0aDogM2VtO1xufVxuXG5cbiJdfQ== */\"","import { ChangeDetectorRef, Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatAutocomplete, MatAutocompleteSelectedEvent, MatChipInputEvent, MatDialogRef } from '@angular/material';\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, map, startWith } from 'rxjs/internal/operators';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { DialogPatternLanguageResult } from '../data/DialogPatternLanguageResult.interface';\nimport { ValidationService } from '../../core/service/validation.service';\n\n\n@Component({\n  selector: 'pp-create-edit-pattern-language',\n  templateUrl: './create-edit-pattern-language.component.html',\n  styleUrls: ['./create-edit-pattern-language.component.scss']\n})\nexport class CreateEditPatternLanguageComponent implements OnInit {\n  private sectionRestrictonValidators: ValidatorFn[];\n\n  get name(): AbstractControl {\n    return this.patternLanguageForm.get('name');\n  }\n\n  get iconUrl(): AbstractControl {\n    return this.patternLanguageForm.get('iconUrl');\n  }\n\n  get sectionsArray(): FormArray {\n    return this.sectionDetailsGroup.get('sectionsArray') as FormArray;\n  }\n\n  get prefixArray(): FormArray {\n    return this.prefixForm.get('prefixArray') as FormArray;\n  }\n\n\n  constructor(public dialogRef: MatDialogRef<CreateEditPatternLanguageComponent>, private  _fb: FormBuilder, private cdr: ChangeDetectorRef,\n              private validatorService: ValidationService) {\n    this.filteredSections = this.sectionCtrl.valueChanges.pipe(\n      startWith(null),\n      map((section: string | null) => section ? this._filter(section) : this.sectionNames.slice()));\n  }\n\n  isFirstStep = true;\n  selectable = true;\n  removable = true;\n  addOnBlur = true;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n  sectionCtrl = new FormControl();\n  filteredSections: Observable<string[]>;\n  sections: string[] = ['Icon', 'Context', 'Driving Question', 'Solution'];\n  sectionNames: string[] = ['Icon', 'Context', 'Driving Question', 'Solution', 'Solution Sketches'];\n  patternLanguageForm: FormGroup;\n  prefixForm: FormGroup;\n  newPrefixForm: FormGroup;\n  iconPreviewVisible = false;\n  saveRequested = false;\n  sectionDetailsGroup: FormGroup;\n\n\n  options: string[] = [];\n  restrictionOptions: string[] = ['only', 'some', 'min', 'exactly', 'max'];\n\n\n  @Output() saveClicked = new EventEmitter<DialogPatternLanguageResult>();\n\n\n  @ViewChild('sectionInput') sectionInput: ElementRef<HTMLInputElement>;\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\n\n  ngOnInit(): void {\n    const urlRegex = /\\b((?:[a-z][\\w-]+:(?:\\/{1,3}|[a-z0-9%])|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}\\/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()\\[\\]{};:'\".,<>?«»“”‘’]))/i;\n    this.patternLanguageForm = this._fb.group({\n      name: ['', [Validators.required, Validators.pattern('[a-zA-Z0-9_-\\s]+')]],\n      iconUrl: ['', [Validators.required, Validators.pattern(urlRegex)]]\n    });\n    this.iconUrl.valueChanges.pipe(debounceTime(1000), distinctUntilChanged()).subscribe((urlValue) => {\n      this.iconPreviewVisible = urlValue && (urlValue.startsWith('https://') || urlValue.startsWith('http://'));\n    });\n\n    this.sectionDetailsGroup = this._fb.group({\n      sectionsArray: this._fb.array([])\n    });\n\n    this.prefixForm = this._fb.group({\n      prefixArray: this._fb.array([\n        new FormGroup({\n          prefixname: new FormControl('xsd'),\n          checked: new FormControl(true),\n          uri: new FormControl('http://www.w3.org/2001/XMLSchema#'),\n          values: new FormControl([\n            'xsd:anyURI',\n            'xsd:base64Binary',\n            'xsd:boolean',\n            'xsd:byte',\n            'xsd:date',\n            'xsd:dateTime',\n            'xsd:dateTimeStamp',\n            'xsd:dayTimeDuration',\n            'xsd:decimal',\n            'xsd:double',\n            'xsd:float',\n            'xsd:gDay',\n            'xsd:gMonth',\n            'xsd:gMonthDay',\n            'xsd:gYear',\n            'xsd:gYearMonth',\n            'xsd:hexBinary',\n            'xsd:int',\n            'xsd:integer',\n            'xsd:language',\n            'xsd:long',\n            'xsd:Name',\n            'xsd:NCName',\n            'xsd:NMTOKEN',\n            'xsd:negativeInteger',\n            'xsd:nonNegativeInteger',\n            'xsd:nonPositiveInteger',\n            'xsd:normalizedString',\n            'xsd:positiveInteger',\n            'xsd:short',\n            'xsd:string',\n            'xsd:time',\n            'xsd:token',\n            'xsd:unsignedByte',\n            'xsd:unsignedInt',\n            'xsd:unsignedLong',\n            'xsd:unsignedShort'])\n        }), new FormGroup({\n          prefixname: new FormControl('dctype'),\n          checked: new FormControl(true),\n          uri: new FormControl('https://purl.org/dc/dcmitype/'),\n          values: new FormControl(['dctype:Image', 'dctype:StillImage',\n            'dctype:MovingImage',\n            'dctype:Software',\n            'dctype:Sound',\n            'dctype:Service',\n            'dctype:Event',\n            'dctype:PhysicalObject',\n            'dctype:Dataset',\n            'dctype:Collection',\n            'dctype:SizeOrDuration',\n            'dctype:Text',\n            'dctype:InteractiveResource'])\n        })\n      ])\n    });\n\n    this.updateValidatorsForSectionRestrctions(); // initialize the sectionrestrictions' validators\n    this.prefixForm.valueChanges.subscribe(() => {\n      this.updateAvailableOptions();\n      this.updateValidatorsForSectionRestrctions();\n    });\n\n    this.newPrefixForm = this._fb.group({\n      prefix: ['', []],\n      uri: ['', []]\n    });\n\n\n  }\n\n\n  add(event: MatChipInputEvent): void {\n    // Add chip only when MatAutocomplete is not open\n    // To make sure this does not conflict with OptionSelected Event\n    if (!this.matAutocomplete.isOpen) {\n      const input = event.input;\n      const value = event.value;\n\n      // Add our section\n      if ((value || '').trim()) {\n        this.sections.push(value.trim());\n      }\n\n      // Reset the input value\n      if (input) {\n        input.value = '';\n      }\n\n      this.sectionCtrl.setValue(null);\n    }\n  }\n\n  removeSectionMatChip(section: string): void {\n    const index = this.sections.indexOf(section);\n\n    if (index >= 0) {\n      this.sections.splice(index, 1);\n    }\n  }\n\n  selected(event: MatAutocompleteSelectedEvent): void {\n    if (this.sections.indexOf(event.option.viewValue) !== -1) {\n      return;\n    }\n    this.sections.push(event.option.viewValue);\n    this.sectionInput.nativeElement.value = '';\n    this.sectionCtrl.setValue(null);\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.sectionNames.filter(section => section.toLowerCase().indexOf(filterValue) === 0);\n  }\n\n  onAddPrefix(): void {\n    this.prefixArray.push(\n      new FormGroup({\n        prefixname: new FormControl(this.newPrefixForm.get('prefix').value),\n        checked: new FormControl(true),\n        uri: new FormControl(this.newPrefixForm.get('uri').value),\n        values: new FormControl([])\n      })\n    );\n  }\n\n  close(): void {\n    this.dialogRef.close();\n  }\n\n  save(): void {\n    this.saveRequested = true;\n    if (this.patternLanguageForm.valid && this.sectionDetailsGroup.valid) {\n      this.saveClicked.emit({\n        restrictions: this.sectionsArray.value,\n        sections: this.sections,\n        name: this.name.value,\n        prefixes: this.prefixArray.value,\n        iconUrl: this.iconUrl.value\n      });\n      this.dialogRef.close();\n    }\n  }\n\n  addSectionRestriction(sectionName: string, i?: number): void {\n    if (i === undefined || i === null && i !== 0) { // if no index specified, add at the end\n      i = this.sectionsArray.length;\n    }\n    const newformGroup = new FormGroup({\n      type: new FormControl('xsd:string', this.sectionRestrictonValidators),\n      cardinality: new FormControl(0),\n      restrictionType: new FormControl('only'),\n      name: new FormControl(sectionName),\n    });\n    (<FormArray>this.sectionsArray).insert(i, newformGroup);\n\n    this.cdr.detectChanges();\n  }\n\n  initForSecondStep(): void {\n    this.saveRequested = true;\n    this.patternLanguageForm.markAsTouched();\n    (<any>Object).values(this.patternLanguageForm.controls).forEach(control => {\n      control.markAsTouched();\n    });\n    if (this.patternLanguageForm.valid) {\n\n      this.isFirstStep = false;\n      while (this.sectionsArray.length > 0) {\n        this.sectionsArray.removeAt(0);\n      }\n      this.sections.forEach((section) => this.addSectionRestriction(section));\n    }\n    this.updateAvailableOptions();\n  }\n\n  updateAvailableOptions(): void {\n    this.options = [];\n    for (const control of this.prefixArray.controls) {\n      if (control.value.checked && control.value.values) {\n        this.options.push(...control.value.values);\n      }\n    }\n  }\n\n\n  isCardinalityInputVisible(section: any): boolean {\n    return section.value.restrictionType === 'max' || section.value.restrictionType === 'min' || section.value.restrictionType === 'exactly';\n  }\n\n\n  deleteSectionRestriction(i: number): void {\n    this.sectionsArray.removeAt(i);\n  }\n\n\n  private updateValidatorsForSectionRestrctions() {\n\n    const allowedPrefixes: string[] = [];\n    for (const control of this.prefixArray.controls) {\n      if (control.value.checked) {\n        allowedPrefixes.push(control.value.prefixname);\n      }\n    }\n    this.sectionRestrictonValidators = [Validators.required, ValidationService.startsWithValidPrefix(allowedPrefixes)];\n\n    for (const control of this.sectionsArray.controls) {\n      control.get('type').setValidators(this.sectionRestrictonValidators);\n\n      // trigger validation:\n      control.get('type').updateValueAndValidity();\n      control.get('type').markAsDirty();\n      control.get('type').markAsTouched();\n    }\n  }\n}\n\n","module.exports = \"<pp-navigate-back></pp-navigate-back>\\n<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\"><h2>\\n  Add a new pattern to {{plName}}\\n</h2></div>\\n<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\">\\n\\n  <td-text-editor ppEmitOnChange (onKeyup)=\\\"onChangeMarkdownText()\\\" class=\\\"markdownEditor\\\"\\n                  [(value)]=\\\"previousTextEditorValue\\\" [options]=\\\"options\\\"\\n                  #textEditor\\n                  id=\\\"textEditor\\\"></td-text-editor>\\n  <div class=\\\"preview-tile\\\">\\n\\n    <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"flex-start\\\">\\n\\n      <mat-card>\\n        <div id=\\\"preview\\\"></div>\\n      </mat-card>\\n\\n      <mat-error *ngIf=\\\"wasSaveButtonClicked && errormessages\\\">Found errors in the following sections:\\n        <div *ngFor=\\\"let message of errormessages\\\">\\n          <span>{{message}}<br></span>\\n        </div>\\n      </mat-error>\\n      <button (click)=\\\"save()\\\" class=\\\"save-button\\\" mat-raised-button color=\\\"accent\\\" style=\\\"float: right\\\"><i\\n        class=\\\"material-icons\\\">save</i>Save\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhdHRlcm4tbGFuZ3VhZ2UtbWFuYWdlbWVudC9jcmVhdGUtcGF0dGVybi9jcmVhdGUtcGF0dGVybi5jb21wb25lbnQuc2NzcyJ9 */\"","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { TdTextEditorComponent } from '@covalent/text-editor';\nimport { DefaultPlLoaderService } from '../../core/service/loader/default-pl-loader.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IriConverter } from '../../core/util/iri-converter';\nimport { Logo } from '../../core/service/data/Logo.interface';\nimport { GithubPersistenceService } from '../../core/service/github-persistence.service';\nimport * as marked from 'marked';\nimport { TokensList } from 'marked';\nimport Pattern from '../../core/model/pattern.model';\nimport { PatternOntologyService } from '../../core/service/pattern-ontology.service';\nimport { SectionResponse } from '../../core/service/data/SectionResponse.interface';\nimport { ToasterService } from 'angular2-toaster';\nimport { PlRestrictionLoaderService } from '../../core/service/loader/pattern-language-loader/pl-restriction-loader.service';\nimport { PatternLanguageSectionRestriction, SectionRestrictionsResult } from '../../core/model/PatternLanguageSectionRestriction.model';\nimport PatternPedia from '../../core/model/pattern-pedia.model';\nimport { FormControl, FormGroup, ValidationErrors, Validators } from '@angular/forms';\nimport { ValidationService } from '../../core/service/validation.service';\nimport PatternLanguage from '../../core/model/pattern-language.model';\nimport { PatternInstance } from '../../core/model/PatternInstance.interface';\nimport { switchMap } from 'rxjs/internal/operators';\nimport { PatternLanguagePatterns } from '../../core/model/pattern-language-patterns.model';\n\n\n@Component({\n  selector: 'pp-create-pattern',\n  templateUrl: './create-pattern.component.html',\n  styleUrls: ['./create-pattern.component.scss']\n})\nexport class CreatePatternComponent implements OnInit {\n\n\n  patterns: PatternInstance[];\n  plIri: string;\n  plName: string;\n  sections: string[];\n  plLogos: string[];\n  plRestrictions: Map<string, PatternLanguageSectionRestriction[]>;\n  sectionRestrictions = new Map<string, SectionRestrictionsResult>();\n  xsdPrefix = new PatternPedia().defaultPrefixes.get('xsd').replace('<', '').replace('>', '');\n  wasSaveButtonClicked = false;\n  patternValuesFormGroup: FormGroup;\n\n  defaultTextForType: Map<string, string> =\n    new Map([\n      ['https://purl.org/dc/dcmitype/Image', '![](http://)'],\n      [this.xsdPrefix + 'anyURI', '[](http://)'],\n      [this.xsdPrefix + 'integer', 'Replace this line by an Integer.'],\n      [this.xsdPrefix + 'string', ' Enter your input for this section here.'],\n      [this.xsdPrefix + 'positiveInteger', 'Replace this line by a positive Integer.'],\n      [this.xsdPrefix + 'nonNegativeInteger', 'Replace this line by a positive Integer.'],\n      [this.xsdPrefix + 'nonPositiveInteger', 'Replace this line by a negative Integer.'],\n      [this.xsdPrefix + 'negativeInteger', 'Replace this line by a negative Integer.'],\n      [this.xsdPrefix + 'date', 'dd/MM/yyyy'],\n    ]);\n\n  @ViewChild('textEditor') private _textEditor: TdTextEditorComponent;\n  previousTextEditorValue = `# Pattern name`;\n\n  options: any = {\n    // todo: hide the preview button because it forces fullscreen mode (and destroys our page layout)\n  };\n  private errormessages: string[];\n\n  constructor(private plLoader: DefaultPlLoaderService,\n              private PlRestrictionLoader: PlRestrictionLoaderService,\n              private activatedRoute: ActivatedRoute,\n              private cdr: ChangeDetectorRef,\n              private uploadService: GithubPersistenceService,\n              private pos: PatternOntologyService,\n              private toastService: ToasterService,\n              private router: Router,\n              private patternOntologyService: PatternOntologyService) {\n  }\n\n\n  ngOnInit() {\n    this.plIri = IriConverter.convertIdToIri(this.activatedRoute.snapshot.paramMap.get('plid'));\n    this.plLoader.supportedIRI = this.plIri;\n\n\n    this.patternOntologyService.loadUrisToStore([{value: this.plIri, token: null}]).then(() => {\n      this.loadPatternInfos();\n      this.plName = IriConverter.extractIndividualNameFromIri(this.plIri);\n      this.PlRestrictionLoader.supportedIRI = this.plIri;\n\n      this.loadRestrictionsAndInitPatternEditor();\n      this.loadLogoData();\n    });\n  }\n\n  reconstructSectionFromSectionResult(queryResult: SectionResponse): string {\n    return queryResult.section.value;\n  }\n\n\n\n  containsMoreThanWhitespace(teststring: string): boolean {\n    return !teststring.match(new RegExp('^\\\\s*$', 'g'));\n  }\n\n\n  save(): void {\n    const pattern = this.parsePatternInput();\n\n    const patternIris = !this.patterns ? [] : this.patterns.map(p => p.uri);\n    patternIris.push(pattern.iri);\n\n    const patternList = this.patterns.map(it => it.toPattern(this.plIri));\n    patternList.push(pattern);\n\n    const restrictions = [];\n    this.wasSaveButtonClicked = true;\n    if (!this.patternValuesFormGroup.valid) {\n      this.updateFormValidationErrors();\n      return;\n    }\n    for (const key of this.sections) {\n      if (!this.plRestrictions.get(key)) {\n        continue;\n      }\n      restrictions.push(...this.plRestrictions.get(key));\n    }\n\n    const patternLanguage = new PatternLanguage(this.plIri, this.plName, this.plLogos, patternIris, this.sections, restrictions, null);\n    this.uploadService.updatePL(patternLanguage).pipe(\n      switchMap(() => {\n        return this.uploadService.updatePLPatterns(new PatternLanguagePatterns(IriConverter.getPatternListIriForPLIri(patternLanguage.iri),\n          patternLanguage.iri, patternList));\n      }),\n      switchMap(() => {\n        return this.pos.loadUrisToStore([{value: this.plIri, token: null}]);\n\n      })\n    ).subscribe(() => {\n      this.toastService.pop('success', 'Pattern created');\n      this.router.navigate(['..'], {relativeTo: this.activatedRoute});\n    }, (error) => {\n      this.toastService.pop('error', 'Something went wrong while creating the pattern: ' + error.message);\n      console.log(error);\n    });\n\n  }\n\n  getPatternUri(patternName: string, plIri: string): string {\n    return IriConverter.getFileName(plIri) + '/' + IriConverter.removeWhitespace(patternName) + '#' + IriConverter.removeWhitespace(patternName);\n  }\n\n  parseMarkdownText(): TokensList {\n    return marked.lexer(this._textEditor.value);\n  }\n\n  getSectionTitle(section: string): string {\n    return section.split('#has')[1];\n  }\n\n  onChangeMarkdownText(): void {\n    let currentText = this.parseMarkdownText();\n    if (this.invalidTextEdit(currentText)) {\n      console.log('invalid markdowntext detected, undoing last editing');\n      this._textEditor.value = this.previousTextEditorValue;\n      currentText = this.parseMarkdownText();\n      this.toastService.pop('warning', 'Reset text', `Title of Sections changed, this is not allowed`);\n    }\n    document.getElementById('preview').innerHTML = marked.parser(currentText);\n  }\n\n  // returns if a user changed the value of the sections headers (which he is not allowed to do)\n  private invalidTextEdit(currentText: marked.TokensList): boolean {\n    // we should find a corresponding line (= that starts with ## followed by section patternName) for each section\n    for (const section of this.sections) {\n      const indexOfCorrespondingLine = currentText.findIndex(line =>\n        (line.type === 'heading' && line.depth === 2) &&\n        this.ignoreCaseAndWhitespace(line.text) ===\n        this.ignoreCaseAndWhitespace(this.addSpaceForCamelCase(this.getSectionTitle(section)))\n      );\n      if (indexOfCorrespondingLine === -1) {\n        return true;\n      }\n    }\n    // there should be only one name (= line that starts with # )\n    return !(currentText.filter(it => it.type === 'heading' && it.depth === 1).length === 1)\n      || // there should be as many second headings as sections (= line that starts with # )\n      !(currentText.filter(it => it.type === 'heading' && it.depth === 2).length === this.sections.length);\n\n  }\n\n  private parsePatternInput(): Pattern {\n    const lines = this.parseMarkdownText();\n    const patternNameIndex = lines.findIndex((it) => it.type === 'heading' && it.depth === 1);\n    const patternname = patternNameIndex !== -1 ? lines[patternNameIndex]['text'] : '';\n    const sectionMap = new Map<string, string[]>();\n    this.sections.forEach((section: string) => {\n      const sectionIndex = lines.findIndex((sec) => sec.type === 'heading' && sec.depth === 2 &&\n        this.ignoreCaseAndWhitespace(sec.text) === this.ignoreCaseAndWhitespace(this.addSpaceForCamelCase(this.getSectionTitle(section))));\n      if (sectionIndex !== -1) {\n        const sectioncontent = [];\n        for (let i = sectionIndex + 1; i < lines.length; i++) {\n          if (lines[i].type === 'heading') {\n            break;\n          }\n          if (lines[i]['text']) {\n            sectioncontent.push(lines[i]['text']);\n          }\n        }\n        if (this.patternValuesFormGroup.controls[section]) {\n          this.patternValuesFormGroup.controls[section].setValue(sectioncontent);\n        } else {\n          console.log('missing formcontrol:');\n          console.log(section);\n        }\n        const sectionType = this.sectionRestrictions.get(section).type;\n\n\n        for (let i = 0; i < sectioncontent.length; i++) {\n\n\n            if (sectionType === this.xsdPrefix + 'anyURI') {\n              sectioncontent[i] = '<' + sectioncontent[i] + '>';\n            }\n        }\n        sectionMap.set(section, sectioncontent);\n\n      }\n\n\n    });\n\n\n\n\n    return new Pattern(this.getPatternUri(patternname, this.plIri), patternname, sectionMap, this.plIri);\n\n  }\n\n\n  ignoreCaseAndWhitespace(text: string): string {\n    return text.trim().replace(new RegExp('/s', 'g'), '').toLowerCase();\n  }\n\n  addSpaceForCamelCase(text: string): string {\n    return text.replace(/([a-z])([A-Z])/g, '$1 $2');\n  }\n\n\n  getDefaultTextForSection(section: string): string {\n    if (!this.plRestrictions) {\n      return null;\n    }\n    const restrictionWithTypeIndex = this.plRestrictions.get(section).findIndex((rest: PatternLanguageSectionRestriction) => {\n      return !!rest.type;\n    });\n    const sectionType = restrictionWithTypeIndex !== -1 ? this.plRestrictions.get(section)[restrictionWithTypeIndex].type : '';\n\n    let defaultText = this.defaultTextForType.get(sectionType);\n    if (!defaultText) {\n      defaultText = 'Enter your input for this section here.';\n    }\n    const restrictions = this.sectionRestrictions.get(section);\n    if (!restrictions) {\n      return defaultText;\n    }\n\n    if (!restrictions.maxCardinality || restrictions.maxCardinality > 1) {\n      // propose listitems if multiple entries are allowed\n      defaultText = '* ' + defaultText;\n    }\n    if (restrictions.minCardinality > 1) {\n      defaultText = (defaultText + '\\n').repeat(restrictions.minCardinality - 1) + defaultText;\n    }\n    return defaultText;\n  }\n\n  private loadPatternInfos() {\n    this.plLoader.loadContentFromStore().then(res => this.patterns = Array.from(res.values()));\n  }\n\n  updateFormValidationErrors(): string {\n    if (this.patternValuesFormGroup.valid) {\n      return '';\n    }\n    this.errormessages = [];\n    Object.keys(this.patternValuesFormGroup.controls).forEach(key => {\n      const controlErrors: ValidationErrors = this.patternValuesFormGroup.controls[key].errors;\n      if (controlErrors != null) {\n        Object.keys(controlErrors).forEach(keyError => {\n          this.errormessages.push(ValidationService.getMessageForError(this.getSectionTitle(key), keyError, controlErrors[keyError]));\n        });\n      }\n    });\n  }\n\n  private loadRestrictionsAndInitPatternEditor() {\n    // load sections and restrictions\n    this.plLoader.getPLSections(this.plIri).then((res: SectionResponse[]) => {\n      this.sections = res.map((iri: any) => {\n        return this.reconstructSectionFromSectionResult(iri);\n      });\n      this.PlRestrictionLoader.loadContentFromStore().then((response: any) => {\n\n        // init formgroup based on restrictions\n        this.plRestrictions = response;\n        this.patternValuesFormGroup = new FormGroup({});\n        this.plRestrictions.forEach((value: PatternLanguageSectionRestriction[], key: string) => {\n          const allRestrictions = this.PlRestrictionLoader.getRestrictionsForSection(key, this.plRestrictions.get(key));\n          const validators = [];\n          if (allRestrictions) {\n            this.sectionRestrictions.set(key, allRestrictions);\n\n            if (allRestrictions.minCardinality && allRestrictions.minCardinality > 0) {\n              validators.push(Validators.required);\n              validators.push(Validators.minLength(allRestrictions.minCardinality));\n            }\n            if (allRestrictions.maxCardinality) {\n              validators.push(Validators.maxLength(allRestrictions.maxCardinality));\n            }\n            if (allRestrictions.type === 'https://purl.org/dc/dcmitype/Image') {\n\n              validators.push(ValidationService.xsdImage());\n\n            } else if (allRestrictions.type.startsWith(this.xsdPrefix) &&\n              (allRestrictions.type.endsWith('integer') || allRestrictions.type.endsWith('positiveInteger') || allRestrictions.type.endsWith('negativeInteger'))) {\n              validators.push(ValidationService.xsdInteger());\n            } else if (allRestrictions.type.startsWith(this.xsdPrefix) && allRestrictions.type.endsWith('anyURI')) {\n              validators.push(ValidationService.xsdAnyURI());\n            }\n          }\n          this.patternValuesFormGroup.addControl(key,\n            new FormControl(\n              '', validators\n            ));\n          }\n        );\n\n\n        for (const section of this.sections) {\n          this.previousTextEditorValue = this.previousTextEditorValue.concat(\n            '\\n ## ' + this.addSpaceForCamelCase(this.getSectionTitle(section)) + '\\n' + this.getDefaultTextForSection(section));\n        }\n        this._textEditor.value = this.previousTextEditorValue;\n        this.onChangeMarkdownText();\n      });\n\n\n    });\n\n  }\n\n  private loadLogoData() {\n    this.plLoader.getPLLogo(this.plIri).then((res: Logo[]) => {\n      this.plLogos = res.map((dataRessponse: Logo) => {\n        return dataRessponse.logo.value;\n      });\n    });\n  }\n\n\n}\n","module.exports = \"<mat-card>\\n    <ng-template ppPatternContainer [plId]=\\\"plId\\\" [pId]=\\\"pId\\\"></ng-template>\\n</mat-card>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhdHRlcm4tbGFuZ3VhZ2UtbWFuYWdlbWVudC9wYXR0ZXJuLWNvbnRhaW5lci9wYXR0ZXJuLWNvbnRhaW5lci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n    selector: 'pp-pattern-container',\n    templateUrl: './pattern-container.component.html',\n    styleUrls: ['./pattern-container.component.scss']\n})\nexport class PatternContainerComponent implements OnInit {\n\n    plId: string;\n    pId: string;\n\n    constructor(private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.plId = this.route.snapshot.params['plid'];\n        this.pId = this.route.snapshot.params['pid'];\n    }\n\n}\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { ComponentFactoryResolver, Directive, Input, OnInit, ViewContainerRef } from '@angular/core';\nimport { ComponentRegistryService } from '../../core/service/component-registry.service';\nimport { PatternRenderingComponentInterface } from '../../core/model/pattern-rendering-component.interface';\nimport { DefaultPatternRendererComponent } from '../../core/default-pattern-renderer/default-pattern-renderer.component';\n\n@Directive({\n    selector: '[ppPatternContainer]'\n})\nexport class PatternContainerDirective implements OnInit {\n\n    @Input() plId: string;\n    @Input() pId: string;\n\n    constructor(public viewContainerRef: ViewContainerRef,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private compRegistry: ComponentRegistryService) {\n    }\n\n    ngOnInit(): void {\n      const componentFactory = this.compRegistry.getPLRenderingComponents(this.plId) ?\n        this.componentFactoryResolver.resolveComponentFactory(this.compRegistry.getPLRenderingComponents(this.plId).pcomponent) :\n        this.componentFactoryResolver.resolveComponentFactory(DefaultPatternRendererComponent);\n\n      this.viewContainerRef.clear();\n        const componentRef = this.viewContainerRef.createComponent(componentFactory);\n        (<PatternRenderingComponentInterface>componentRef.instance).pId = this.pId;\n    }\n\n}\n","module.exports = \"<!--\\n  ~ Copyright (c) 2018 University of Stuttgart.\\n  ~\\n  ~ See the NOTICE file(s) distributed with this work for additional\\n  ~ information regarding copyright ownership.\\n  ~\\n  ~ This program and the accompanying materials are made available under the\\n  ~ terms of the Eclipse Public License 2.0 which is available at\\n  ~ http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\\n  ~ which is available at https://www.apache.org/licenses/LICENSE-2.0.\\n  ~\\n  ~ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\\n  -->\\n\\n<!-- tab view if there are multiple renderer for the language available -->\\n<mat-tab-group *ngIf=\\\"renderer && renderer.length > 1; else singleRenderer\\\">\\n  <!-- create a new tab for each available renderer -->\\n  <mat-tab label=\\\"{{r.label || 'Tab ' + (i+1)}}\\\" *ngFor=\\\"let r of renderer; let i = index\\\">\\n    <mat-card>\\n      <ng-template ppPatternLanguageContainer [plId]=\\\"plId\\\" [index]=\\\"i\\\"></ng-template>\\n    </mat-card>\\n  </mat-tab>\\n</mat-tab-group>\\n\\n<!-- else, render everything in a single card -->\\n<ng-template #singleRenderer>\\n  <mat-card>\\n      <ng-template ppPatternLanguageContainer [plId]=\\\"plId\\\"></ng-template>\\n  </mat-card>\\n</ng-template>\"","module.exports = \"/*!\\n * Copyright (c) 2018 University of Stuttgart.\\n *\\n * See the NOTICE file(s) distributed with this work for additional\\n * information regarding copyright ownership.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\\n */\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9QYXR0ZXJuUGVkaWEvcGF0dGVybi1wZWRpYS9zcmMvYXBwL3BhdHRlcm4tbGFuZ3VhZ2UtbWFuYWdlbWVudC9wYXR0ZXJuLWxhbmd1YWdlLWNvbnRhaW5lci9wYXR0ZXJuLWxhbmd1YWdlLWNvbnRhaW5lci5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcGF0dGVybi1sYW5ndWFnZS1tYW5hZ2VtZW50L3BhdHRlcm4tbGFuZ3VhZ2UtY29udGFpbmVyL3BhdHRlcm4tbGFuZ3VhZ2UtY29udGFpbmVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7RUNZRSIsImZpbGUiOiJzcmMvYXBwL3BhdHRlcm4tbGFuZ3VhZ2UtbWFuYWdlbWVudC9wYXR0ZXJuLWxhbmd1YWdlLWNvbnRhaW5lci9wYXR0ZXJuLWxhbmd1YWdlLWNvbnRhaW5lci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQ29weXJpZ2h0IChjKSAyMDE4IFVuaXZlcnNpdHkgb2YgU3R1dHRnYXJ0LlxuICpcbiAqIFNlZSB0aGUgTk9USUNFIGZpbGUocykgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWxcbiAqIGluZm9ybWF0aW9uIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBhbmQgdGhlIGFjY29tcGFueWluZyBtYXRlcmlhbHMgYXJlIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoZVxuICogdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgMi4wIHdoaWNoIGlzIGF2YWlsYWJsZSBhdFxuICogaHR0cDovL3d3dy5lY2xpcHNlLm9yZy9sZWdhbC9lcGwtMi4wLCBvciB0aGUgQXBhY2hlIFNvZnR3YXJlIExpY2Vuc2UgMi4wXG4gKiB3aGljaCBpcyBhdmFpbGFibGUgYXQgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMC5cbiAqXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogRVBMLTIuMCBPUiBBcGFjaGUtMi4wXG4gKi9cblxuIiwiLyohXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTggVW5pdmVyc2l0eSBvZiBTdHV0dGdhcnQuXG4gKlxuICogU2VlIHRoZSBOT1RJQ0UgZmlsZShzKSBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbFxuICogaW5mb3JtYXRpb24gcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuXG4gKlxuICogVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscyBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlXG4gKiB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSAyLjAgd2hpY2ggaXMgYXZhaWxhYmxlIGF0XG4gKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC0yLjAsIG9yIHRoZSBBcGFjaGUgU29mdHdhcmUgTGljZW5zZSAyLjBcbiAqIHdoaWNoIGlzIGF2YWlsYWJsZSBhdCBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wLlxuICpcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBFUEwtMi4wIE9SIEFwYWNoZS0yLjBcbiAqL1xuIl19 */\"","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ComponentRegistryService } from 'src/app/core/service/component-registry.service';\n\n@Component({\n    selector: 'pp-pattern-language-container',\n    templateUrl: './pattern-language-container.component.html',\n    styleUrls: ['./pattern-language-container.component.scss']\n})\nexport class PatternLanguageContainerComponent implements OnInit {\n\n    // the iri of the pattern language\n    plId: string;\n    // the list of registered renderer components for the language\n    renderer: Array<any>;\n\n    constructor(private route: ActivatedRoute,\n        private compRegistry: ComponentRegistryService) {\n    }\n\n    ngOnInit() {\n        this.plId = this.route.snapshot.params['plid'];\n        this.renderer = this.compRegistry.getRenderingComponents(this.plId);\n    }\n\n}\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { ComponentFactoryResolver, Directive, Input, OnInit, ViewContainerRef } from '@angular/core';\nimport { ComponentRegistryService } from '../../core/service/component-registry.service';\n\n@Directive({\n    selector: '[ppPatternLanguageContainer]'\n})\nexport class PatternLanguageContainerDirective implements OnInit {\n\n    @Input() plId: string;\n    @Input() index?: number;\n\n    constructor(public viewContainerRef: ViewContainerRef,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private compRegistry: ComponentRegistryService) {\n    }\n\n    ngOnInit(): void {\n        let renderingComponent = this.compRegistry.getPLRenderingComponents(this.plId, this.index);\n\n        const componentFactory = renderingComponent ?\n            this.componentFactoryResolver.resolveComponentFactory(renderingComponent.plcomponent) :\n            this.componentFactoryResolver.resolveComponentFactory(this.compRegistry.getPLRenderingComponents('default').plcomponent);\n\n        this.viewContainerRef.clear();\n        this.viewContainerRef.createComponent(componentFactory);\n    }\n\n}\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PatternLanguageManagementComponent } from './pattern-language-management/pattern-language-management.component'; // tslint:disable-line:max-line-length\nimport { PatternLanguageContainerComponent } from './pattern-language-container/pattern-language-container.component';\nimport { PatternContainerComponent } from './pattern-container/pattern-container.component';\nimport { PatternLanguageManagementResolverService } from './pattern-language-management/pattern-language-management-resolver.service';\nimport { CreatePatternComponent } from './create-pattern/create-pattern.component';\n\nconst routes: Routes = [\n    {\n        path: 'patternlanguages',\n        pathMatch: 'prefix',\n      runGuardsAndResolvers: 'always',\n      resolve: {\n        patternlanguages: PatternLanguageManagementResolverService,\n\n      },\n        children: [\n            {\n                path: '',\n                component: PatternLanguageManagementComponent\n            }, {\n            path: ':plid',\n            component: PatternLanguageContainerComponent,\n          }, {\n            path: ':plid/create-pattern',\n            component: CreatePatternComponent,\n          },\n            {\n                path: ':plid/:pid',\n                component: PatternContainerComponent\n            }\n\n        ],\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class PatternLanguageManagementRoutingModule {\n    constructor() {\n    }\n}\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PatternLanguageManagementRoutingModule } from './pattern-language-management-routing.module';\nimport { PatternLanguageManagementComponent } from './pattern-language-management/pattern-language-management.component'; // tslint:disable-line:max-line-length\nimport { CoreModule } from '../core/core.module';\nimport { PatternLanguageContainerComponent } from './pattern-language-container/pattern-language-container.component';\nimport { PatternLanguageContainerDirective } from './pattern-language-container/pattern-language-container.directive';\nimport { PatternContainerComponent } from './pattern-container/pattern-container.component';\nimport { PatternContainerDirective } from './pattern-container/pattern-container.directive';\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatButtonModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDialogModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatTabsModule,\n  MatToolbarModule\n} from '@angular/material';\nimport { CreateEditPatternLanguageComponent } from './create-edit-pattern-language/create-edit-pattern-language.component';\nimport { CreatePatternComponent } from './create-pattern/create-pattern.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ProcessOauthCallbackComponent } from '../core/component/process-oauth-callback/process-oauth-callback.component';\nimport { ToasterModule } from 'angular2-toaster';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PatternLanguageManagementRoutingModule,\n        MatBadgeModule,\n        MatButtonModule,\n        MatToolbarModule,\n        MatIconModule,\n        MatSidenavModule,\n        MatCardModule,\n        MatDialogModule,\n        MatTabsModule,\n        MatInputModule,\n      MatChipsModule,\n      MatAutocompleteModule,\n      CoreModule,\n      MatGridListModule,\n      ReactiveFormsModule,\n      FlexLayoutModule,\n      MatSelectModule,\n      MatRadioModule,\n      MatCheckboxModule,\n      ToasterModule\n    ],\n    declarations: [\n        PatternLanguageManagementComponent,\n        PatternLanguageContainerComponent,\n        PatternLanguageContainerDirective,\n        PatternContainerComponent,\n        PatternContainerDirective,\n      CreateEditPatternLanguageComponent,\n      CreatePatternComponent,\n      ProcessOauthCallbackComponent\n    ],\n  entryComponents: [\n    CreateEditPatternLanguageComponent\n  ]\n})\nexport class PatternLanguageManagementModule {\n}\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport PatternLanguage from '../../core/model/pattern-language.model';\nimport { EMPTY, from, Observable } from 'rxjs';\nimport { PatternOntologyService } from '../../core/service/pattern-ontology.service';\nimport { LinkedOpenPatternsLoader } from '../../core/service/loader/pattern-language-loader/linked-open-patterns-loader.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PatternLanguageManagementResolverService implements Resolve<Map<string, PatternLanguage>> {\n\n    constructor(private pos: PatternOntologyService,\n                private loader: LinkedOpenPatternsLoader) {\n    }\n\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Map<string, PatternLanguage>> {\n    if (!route.firstChild.params.plid) { // if we're on root page (/patternpedia), reload the content to see new patternlanguages, skipped for child routes\n      return from(this.loadLocallyHostedOntos());\n    }\n    return EMPTY;\n    }\n\n    async loadLocallyHostedOntos(): Promise<Map<string, PatternLanguage>> {\n      await this.pos.loadLinkedOpenPatternGraphs();\n      return await this.loader.loadContentFromStore();\n    }\n\n}\n","module.exports = \"<!--\\n  ~ Copyright (c) 2018 University of Stuttgart.\\n  ~\\n  ~ See the NOTICE file(s) distributed with this work for additional\\n  ~ information regarding copyright ownership.\\n  ~\\n  ~ This program and the accompanying materials are made available under the\\n  ~ terms of the Eclipse Public License 2.0 which is available at\\n  ~ http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\\n  ~ which is available at https://www.apache.org/licenses/LICENSE-2.0.\\n  ~\\n  ~ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\\n  -->\\n\\n<mat-toolbar style=\\\"margin-top: 10px; margin-bottom: 10px\\\">\\n    <button style=\\\"margin-left: 10px\\\" mat-raised-button color=\\\"accent\\\" (click)=\\\"reloadPatternRepo()\\\"><i\\n            class=\\\"material-icons\\\">autorenew</i> Reload\\n    </button>\\n  <button style=\\\"margin-left: 10px\\\" mat-raised-button color=\\\"accent\\\" (click)=\\\"getOAuthToken()\\\"\\n          *ngIf=\\\"showAuthentificationButton\\\"><i\\n    class=\\\"material-icons\\\">info</i> Autorize Github\\n  </button>\\n  <span *ngIf=\\\"!showAuthentificationButton\\\"> <i\\n    class=\\\"material-icons\\\">info</i> You authorized PatternPedia to use your github account </span>\\n\\n</mat-toolbar>\\n<div class=\\\"container\\\">\\n  <mat-progress-spinner mode=\\\"indeterminate\\\" *ngIf=\\\"isLoadingPattern\\\"></mat-progress-spinner>\\n  <mat-card class=\\\"landing-card\\\" *ngFor=\\\"let patternLanguage of patternLanguages\\\">\\n        <mat-card-header>\\n          <img *ngIf=\\\"patternLanguage?.logos && patternLanguage.logos[0]; else noImageAvatar\\\" mat-card-avatar\\n               [src]=\\\"patternLanguage.logos[0]\\\">\\n            <ng-template #noImageAvatar><img mat-card-avatar [src]=\\\"'https://placekitten.com/200/300'\\\"></ng-template>\\n\\n          <mat-card-title *ngIf=\\\"patternLanguage?.name && '' !== patternLanguage.name; else noPLName\\\"\\n                          style=\\\"width: 10rem\\\">\\n                {{patternLanguage.name}}\\n            </mat-card-title>\\n            <ng-template #noPLName>\\n                <mat-card-title style=\\\"width: 10rem\\\">\\n                    No Name Provided\\n                </mat-card-title>\\n            </ng-template>\\n        </mat-card-header>\\n    <img mat-card-image *ngIf=\\\"patternLanguage?.logos[0]; else noImage\\\" [src]=\\\"patternLanguage.logos[0]\\\">\\n        <ng-template #noImage><img mat-card-image [src]=\\\"'https://placekitten.com/200/300'\\\"></ng-template>\\n        <mat-card-actions>\\n            <div style=\\\"text-align: center\\\">\\n              <button matBadge=\\\"{{patternLanguage?.patternIRIs?.length}}\\\" mat-stroked-button color=\\\"primary\\\"\\n                      (click)=\\\"navigateToPL(patternLanguage.id)\\\"><i class=\\\"material-icons\\\">pageview</i>View\\n                </button>\\n            </div>\\n        </mat-card-actions>\\n    </mat-card>\\n  <mat-card class=\\\"landing-card center-content add-card\\\" id=\\\"add-card\\\"\\n            (click)=\\\"showAuthentificationButton ? '' : goToPatternLanguageCreation()\\\" *ngIf=\\\"!isLoadingPattern\\\">\\n    <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around center\\\"><i class=\\\"material-icons\\\">add_box</i>\\n      <span id=\\\"hideIfNotHovered\\\" *ngIf=\\\"showAuthentificationButton\\\"><br>Please authorize Github </span>\\n    </div>\\n  </mat-card>\\n</div>\\n\\n\"","module.exports = \"/*!\\n * Copyright (c) 2018 University of Stuttgart.\\n *\\n * See the NOTICE file(s) distributed with this work for additional\\n * information regarding copyright ownership.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\\n */\\n.add-card:not(:hover) #hideIfNotHovered {\\n  display: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9QYXR0ZXJuUGVkaWEvcGF0dGVybi1wZWRpYS9zcmMvYXBwL3BhdHRlcm4tbGFuZ3VhZ2UtbWFuYWdlbWVudC9wYXR0ZXJuLWxhbmd1YWdlLW1hbmFnZW1lbnQvcGF0dGVybi1sYW5ndWFnZS1tYW5hZ2VtZW50LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9wYXR0ZXJuLWxhbmd1YWdlLW1hbmFnZW1lbnQvcGF0dGVybi1sYW5ndWFnZS1tYW5hZ2VtZW50L3BhdHRlcm4tbGFuZ3VhZ2UtbWFuYWdlbWVudC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7O0VDWUU7QURFRjtFQUVJLGFBQWEsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3BhdHRlcm4tbGFuZ3VhZ2UtbWFuYWdlbWVudC9wYXR0ZXJuLWxhbmd1YWdlLW1hbmFnZW1lbnQvcGF0dGVybi1sYW5ndWFnZS1tYW5hZ2VtZW50LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTggVW5pdmVyc2l0eSBvZiBTdHV0dGdhcnQuXG4gKlxuICogU2VlIHRoZSBOT1RJQ0UgZmlsZShzKSBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbFxuICogaW5mb3JtYXRpb24gcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuXG4gKlxuICogVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscyBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlXG4gKiB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSAyLjAgd2hpY2ggaXMgYXZhaWxhYmxlIGF0XG4gKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC0yLjAsIG9yIHRoZSBBcGFjaGUgU29mdHdhcmUgTGljZW5zZSAyLjBcbiAqIHdoaWNoIGlzIGF2YWlsYWJsZSBhdCBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wLlxuICpcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBFUEwtMi4wIE9SIEFwYWNoZS0yLjBcbiAqL1xuXG4uYWRkLWNhcmQ6bm90KDpob3Zlcikge1xuICAjaGlkZUlmTm90SG92ZXJlZCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuIiwiLyohXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTggVW5pdmVyc2l0eSBvZiBTdHV0dGdhcnQuXG4gKlxuICogU2VlIHRoZSBOT1RJQ0UgZmlsZShzKSBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbFxuICogaW5mb3JtYXRpb24gcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuXG4gKlxuICogVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscyBhcmUgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlXG4gKiB0ZXJtcyBvZiB0aGUgRWNsaXBzZSBQdWJsaWMgTGljZW5zZSAyLjAgd2hpY2ggaXMgYXZhaWxhYmxlIGF0XG4gKiBodHRwOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC0yLjAsIG9yIHRoZSBBcGFjaGUgU29mdHdhcmUgTGljZW5zZSAyLjBcbiAqIHdoaWNoIGlzIGF2YWlsYWJsZSBhdCBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wLlxuICpcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBFUEwtMi4wIE9SIEFwYWNoZS0yLjBcbiAqL1xuLmFkZC1jYXJkOm5vdCg6aG92ZXIpICNoaWRlSWZOb3RIb3ZlcmVkIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuIl19 */\"","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { ChangeDetectorRef, Component, NgZone, OnInit } from '@angular/core';\nimport PatternLanguage from '../../core/model/pattern-language.model';\nimport { PatternOntologyService } from '../../core/service/pattern-ontology.service';\nimport { LoaderRegistryService } from '../../core/service/loader/pattern-language-loader/loader-registry.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { globals } from '../../globals';\nimport { LinkedOpenPatternsLoader } from '../../core/service/loader/pattern-language-loader/linked-open-patterns-loader.service';\nimport { CreateEditPatternLanguageComponent } from '../create-edit-pattern-language/create-edit-pattern-language.component';\nimport { MatDialog } from '@angular/material';\nimport { GithubPersistenceService } from '../../core/service/github-persistence.service';\nimport { DialogPatternLanguageResult } from '../data/DialogPatternLanguageResult.interface';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ToasterService } from 'angular2-toaster';\nimport { IriConverter } from '../../core/util/iri-converter';\nimport { PatternLanguagePatterns } from '../../core/model/pattern-language-patterns.model';\nimport { switchMap, tap } from 'rxjs/internal/operators';\nimport { forkJoin } from 'rxjs';\n\n@Component({\n    selector: 'pp-pattern-language-management',\n    templateUrl: './pattern-language-management.component.html',\n    styleUrls: ['./pattern-language-management.component.scss']\n})\n\n\nexport class PatternLanguageManagementComponent implements OnInit {\n\n    // NOTE: These are currently the config params\n    private urlPatternPedia = globals.urlPatternRepoOntology;\n    private patternPediaInstance = globals.iriPatternRepoInstance;\n  showAuthentificationButton = true;\n\n  patternLanguages: Array<PatternLanguage>;\n\n    constructor(private pos: PatternOntologyService,\n                private cdr: ChangeDetectorRef,\n                private lr: LoaderRegistryService,\n                private router: Router,\n                private activatedRoute: ActivatedRoute,\n                private zone: NgZone,\n                private loader: LinkedOpenPatternsLoader,\n                private dialog: MatDialog,\n                private uploadService: GithubPersistenceService,\n                private _cookieService: CookieService,\n                private _toasterService: ToasterService) {\n    }\n\n    getTurtle(): void {\n        this.pos.getOntologyAsTurtle()\n            .subscribe((turtle) => {\n                console.log(turtle);\n            });\n    }\n\n    ngOnInit() {\n        this.patternLanguages = Array.from<PatternLanguage>(this.activatedRoute.snapshot.data.patternlanguages.values())\n            .sort((pl1: PatternLanguage, pl2: PatternLanguage) => {\n                if (pl1.name > pl2.name) {\n                    return 1;\n                }\n                if (pl1.name < pl2.name) {\n                    return -1;\n                }\n                return 0;\n            });\n      this.showAuthentificationButton = !this._cookieService.get('patternpedia_github_token');\n\n    }\n\n  // reload the current data from https://purl.org/patternpedia that contains all patternlangauges\n  async reloadPatternRepo() {\n    await this.pos.loadLinkedOpenPatternGraphs();\n    return this.loader.loadContentFromStore()\n      .then(async (languages) => {\n        this.patternLanguages = await Array.from<PatternLanguage>(languages.values())\n          .sort(this.sortPatternlanguages);\n        this.cdr.detectChanges();\n      }).then(() => {\n        this._toasterService.pop('success', 'Reloaded Linked Open Patterns from Patternpedia');\n      });\n    }\n\n    navigateToPL(id: string): void {\n        this.zone.run(() => {\n            this.router.navigate([id], {relativeTo: this.activatedRoute});\n        });\n    }\n\n\n  getOAuthToken(): void {\n    window.open('https://github.com/login/oauth/authorize?client_id=2c81550780e16f8c2642&scope=repo', '_blank');\n  }\n\n  goToPatternLanguageCreation(): void {\n    this.pos.getOntologyAsTurtle().subscribe(res => console.log(res));\n    const dialogRef = this.dialog.open(CreateEditPatternLanguageComponent);\n\n    // update patternpedia, when user saves a patternlanguage:\n    (<CreateEditPatternLanguageComponent> dialogRef.componentInstance).saveClicked.subscribe((result: DialogPatternLanguageResult) => {\n      const patternlanguage = new PatternLanguage(this.urlPatternPedia + '/patternlanguages/' + result.name.replace(/\\s/g, ''),\n        result.name, [result.iconUrl], null, result.sections, result.restrictions, result.prefixes);\n      const patternLanguagePatterns = new PatternLanguagePatterns(IriConverter.getPatternListIriForPLIri(patternlanguage.iri), patternlanguage.iri, []);\n\n      console.log(patternlanguage.iri);\n      console.log(patternLanguagePatterns.iri);\n      this.uploadService.uploadPatternLanguage(patternlanguage).pipe(\n        switchMap(() => {\n          return this.uploadService.addPatternLanguageToPatternPedia(patternlanguage, this.patternLanguages);\n        }),\n        switchMap(() => {\n          return this.uploadService.uploadPLPatterns(patternLanguagePatterns);\n        }),\n        tap(() => this._toasterService.pop('success', 'Created new patternlanguage')),\n        switchMap(() => {\n          return forkJoin(\n            // load the new patternlanguage's data into the store, so we can use it's metadata when we navigate to it\n\n            this.pos.loadUrisToStore([{value: patternlanguage.iri, token: null}]),\n            // load the updated patternpedia file which contains the new patternlanguage into store\n            this.pos.loadUrisToStore([{value: 'https://purl.org/patternpedia', token: null}]));\n        })\n      ).subscribe((res) => { // update view, because our store data has changed (new patternlanguage)\n        this.reloadPatternLanguageFromStore();\n      });\n    });\n  }\n\n  // function used to sort the patternlanguages (by name)\n  private sortPatternlanguages(pl1: PatternLanguage, pl2: PatternLanguage): number {\n    if (pl1.name > pl2.name) {\n      return 1;\n    }\n    if (pl1.name < pl2.name) {\n      return -1;\n    }\n    return 0;\n  }\n\n  // retrieve all the patternlanguage from our triple store and update the view\n  private reloadPatternLanguageFromStore() {\n    this.loader.loadContentFromStore().then(async (languages) => {\n        this.patternLanguages = await Array.from<PatternLanguage>(languages.values())\n          .sort(this.sortPatternlanguages);\n        this._toasterService.pop('success', 'Reloaded Linked Open Patterns from Patternpedia');\n      },\n      (error) => {\n        this._toasterService.pop('error', `An error occured while loading Linked Open Patterns from Patternpedia: ${error.message}`);\n      }\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SolutionLanguageManagementComponent } from './solution-language-management/solution-language-management.component';\n\nconst routes: Routes = [\n    {\n        path: 'solutionlanguages',\n        pathMatch: 'prefix',\n        children: [\n            {\n                path: '',\n                component: SolutionLanguageManagementComponent\n            },\n        ]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class SolutionLanguageManagementRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SolutionLanguageManagementRoutingModule } from './solution-language-management-routing.module';\nimport { SolutionLanguageManagementComponent } from './solution-language-management/solution-language-management.component';\n\n@NgModule({\n  declarations: [SolutionLanguageManagementComponent],\n  imports: [\n    CommonModule,\n    SolutionLanguageManagementRoutingModule\n  ]\n})\nexport class SolutionLanguageManagementModule { }\n","module.exports = \"<p>\\n  solution-language-management works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NvbHV0aW9uLWxhbmd1YWdlLW1hbmFnZW1lbnQvc29sdXRpb24tbGFuZ3VhZ2UtbWFuYWdlbWVudC9zb2x1dGlvbi1sYW5ndWFnZS1tYW5hZ2VtZW50LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pp-solution-language-management',\n  templateUrl: './solution-language-management.component.html',\n  styleUrls: ['./solution-language-management.component.scss']\n})\nexport class SolutionLanguageManagementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<p>\\n  test works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3QvdGVzdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { PatternOntologyService } from '../core/service/pattern-ontology.service';\nimport { forkJoin, Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n    selector: 'pp-test',\n    templateUrl: './test.component.html',\n    styleUrls: ['./test.component.scss']\n})\nexport class TestComponent implements OnInit {\n\n    constructor(private pos: PatternOntologyService,\n                private http: HttpClient) {\n    }\n\n    ngOnInit() {\n        console.log('HELLO');\n        this.doStuff();\n    }\n\n    async doStuff() {\n        console.log('LOADING Ontologies...');\n        const loadResult = await this.load().toPromise();\n        console.log('LOADED Ontologies!');\n        const store = await this.createNewStore().toPromise();\n        this.registerDefaultNameSpaces(store);\n        console.log('LOADING https://purl.org/patternpedia to store');\n        console.log('Result: ', await this.loadToStore(store, 'text/turtle',\n            loadResult[0], 'https://purl.org/patternpedia').toPromise());\n        console.log('LOADING https://purl.org/patternpedia/cloudcomputingpatterns to store');\n        console.log('Result: ', await this.loadToStore(store, 'text/turtle',\n            loadResult[1], 'https://purl.org/patternpedia/cloudcomputingpatterns').toPromise());\n        console.log('LOADING https://purl.org/patternpedia/cloudcomputingpatterns/elasticinfrastructure to store');\n        console.log('Result: ', await this.loadToStore(store, 'text/turtle',\n            loadResult[2], 'https://purl.org/patternpedia/cloudcomputingpatterns/elasticinfrastructure').toPromise());\n        console.log('LOADING https://purl.org/patternpedia/cloudcomputingpatterns/elasticloadbalancer to store');\n        console.log('Result: ', await this.loadToStore(store, 'text/turtle',\n            loadResult[3], 'https://purl.org/patternpedia/cloudcomputingpatterns/elasticloadbalancer').toPromise());\n        console.log('LOADING https://purl.org/patternpedia/internetofthingspatterns to store');\n        console.log('Result: ', await this.loadToStore(store, 'text/turtle',\n            loadResult[4], 'https://purl.org/patternpedia/internetofthingspatterns').toPromise());\n        // const triples = await this.exportGraphAsTriples(store, 'https://purl.org/patternpedia').toPromise();\n        this.selectPatternGraphs(store);\n        // this.loadGraph(store);\n        // this.loadNode(store);\n        // this.updateValue(store);\n    }\n\n    updateValue(store: any) {\n        store.graph('https://purl.org/patternpedia/cloudcomputingpatterns/elasticloadbalancer', (err, graph) => {\n            console.log(graph.toNT());\n            console.log('---------------');\n            graph.add(\n                store.rdf.createTriple(\n                    store.rdf.createNamedNode('https://purl.org/patternpedia/cloudcomputingpatterns/elasticloadbalancer#ElasticLoadBalancer'),\n                    store.rdf.createNamedNode('https://purl.org/patternpedia/cloudcomputingpatterns#hasContext'),\n                    store.rdf.createLiteral('This is the new Context')\n                )\n            );\n            console.log(graph.toNT());\n        });\n    }\n\n    loadGraph(store: any) {\n        store.graph('https://purl.org/patternpedia/cloudcomputingpatterns/elasticloadbalancer', (err, result) => {\n            console.log(result.toNT());\n        });\n    }\n\n    loadNode(store: any) {\n        store.node('https://purl.org/patternpedia/cloudcomputingpatterns/elasticloadbalancer#ElasticLoadBalancer',\n            'https://purl.org/patternpedia/cloudcomputingpatterns/elasticloadbalancer', (err, result) => {\n                console.log(result.toNT());\n            });\n    }\n\n    selectPatternGraphs(store: any) {\n        const mResult = new Map();\n        const qry = `SELECT DISTINCT ?patterngraph ?type ?logo ?pattern\n                             WHERE {\n                                <https://purl.org/patternpedia#LinkedOpenPatterns> pp:containsPatternGraph ?patterngraph .\n                                ?patterngraph a ?type .\n                                ?patterngraph pp:containsPattern ?pattern .\n                                ?patterngraph pp:hasLogo ?logo .\n                                FILTER (?type != owl:NamedIndividual)\n                              }\n                    ORDER BY ?patterngraph`;\n        store.execute(qry,\n            [\n                'https://purl.org/patternpedia',\n                'https://purl.org/patternpedia/cloudcomputingpatterns'\n            ],\n            [],\n            (err, result) => {\n                console.log(JSON.stringify(result));\n                // for (const entry of result) {\n                //     mResult.set(entry.patterngraph.value, {name: entry.patterngraph.value});\n                // }\n            });\n        // store.execute('SELECT * { ?s ?p ?o }',\n        //     ['https://purl.org/patternpedia',\n        //     'https://purl.org/patternpedia/cloudcomputingpatterns',\n        //     'https://purl.org/patternpedia/cloudcomputingpatterns/elasticinfrastructure',\n        //     'https://purl.org/patternpedia/cloudcomputingpatterns/elasticloadbalancer',\n        //     'https://purl.org/patternpedia/internetofthingspatterns'],\n        //     [],\n        //     (err, result) => {\n        //         console.log('-->', result);\n        // });\n        // store.execute(qry,\n        //     ['https://purl.org/patternpedia'],\n        //     [],\n        //     (err, results) => {\n        //         if (!err) {\n        //             console.log('->', results);\n        //         } else {\n        //             console.error('X', err);\n        //         }\n        //     });\n    }\n\n    exportGraphAsTriples(store: any, graphIri: string): Observable<string> {\n        return Observable.create(observer => {\n            store.graph(graphIri, (err, result) => {\n                if (!err) {\n                    observer.next(result.toNT());\n                    observer.complete();\n                } else {\n                    observer.error(err);\n                }\n            });\n        });\n    }\n\n    loadToStore(store: any, mediaType: string, data: string, graphIri: string): Observable<number> {\n        return Observable.create(observer => {\n            store.load(mediaType, data, graphIri, (err, result) => {\n                if (!err) {\n                    observer.next(result);\n                    observer.complete();\n                } else {\n                    observer.error(err);\n                }\n            });\n        });\n    }\n\n    load(): Observable<any> {\n        const observables = [\n            this.http.get('assets/patternpedia.ttl', {responseType: 'text'}),\n            this.http.get('assets/cloudcomputingpatterns/cloudcomputingpatterns.ttl', {responseType: 'text'}),\n            this.http.get('assets/cloudcomputingpatterns/elasticinfrastructure.ttl', {responseType: 'text'}),\n            this.http.get('assets/cloudcomputingpatterns/elasticloadbalancer.ttl', {responseType: 'text'}),\n            this.http.get('assets/internetofthingspatterns/internetofthingspatterns.ttl', {responseType: 'text'})\n        ];\n        return forkJoin(observables);\n    }\n\n    /**\n     * Creates a new store with registered default namespaces.\n     */\n    createNewStore(): Observable<any> {\n        return Observable.create(observer => {\n            rdfstore.create((err, store) => {\n                if (!err) {\n                    this.registerDefaultNameSpaces(store);\n                    observer.next(store);\n                    observer.complete();\n                } else {\n                    observer.error(err);\n                }\n            });\n        });\n    }\n\n    /**\n     * Registers default namespaces to given store.\n     * @param store\n     */\n    registerDefaultNameSpaces(store: any): void {\n        store.registerDefaultNamespace('owl', 'http://www.w3.org/2002/07/owl#');\n        store.registerDefaultNamespace('rdf', 'http://www.w3.org/1999/02/22-rdf-syntax-ns#');\n        store.registerDefaultNamespace('rdfs', 'http://www.w3.org/2000/01/rdf-schema#');\n        store.registerDefaultNamespace('xsd', 'http://www.w3.org/2001/XMLSchema#');\n        store.registerDefaultNamespace('pp', 'https://purl.org/patternpedia#');\n    }\n\n}\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\n// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","/*\n * Copyright (c) 2018 University of Stuttgart.\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n */\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\nimport * as jQuery from './libs/jquery-1.3.2.js';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":""}