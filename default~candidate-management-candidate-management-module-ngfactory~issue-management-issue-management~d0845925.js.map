{"version":3,"sources":["./src/app/core/candidate-management/_models/candidate.model.ts","./src/app/core/candidate-management/index.ts","./src/app/core/component/comment-list/comment-list.component.html","./src/app/core/component/comment-list/comment-list.component.ts","./src/app/core/component/rating/rating.component.html","./src/app/core/component/rating/rating.component.ts","./src/app/core/model/rating.enum.ts"],"names":[],"mappings":"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","file":"default~candidate-management-candidate-management-module-ngfactory~issue-management-issue-management~d0845925.js","sourcesContent":["import { PAComment } from \"../../model/comment\";\n\nexport class Candidate {\n    comments: PAComment[];\n    content: string;\n    iconUrl: any;\n    id: string;\n    name: string;\n    patternLanguageId: string;\n    patternLanguageName: string;\n    rating: number = 0;\n    uri: string;\n    version: string = '0.1.0';\n  \n    constructor()\n    constructor(_content: string, _name: string, _patternLanguageId: string)\n    constructor(_content?: string, _name?: string, _patternLanguageId?: string) {\n      this.content = _content;\n      this.name = _name;\n      this.patternLanguageId = _patternLanguageId;\n    }\n  }","// Models\nexport { Candidate } from './_models/candidate.model'\nexport { CandidateComment } from './_models/candidate-comment.model';\n\n// Services\nexport { CandidateManagementService } from './_services/candidate-management.service';\n\n// Store\nexport { CandidateManagementStore } from './_store/candidate-management.store';\n","<div class=\"container\">\n    <div class=\"container-comment\">\n        <mat-form-field appearance=\"standard\">\n            <mat-label>Comment</mat-label>\n            <textarea matInput [(ngModel)]=\"comment\" name=\"comment\"></textarea>\n        </mat-form-field>\n        <div>\n            <button mat-flat-button mat-flat-button type=\"button\" color=\"\" (click)=\"cancelComment()\">Cancel </button>\n            <button mat-flat-button mat-flat-button type=\"button\" color=\"primary\" (click)=\"addComment()\">Comment\n            </button>\n        </div>\n    </div>\n    <mat-list>\n        <mat-list-item *ngFor=\"let comment of data\">\n            <div class=\"container-text\">\n                <p matLine> {{comment.id}} </p>\n                <p matLine> {{comment.text}} </p>\n                <p matLine> Rating {{comment.rating}} </p>\n                <p matLine> User {{comment.user}} </p>\n            </div>\n            <div class=\"container-rating\">\n                <pp-rating [row]=\"false\" [rating]=\"comment.rating\" (userRatingCurrent)=\"updateCommentRating($event, comment)\"></pp-rating>\n            </div>\n        </mat-list-item>\n    </mat-list>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { IssueComment } from '../../issue-management';\nimport { Rating } from '../../model/rating.enum';\n\nexport interface IssueCommentRatingEvent {\n  issueComment: IssueComment,\n  issueCommentRating: Rating,\n}\n\n@Component({\n  selector: 'pp-comment-list',\n  templateUrl: './comment-list.component.html',\n  styleUrls: ['./comment-list.component.scss']\n})\nexport class CommentListComponent implements OnInit {\n\n  @Input() data: IssueComment[];\n  @Output() createComment: EventEmitter<IssueComment> = new EventEmitter<IssueComment>();\n  @Output() commentRating: EventEmitter<IssueCommentRatingEvent> = new EventEmitter<IssueCommentRatingEvent>();\n  \n  comment: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  cancelComment() {\n    this.comment = '';\n  }\n\n  addComment() {\n    const commentIssue = {} as IssueComment;\n    commentIssue.text = this.comment\n    this.createComment.emit(commentIssue);\n    this.comment = '';\n  }\n\n  updateCommentRating(rating: Rating, comment: IssueComment) {\n    console.log('User Upvoted Comment', rating, comment);\n    const issueCommentRatingEvent = {} as IssueCommentRatingEvent;\n    issueCommentRatingEvent.issueComment = comment;\n    issueCommentRatingEvent.issueCommentRating = rating;\n    this.commentRating.emit(issueCommentRatingEvent);\n  }\n\n}\n","<div *ngIf=\"row\" class=\"container-row\">\n    <button mat-flat-button mat-flat-button type=\"button\" color=\"primary\" (click)=\"up()\">Up </button>\n    <span class=\"rating\"> {{rating}} </span>\n    <button class=\"item\" mat-flat-button mat-flat-button type=\"button\" color=\"warn\" (click)=\"down()\">Down</button>\n</div>\n\n<div *ngIf=\"!row\" class=\"container-column\">\n    <button mat-flat-button mat-flat-button type=\"button\" color=\"primary\" (click)=\"up()\">Up </button>\n    <span class=\"rating\"> {{rating}} </span>\n    <button class=\"item\" mat-flat-button mat-flat-button type=\"button\" color=\"warn\" (click)=\"down()\">Down</button>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Rating } from '../../model/rating.enum';\n\n@Component({\n  selector: 'pp-rating',\n  templateUrl: './rating.component.html',\n  styleUrls: ['./rating.component.scss']\n})\nexport class RatingComponent implements OnInit {\n\n  @Input() row: boolean = true;\n  @Input() rating: number;\n  @Input() userRatingPast: number;\n  @Output() userRatingCurrent = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  up() {\n    this.userRatingCurrent.emit(Rating.UP);\n  }\n\n  down(){\n    this.userRatingCurrent.emit(Rating.DOWN);\n  } \n\n}\n","export enum Rating {\n    UP = 'up',\n    DOWN = 'down',\n  }"],"sourceRoot":"webpack:///"}